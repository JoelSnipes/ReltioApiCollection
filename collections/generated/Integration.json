{
    "item": [
        {
            "name": "DTSS",
            "description": "",
            "item": [
                {
                    "id": "4695fcff-7c7e-4f25-88c9-406b1fec0818",
                    "name": "/services/dtss/entities",
                    "request": {
                        "name": "/services/dtss/entities",
                        "description": {
                            "content": "The API returns a list of entities from the data tenant that meet the criteria of the specified parameters.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dtss",
                                "entities"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "activeness",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Search query filter for Data Tenant. This enables filtering the entities based on a condition. The format for the filter query parameter is: <b>filter=({Condition Type}[AND/OR {Condition Type}]*)</b>",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "The positive integer value to identify maximum number of entities to return in a response. It can be used to organize pagination in combination with the <b>offset</b> parameter. The default value is <b>50</b>.",
                                        "type": "text/plain"
                                    },
                                    "key": "max",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "The positive integer value to identify starting what element in a result set must be returned in a response. It can be used to organize pagination in combination with the <b>limit</b> parameter. The default value is <b>0</b>.",
                                        "type": "text/plain"
                                    },
                                    "key": "offset",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Sort the results based on a property, such as entity type.",
                                        "type": "text/plain"
                                    },
                                    "key": "sort",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Show the results in the ascending or descending order in the response.",
                                        "type": "text/plain"
                                    },
                                    "key": "order",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Comma-separated list of different options which affect entity's JSON content in the response. Available options:<br><ul><li><b>sendHidden:</b> disabled by default, the entity's JSON contains hidden attributes if this option is enabled.</li><li><b>ovOnly:</b> return only attribute values that have the ov=true flag.</li><li><b>nonOvOnly:</b> return only attribute values that have the <b>ov=false</b> flag. If you have a nested or reference attribute value, where <b>ov=true</b>, but sub-attributes, where <b>ov=false</b>, then these sub-attributes will not appear in the response.</li><li><b>searchByOv:</b> Search and sort by all attributes with ov only; disabled by default.</li></ul></br>",
                                        "type": "text/plain"
                                    },
                                    "key": "options",
                                    "value": "<string>"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required) The ID of the Data tenant for which the entities must be searched.",
                                    "type": "text/plain"
                                },
                                "key": "DataTenant",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required) The ID of the Customer tenant for which the entities must be searched.",
                                    "type": "text/plain"
                                },
                                "key": "CustomerTenant",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "Specifies if you want to search metadata along with the entities.",
                                    "type": "text/plain"
                                },
                                "key": "SearchMetadata",
                                "value": "<string>"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "6c38d0be-d845-4c2f-9c9e-9be4dd6a38ad",
                            "name": "successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dtss",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "",
                                                "type": "text/plain"
                                            },
                                            "key": "activeness",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Search query filter for Data Tenant. This enables filtering the entities based on a condition. The format for the filter query parameter is: <b>filter=({Condition Type}[AND/OR {Condition Type}]*)</b>",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "The positive integer value to identify maximum number of entities to return in a response. It can be used to organize pagination in combination with the <b>offset</b> parameter. The default value is <b>50</b>.",
                                                "type": "text/plain"
                                            },
                                            "key": "max",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "The positive integer value to identify starting what element in a result set must be returned in a response. It can be used to organize pagination in combination with the <b>limit</b> parameter. The default value is <b>0</b>.",
                                                "type": "text/plain"
                                            },
                                            "key": "offset",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Sort the results based on a property, such as entity type.",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Show the results in the ascending or descending order in the response.",
                                                "type": "text/plain"
                                            },
                                            "key": "order",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect entity's JSON content in the response. Available options:<br><ul><li><b>sendHidden:</b> disabled by default, the entity's JSON contains hidden attributes if this option is enabled.</li><li><b>ovOnly:</b> return only attribute values that have the ov=true flag.</li><li><b>nonOvOnly:</b> return only attribute values that have the <b>ov=false</b> flag. If you have a nested or reference attribute value, where <b>ov=true</b>, but sub-attributes, where <b>ov=false</b>, then these sub-attributes will not appear in the response.</li><li><b>searchByOv:</b> Search and sort by all attributes with ov only; disabled by default.</li></ul></br>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) The ID of the Data tenant for which the entities must be searched.",
                                            "type": "text/plain"
                                        },
                                        "key": "DataTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) The ID of the Customer tenant for which the entities must be searched.",
                                            "type": "text/plain"
                                        },
                                        "key": "CustomerTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "Specifies if you want to search metadata along with the entities.",
                                            "type": "text/plain"
                                        },
                                        "key": "SearchMetadata",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "<string>",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "ce32ea8e-b13a-44ae-a3fe-67d046f5e709",
                    "name": "/services/dtss/entities",
                    "request": {
                        "name": "/services/dtss/entities",
                        "description": {
                            "content": "The API returns a list of entities from the data tenant that meet the criteria of the specified parameters.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dtss",
                                "entities"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required) The ID of the Data tenant for which the entities must be searched.",
                                    "type": "text/plain"
                                },
                                "key": "DataTenant",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required) The ID of the Customer tenant for which the entities must be searched.",
                                    "type": "text/plain"
                                },
                                "key": "CustomerTenant",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "Specifies if you want to search metadata along with the entities.",
                                    "type": "text/plain"
                                },
                                "key": "SearchMetadata",
                                "value": "<string>"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"select\": \"<string>\",\n  \"options\": \"<string>\",\n  \"uris\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sort\": \"<string>\",\n  \"order\": \"<string>\",\n  \"max\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"filter\": \"<string>\",\n  \"activeness\": \"<string>\"\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "dd7f831f-9339-424f-a082-1d15e78ce903",
                            "name": "successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dtss",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) The ID of the Data tenant for which the entities must be searched.",
                                            "type": "text/plain"
                                        },
                                        "key": "DataTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) The ID of the Customer tenant for which the entities must be searched.",
                                            "type": "text/plain"
                                        },
                                        "key": "CustomerTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "Specifies if you want to search metadata along with the entities.",
                                            "type": "text/plain"
                                        },
                                        "key": "SearchMetadata",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"select\": \"<string>\",\n  \"options\": \"<string>\",\n  \"uris\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sort\": \"<string>\",\n  \"order\": \"<string>\",\n  \"max\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"filter\": \"<string>\",\n  \"activeness\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "<string>",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "4e370e71-4862-4ad2-aaa6-638275aed027",
                    "name": "/services/dtss/entities/_import",
                    "request": {
                        "name": "/services/dtss/entities/_import",
                        "description": {
                            "content": "The endpoint is used to copy an entity from the data tenant to the customer tenant. The entity in the customer tenant is said to be subscribed to the entity in the data tenant. The entity in the customer tenant after the import has the crosswalk with data tenant as the source.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dtss",
                                "entities",
                                "_import"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) URI of the data entity that needs to be imported.",
                                        "type": "text/plain"
                                    },
                                    "key": "dataEntityUri",
                                    "value": "<string>"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required) ID of the source Data tenant from which the entity must be imported.",
                                    "type": "text/plain"
                                },
                                "key": "DataTenant",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required) ID of the target Customer tenant to which the entity must be imported.",
                                    "type": "text/plain"
                                },
                                "key": "CustomerTenant",
                                "value": "<string>"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "90dfb43f-4d7a-43c8-9c8c-03c16d8832ad",
                            "name": "successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dtss",
                                        "entities",
                                        "_import"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "(Required) URI of the data entity that needs to be imported.",
                                                "type": "text/plain"
                                            },
                                            "key": "dataEntityUri",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) ID of the source Data tenant from which the entity must be imported.",
                                            "type": "text/plain"
                                        },
                                        "key": "DataTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) ID of the target Customer tenant to which the entity must be imported.",
                                            "type": "text/plain"
                                        },
                                        "key": "CustomerTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"success\": \"<boolean>\",\n  \"uris\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a77713f3-0e03-4b88-8818-9f4ee6f1d14b",
                            "name": "Bad Request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dtss",
                                        "entities",
                                        "_import"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "(Required) URI of the data entity that needs to be imported.",
                                                "type": "text/plain"
                                            },
                                            "key": "dataEntityUri",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) ID of the source Data tenant from which the entity must be imported.",
                                            "type": "text/plain"
                                        },
                                        "key": "DataTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) ID of the target Customer tenant to which the entity must be imported.",
                                            "type": "text/plain"
                                        },
                                        "key": "CustomerTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"severity\": \"Error\",\n    \"errorMessage\": \"DataTenant entity can't be imported.\",\n    \"errorCode\": 3109,\n    \"errorDetailMessage\": \"Entity with id='2JHAOQJ' from data tenant cant be imported: Object does not contain needed sources or this object is filtered out by Object Mapping.\",\n    \"innerErrorData\": {\n      \"exception\": \"com.reltio.dtss.rest.errors.DtssCommonException:Entity with id='2JHAOQJ' from data tenant cant be imported: Object does not contain needed sources or this object is filtered out by Object Mapping.\",\n      \"stack\": [\n        \"com.reltio.dtss.service.subscription.ObjectSubscriptionService.getSubscribeResult at ObjectSubscriptionService.java, line 485\",\n        \"com.reltio.dtss.service.subscription.ObjectSubscriptionService.subscribeEntity at ObjectSubscriptionService.java, line 377\",\n        \"com.reltio.dtss.service.subscription.ObjectSubscriptionService.subscribeEntity at ObjectSubscriptionService.java, line 404\",\n        \"com.reltio.dtss.service.subscription.ManualSubscriptionService.importEntityByUri at ManualSubscriptionService.java, line 169\",\n        \"com.reltio.dtss.rest.controller.data.entity.SubscriptionController.importEntityByUri at SubscriptionController.java, line 99\",\n        \"com.reltio.dtss.rest.controller.data.entity.SubscriptionController$$FastClassBySpringCGLIB$$57239716.invoke at <generated>, line -1\",\n        \"org.springframework.cglib.proxy.MethodProxy.invoke at MethodProxy.java, line 204\",\n        \"org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint at CglibAopProxy.java, line 717\",\n        \"org.springframework.aop.framework.ReflectiveMethodInvocation.proceed at ReflectiveMethodInvocation.java, line 157\",\n        \"org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke at MethodSecurityInterceptor.java, line 68\",\n        \"org.springframework.aop.framework.ReflectiveMethodInvocation.proceed at ReflectiveMethodInvocation.java, line 179\",\n        \"org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept at CglibAopProxy.java, line 653\",\n        \"com.reltio.dtss.rest.controller.data.entity.SubscriptionController$$EnhancerBySpringCGLIB$$e051b137_2.importEntityByUri at <generated>, line -1\",\n        \"sun.reflect.NativeMethodAccessorImpl.invoke0 at NativeMethodAccessorImpl.java, line -2\",\n        \"sun.reflect.NativeMethodAccessorImpl.invoke at NativeMethodAccessorImpl.java, line 62\",\n        \"sun.reflect.DelegatingMethodAccessorImpl.invoke at DelegatingMethodAccessorImpl.java, line 43\",\n        \"java.lang.reflect.Method.invoke at Method.java, line 498\",\n        \"org.springframework.web.method.support.InvocableHandlerMethod.doInvoke at InvocableHandlerMethod.java, line 221\",\n        \"org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest at InvocableHandlerMethod.java, line 137\",\n        \"org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle at ServletInvocableHandlerMethod.java, line 110\",\n        \"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod at RequestMappingHandlerAdapter.java, line 806\",\n        \"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal at RequestMappingHandlerAdapter.java, line 729\",\n        \"org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle at AbstractHandlerMethodAdapter.java, line 85\",\n        \"org.springframework.web.servlet.DispatcherServlet.doDispatch at DispatcherServlet.java, line 959\",\n        \"org.springframework.web.servlet.DispatcherServlet.doService at DispatcherServlet.java, line 893\",\n        \"org.springframework.web.servlet.FrameworkServlet.processRequest at FrameworkServlet.java, line 970\",\n        \"org.springframework.web.servlet.FrameworkServlet.doPost at FrameworkServlet.java, line 872\",\n        \"javax.servlet.http.HttpServlet.service at HttpServlet.java, line 661\",\n        \"org.springframework.web.servlet.FrameworkServlet.service at FrameworkServlet.java, line 846\",\n        \"javax.servlet.http.HttpServlet.service at HttpServlet.java, line 742\",\n        \"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter at ApplicationFilterChain.java, line 231\",\n        \"org.apache.catalina.core.ApplicationFilterChain.doFilter at ApplicationFilterChain.java, line 166\",\n        \"org.apache.tomcat.websocket.server.WsFilter.doFilter at WsFilter.java, line 52\",\n        \"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter at ApplicationFilterChain.java, line 193\",\n        \"org.apache.catalina.core.ApplicationFilterChain.doFilter at ApplicationFilterChain.java, line 166\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 316\",\n        \"org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke at FilterSecurityInterceptor.java, line 126\",\n        \"org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter at FilterSecurityInterceptor.java, line 90\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.access.ExceptionTranslationFilter.doFilter at ExceptionTranslationFilter.java, line 114\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter at AnonymousAuthenticationFilter.java, line 111\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter at SecurityContextHolderAwareRequestFilter.java, line 169\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter at OAuth2AuthenticationProcessingFilter.java, line 176\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal at HeaderWriterFilter.java, line 64\",\n        \"org.springframework.web.filter.OncePerRequestFilter.doFilter at OncePerRequestFilter.java, line 107\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal at WebAsyncManagerIntegrationFilter.java, line 53\",\n        \"org.springframework.web.filter.OncePerRequestFilter.doFilter at OncePerRequestFilter.java, line 107\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter at SecurityContextPersistenceFilter.java, line 91\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.FilterChainProxy.doFilterInternal at FilterChainProxy.java, line 213\",\n        \"org.springframework.security.web.FilterChainProxy.doFilter at FilterChainProxy.java, line 176\",\n        \"org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate at DelegatingFilterProxy.java, line 346\",\n        \"org.springframework.web.filter.DelegatingFilterProxy.doFilter at DelegatingFilterProxy.java, line 262\",\n        \"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter at ApplicationFilterChain.java, line 193\",\n        \"org.apache.catalina.core.ApplicationFilterChain.doFilter at ApplicationFilterChain.java, line 166\",\n        \"com.reltio.dtss.servlet.AllowCrossDomainRequestsFilter.doFilter at AllowCrossDomainRequestsFilter.java, line 32\",\n        \"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter at ApplicationFilterChain.java, line 193\",\n        \"org.apache.catalina.core.ApplicationFilterChain.doFilter at ApplicationFilterChain.java, line 166\",\n        \"org.apache.catalina.core.StandardWrapperValve.invoke at StandardWrapperValve.java, line 198\",\n        \"org.apache.catalina.core.StandardContextValve.invoke at StandardContextValve.java, line 96\",\n        \"org.apache.catalina.authenticator.AuthenticatorBase.invoke at AuthenticatorBase.java, line 504\",\n        \"org.apache.catalina.core.StandardHostValve.invoke at StandardHostValve.java, line 140\",\n        \"org.apache.catalina.valves.ErrorReportValve.invoke at ErrorReportValve.java, line 81\",\n        \"org.apache.catalina.valves.AbstractAccessLogValve.invoke at AbstractAccessLogValve.java, line 650\",\n        \"org.apache.catalina.core.StandardEngineValve.invoke at StandardEngineValve.java, line 87\",\n        \"org.apache.catalina.connector.CoyoteAdapter.service at CoyoteAdapter.java, line 342\",\n        \"org.apache.coyote.http11.Http11Processor.service at Http11Processor.java, line 803\",\n        \"org.apache.coyote.AbstractProcessorLight.process at AbstractProcessorLight.java, line 66\",\n        \"org.apache.coyote.AbstractProtocol$ConnectionHandler.process at AbstractProtocol.java, line 790\",\n        \"org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun at NioEndpoint.java, line 1459\",\n        \"org.apache.tomcat.util.net.SocketProcessorBase.run at SocketProcessorBase.java, line 49\",\n        \"java.util.concurrent.ThreadPoolExecutor.runWorker at ThreadPoolExecutor.java, line 1149\",\n        \"java.util.concurrent.ThreadPoolExecutor$Worker.run at ThreadPoolExecutor.java, line 624\",\n        \"org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run at TaskThread.java, line 61\",\n        \"java.lang.Thread.run at Thread.java, line 748\"\n      ]\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d3f4ae05-866c-44a5-a0f7-bf9ec5b84f1f",
                            "name": "Forbidden",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dtss",
                                        "entities",
                                        "_import"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "(Required) URI of the data entity that needs to be imported.",
                                                "type": "text/plain"
                                            },
                                            "key": "dataEntityUri",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) ID of the source Data tenant from which the entity must be imported.",
                                            "type": "text/plain"
                                        },
                                        "key": "DataTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) ID of the target Customer tenant to which the entity must be imported.",
                                            "type": "text/plain"
                                        },
                                        "key": "CustomerTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"severity\": \"Error\",\n    \"errorMessage\": \"DataTenant entity can't be imported.\",\n    \"errorCode\": 403,\n    \"errorDetailMessage\": \"DataTenant entity can't be imported. The operation is forbidden for the current user, please check your privileges\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "95e7bf57-450a-4d26-9bd2-06d0823f5559",
                            "name": "Not Found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dtss",
                                        "entities",
                                        "_import"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "(Required) URI of the data entity that needs to be imported.",
                                                "type": "text/plain"
                                            },
                                            "key": "dataEntityUri",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) ID of the source Data tenant from which the entity must be imported.",
                                            "type": "text/plain"
                                        },
                                        "key": "DataTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) ID of the target Customer tenant to which the entity must be imported.",
                                            "type": "text/plain"
                                        },
                                        "key": "CustomerTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"severity\": \"Error\",\n    \"errorMessage\": \"DataTenant entity not found.\",\n    \"errorCode\": 3005,\n    \"errorDetailMessage\": \"Entity with id='entities/179k0Cu' is not found in data tenant.\",\n    \"innerErrorData\": {\n      \"exception\": \"com.reltio.dtss.rest.errors.DtssCommonException:Entity with id='entities/179k0Cu' is not found in data tenant.\",\n      \"stack\": [\n        \"com.reltio.dtss.service.subscription.ManualSubscriptionService.importEntityByUri at ManualSubscriptionService.java, line 158\",\n        \"com.reltio.dtss.rest.controller.data.entity.SubscriptionController.importEntityByUri at SubscriptionController.java, line 99\",\n        \"com.reltio.dtss.rest.controller.data.entity.SubscriptionController$$FastClassBySpringCGLIB$$57239716.invoke at <generated>, line -1\",\n        \"org.springframework.cglib.proxy.MethodProxy.invoke at MethodProxy.java, line 204\",\n        \"org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint at CglibAopProxy.java, line 717\",\n        \"org.springframework.aop.framework.ReflectiveMethodInvocation.proceed at ReflectiveMethodInvocation.java, line 157\",\n        \"org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke at MethodSecurityInterceptor.java, line 68\",\n        \"org.springframework.aop.framework.ReflectiveMethodInvocation.proceed at ReflectiveMethodInvocation.java, line 179\",\n        \"org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept at CglibAopProxy.java, line 653\",\n        \"com.reltio.dtss.rest.controller.data.entity.SubscriptionController$$EnhancerBySpringCGLIB$$77a32d2f_2.importEntityByUri at <generated>, line -1\",\n        \"sun.reflect.NativeMethodAccessorImpl.invoke0 at NativeMethodAccessorImpl.java, line -2\",\n        \"sun.reflect.NativeMethodAccessorImpl.invoke at NativeMethodAccessorImpl.java, line 62\",\n        \"sun.reflect.DelegatingMethodAccessorImpl.invoke at DelegatingMethodAccessorImpl.java, line 43\",\n        \"java.lang.reflect.Method.invoke at Method.java, line 498\",\n        \"org.springframework.web.method.support.InvocableHandlerMethod.doInvoke at InvocableHandlerMethod.java, line 221\",\n        \"org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest at InvocableHandlerMethod.java, line 137\",\n        \"org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle at ServletInvocableHandlerMethod.java, line 110\",\n        \"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod at RequestMappingHandlerAdapter.java, line 806\",\n        \"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal at RequestMappingHandlerAdapter.java, line 729\",\n        \"org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle at AbstractHandlerMethodAdapter.java, line 85\",\n        \"org.springframework.web.servlet.DispatcherServlet.doDispatch at DispatcherServlet.java, line 959\",\n        \"org.springframework.web.servlet.DispatcherServlet.doService at DispatcherServlet.java, line 893\",\n        \"org.springframework.web.servlet.FrameworkServlet.processRequest at FrameworkServlet.java, line 970\",\n        \"org.springframework.web.servlet.FrameworkServlet.doPost at FrameworkServlet.java, line 872\",\n        \"javax.servlet.http.HttpServlet.service at HttpServlet.java, line 661\",\n        \"org.springframework.web.servlet.FrameworkServlet.service at FrameworkServlet.java, line 846\",\n        \"javax.servlet.http.HttpServlet.service at HttpServlet.java, line 742\",\n        \"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter at ApplicationFilterChain.java, line 231\",\n        \"org.apache.catalina.core.ApplicationFilterChain.doFilter at ApplicationFilterChain.java, line 166\",\n        \"org.apache.tomcat.websocket.server.WsFilter.doFilter at WsFilter.java, line 52\",\n        \"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter at ApplicationFilterChain.java, line 193\",\n        \"org.apache.catalina.core.ApplicationFilterChain.doFilter at ApplicationFilterChain.java, line 166\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 316\",\n        \"org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke at FilterSecurityInterceptor.java, line 126\",\n        \"org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter at FilterSecurityInterceptor.java, line 90\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.access.ExceptionTranslationFilter.doFilter at ExceptionTranslationFilter.java, line 114\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter at AnonymousAuthenticationFilter.java, line 111\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter at SecurityContextHolderAwareRequestFilter.java, line 169\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter at OAuth2AuthenticationProcessingFilter.java, line 176\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal at HeaderWriterFilter.java, line 64\",\n        \"org.springframework.web.filter.OncePerRequestFilter.doFilter at OncePerRequestFilter.java, line 107\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal at WebAsyncManagerIntegrationFilter.java, line 53\",\n        \"org.springframework.web.filter.OncePerRequestFilter.doFilter at OncePerRequestFilter.java, line 107\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter at SecurityContextPersistenceFilter.java, line 91\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.FilterChainProxy.doFilterInternal at FilterChainProxy.java, line 213\",\n        \"org.springframework.security.web.FilterChainProxy.doFilter at FilterChainProxy.java, line 176\",\n        \"org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate at DelegatingFilterProxy.java, line 346\",\n        \"org.springframework.web.filter.DelegatingFilterProxy.doFilter at DelegatingFilterProxy.java, line 262\",\n        \"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter at ApplicationFilterChain.java, line 193\",\n        \"org.apache.catalina.core.ApplicationFilterChain.doFilter at ApplicationFilterChain.java, line 166\",\n        \"com.reltio.dtss.servlet.AllowCrossDomainRequestsFilter.doFilter at AllowCrossDomainRequestsFilter.java, line 32\",\n        \"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter at ApplicationFilterChain.java, line 193\",\n        \"org.apache.catalina.core.ApplicationFilterChain.doFilter at ApplicationFilterChain.java, line 166\",\n        \"org.apache.catalina.core.StandardWrapperValve.invoke at StandardWrapperValve.java, line 198\",\n        \"org.apache.catalina.core.StandardContextValve.invoke at StandardContextValve.java, line 96\",\n        \"org.apache.catalina.authenticator.AuthenticatorBase.invoke at AuthenticatorBase.java, line 504\",\n        \"org.apache.catalina.core.StandardHostValve.invoke at StandardHostValve.java, line 140\",\n        \"org.apache.catalina.valves.ErrorReportValve.invoke at ErrorReportValve.java, line 81\",\n        \"org.apache.catalina.valves.AbstractAccessLogValve.invoke at AbstractAccessLogValve.java, line 650\",\n        \"org.apache.catalina.core.StandardEngineValve.invoke at StandardEngineValve.java, line 87\",\n        \"org.apache.catalina.connector.CoyoteAdapter.service at CoyoteAdapter.java, line 342\",\n        \"org.apache.coyote.http11.Http11Processor.service at Http11Processor.java, line 803\",\n        \"org.apache.coyote.AbstractProcessorLight.process at AbstractProcessorLight.java, line 66\",\n        \"org.apache.coyote.AbstractProtocol$ConnectionHandler.process at AbstractProtocol.java, line 790\",\n        \"org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun at NioEndpoint.java, line 1459\",\n        \"org.apache.tomcat.util.net.SocketProcessorBase.run at SocketProcessorBase.java, line 49\",\n        \"java.util.concurrent.ThreadPoolExecutor.runWorker at ThreadPoolExecutor.java, line 1149\",\n        \"java.util.concurrent.ThreadPoolExecutor$Worker.run at ThreadPoolExecutor.java, line 624\",\n        \"org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run at TaskThread.java, line 61\",\n        \"java.lang.Thread.run at Thread.java, line 748\"\n      ]\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "46fae89e-4775-42d2-9cd8-cef73501cec7",
                            "name": "Too Many Requests",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dtss",
                                        "entities",
                                        "_import"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "(Required) URI of the data entity that needs to be imported.",
                                                "type": "text/plain"
                                            },
                                            "key": "dataEntityUri",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) ID of the source Data tenant from which the entity must be imported.",
                                            "type": "text/plain"
                                        },
                                        "key": "DataTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) ID of the target Customer tenant to which the entity must be imported.",
                                            "type": "text/plain"
                                        },
                                        "key": "CustomerTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Too Many Requests",
                            "code": 429,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"severity\": \"Error\",\n    \"errorMessage\": \"DataTenant entity can't be imported. Too many requests.\",\n    \"errorCode\": 429,\n    \"errorDetailMessage\": \"Max number of retries is exceeded for loadObjects.. com.reltio.dtss.service.api.http.APIClientCriticalException: Max number of retries is exceeded for loadObjects.\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "76987ae8-ec36-4fee-8c01-f73cc9ad2ba8",
                            "name": "Service Unavailable",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dtss",
                                        "entities",
                                        "_import"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "(Required) URI of the data entity that needs to be imported.",
                                                "type": "text/plain"
                                            },
                                            "key": "dataEntityUri",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) ID of the source Data tenant from which the entity must be imported.",
                                            "type": "text/plain"
                                        },
                                        "key": "DataTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) ID of the target Customer tenant to which the entity must be imported.",
                                            "type": "text/plain"
                                        },
                                        "key": "CustomerTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"severity\": \"Error\",\n    \"errorMessage\": \"DataTenant entity can't be imported. quota_exceeded.\",\n    \"errorCode\": 503,\n    \"errorDetailMessage\": \"Code: DATA_ENTITY_CANNOT_BE_IMPORTED_SERVICE_UNAVAILABLE; Message parameters: [Max number of retries is exceeded for loadObjects.. com.reltio.dtss.service.api.http.APIClientCriticalException: Max number of retries is exceeded for loadObjects.\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "5ac30f47-63d3-44e3-bb3e-7babf6ea489f",
                    "name": "/services/dtss/entities/_matchesForCtEntities",
                    "request": {
                        "name": "/services/dtss/entities/_matchesForCtEntities",
                        "description": {
                            "content": "The API request considers the following settings:<br><ul><li>The match rules defined in the <b>MANUAL_MATCH</b> section of the Synchronization Configuration are used for search (if the section exists).</li><li>Entities must not have a <b>label</b> field in their body or these entities will be rejected.</li></ul></br>",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dtss",
                                "entities",
                                "_matchesForCtEntities"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Positive Integer value to identify maximum number of entities to return in a response.",
                                        "type": "text/plain"
                                    },
                                    "key": "max",
                                    "value": "100"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "If this parameter is set to <b>true</b>, none of the potential matches from the Data Tenant that are subscribed to by any entity in the customer tenant are displayed. Otherwise, all potential matches from the data tenant, regardless of whether or not each potential match is already subscribed to by an entity in the Customer tenant, are displayed. The default value of this parameter is <b>false</b>.",
                                        "type": "text/plain"
                                    },
                                    "key": "skipAllImportedEntities",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Comma-separated list of different options which affect entity's JSON content in the response. Available options:<br><ul><li><b>sendHidden:</b> disabled by default, the entity's JSON contains hidden attributes if this option is enabled.</li><li><b>ovOnly:</b> return only attribute values that have the <b>ov=true</b> flag.</li><li><b>nonOvOnly:</b> return only attribute values that have the <b>ov=false</b> flag. If you have a nested or reference attribute value, where <b>ov=true</b>, but sub-attributes, where <b>ov=false</b>, then these sub-attributes will not appear in the response.</li><li><b>searchByOv:</b> Search and sort by all attributes with ov only; disabled by default.</li></ul></br>",
                                        "type": "text/plain"
                                    },
                                    "key": "options",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Search query filter for Data Tenant. This enables filtering the entities based on a condition. The format for the filter query parameter is: <b>filter=({Condition Type}[AND/OR {Condition Type}]*)</b>",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "The crosswalks that you want to use for searching entities in the data tenant.",
                                        "type": "text/plain"
                                    },
                                    "key": "sources",
                                    "value": "<string>"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "disabled": false,
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "SearchMetadata",
                                "value": "AUTO"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required) ID of the Data tenant from which the potential matches are required.",
                                    "type": "text/plain"
                                },
                                "key": "DataTenant",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required) ID of the Customer tenant for which the potential matches are required.",
                                    "type": "text/plain"
                                },
                                "key": "CustomerTenant",
                                "value": "<string>"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "0f0fe7eb-517e-4ee9-b6ba-019b96ff9071",
                            "name": "successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dtss",
                                        "entities",
                                        "_matchesForCtEntities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Positive Integer value to identify maximum number of entities to return in a response.",
                                                "type": "text/plain"
                                            },
                                            "key": "max",
                                            "value": "100"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If this parameter is set to <b>true</b>, none of the potential matches from the Data Tenant that are subscribed to by any entity in the customer tenant are displayed. Otherwise, all potential matches from the data tenant, regardless of whether or not each potential match is already subscribed to by an entity in the Customer tenant, are displayed. The default value of this parameter is <b>false</b>.",
                                                "type": "text/plain"
                                            },
                                            "key": "skipAllImportedEntities",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect entity's JSON content in the response. Available options:<br><ul><li><b>sendHidden:</b> disabled by default, the entity's JSON contains hidden attributes if this option is enabled.</li><li><b>ovOnly:</b> return only attribute values that have the <b>ov=true</b> flag.</li><li><b>nonOvOnly:</b> return only attribute values that have the <b>ov=false</b> flag. If you have a nested or reference attribute value, where <b>ov=true</b>, but sub-attributes, where <b>ov=false</b>, then these sub-attributes will not appear in the response.</li><li><b>searchByOv:</b> Search and sort by all attributes with ov only; disabled by default.</li></ul></br>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Search query filter for Data Tenant. This enables filtering the entities based on a condition. The format for the filter query parameter is: <b>filter=({Condition Type}[AND/OR {Condition Type}]*)</b>",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "The crosswalks that you want to use for searching entities in the data tenant.",
                                                "type": "text/plain"
                                            },
                                            "key": "sources",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "",
                                            "type": "text/plain"
                                        },
                                        "key": "SearchMetadata",
                                        "value": "AUTO"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) ID of the Data tenant from which the potential matches are required.",
                                            "type": "text/plain"
                                        },
                                        "key": "DataTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) ID of the Customer tenant for which the potential matches are required.",
                                            "type": "text/plain"
                                        },
                                        "key": "CustomerTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "<string>",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8fcfd600-942b-433e-97b1-0fcad72c1001",
                            "name": "Bad Request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dtss",
                                        "entities",
                                        "_matchesForCtEntities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Positive Integer value to identify maximum number of entities to return in a response.",
                                                "type": "text/plain"
                                            },
                                            "key": "max",
                                            "value": "100"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If this parameter is set to <b>true</b>, none of the potential matches from the Data Tenant that are subscribed to by any entity in the customer tenant are displayed. Otherwise, all potential matches from the data tenant, regardless of whether or not each potential match is already subscribed to by an entity in the Customer tenant, are displayed. The default value of this parameter is <b>false</b>.",
                                                "type": "text/plain"
                                            },
                                            "key": "skipAllImportedEntities",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect entity's JSON content in the response. Available options:<br><ul><li><b>sendHidden:</b> disabled by default, the entity's JSON contains hidden attributes if this option is enabled.</li><li><b>ovOnly:</b> return only attribute values that have the <b>ov=true</b> flag.</li><li><b>nonOvOnly:</b> return only attribute values that have the <b>ov=false</b> flag. If you have a nested or reference attribute value, where <b>ov=true</b>, but sub-attributes, where <b>ov=false</b>, then these sub-attributes will not appear in the response.</li><li><b>searchByOv:</b> Search and sort by all attributes with ov only; disabled by default.</li></ul></br>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Search query filter for Data Tenant. This enables filtering the entities based on a condition. The format for the filter query parameter is: <b>filter=({Condition Type}[AND/OR {Condition Type}]*)</b>",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "The crosswalks that you want to use for searching entities in the data tenant.",
                                                "type": "text/plain"
                                            },
                                            "key": "sources",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "",
                                            "type": "text/plain"
                                        },
                                        "key": "SearchMetadata",
                                        "value": "AUTO"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) ID of the Data tenant from which the potential matches are required.",
                                            "type": "text/plain"
                                        },
                                        "key": "DataTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) ID of the Customer tenant for which the potential matches are required.",
                                            "type": "text/plain"
                                        },
                                        "key": "CustomerTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"severity\": \"Error\",\n    \"errorMessage\": \"UnMarshalling I/O Error\",\n    \"errorCode\": 331,\n    \"errorDetailMessage\": \"UnMarshalling I/O Error\",\n    \"innerErrorData\": {\n      \"innerErrorData\": {\n        \"exception\": \"com.fasterxml.reltio.jackson.databind.JsonMappingException:Missing required creator property 'type' (index 7)\\n at [Source: java.io.StringReader@55be18ce; line: 1, column: 21]\",\n        \"stack\": [\n          \"com.fasterxml.reltio.jackson.databind.JsonMappingException.from at JsonMappingException.java, line 148\",\n          \"com.fasterxml.reltio.jackson.databind.DeserializationContext.mappingException at DeserializationContext.java, line 878\",\n          \"com.fasterxml.reltio.jackson.databind.deser.impl.PropertyValueBuffer._findMissing at PropertyValueBuffer.java, line 141\",\n          \"com.fasterxml.reltio.jackson.databind.deser.impl.PropertyValueBuffer.getParameters at PropertyValueBuffer.java, line 118\",\n          \"com.fasterxml.reltio.jackson.databind.deser.impl.PropertyBasedCreator.build at PropertyBasedCreator.java, line 135\",\n          \"com.fasterxml.reltio.jackson.databind.deser.BeanDeserializer._deserializeUsingPropertyBased at BeanDeserializer.java, line 442\",\n          \"com.fasterxml.reltio.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault at BeanDeserializerBase.java, line 1099\",\n          \"com.fasterxml.reltio.jackson.databind.deser.BeanDeserializer.deserializeFromObject at BeanDeserializer.java, line 296\",\n          \"com.fasterxml.reltio.jackson.databind.deser.BeanDeserializer.deserialize at BeanDeserializer.java, line 133\",\n          \"com.fasterxml.reltio.jackson.databind.ObjectMapper._readMapAndClose at ObjectMapper.java, line 3736\",\n          \"com.fasterxml.reltio.jackson.databind.ObjectMapper.readValue at ObjectMapper.java, line 2773\",\n          \"com.reltio.rest.data.marshalling.impl.JacksonMarshallerImpl.unmarshall at JacksonMarshallerImpl.java, line 320\",\n          \"com.reltio.dtss.rest.controller.data.search.MatchesController.retrieveEntityFromNode at MatchesController.java, line 242\",\n          \"com.reltio.dtss.rest.controller.data.search.MatchesController.getEntities at MatchesController.java, line 260\",\n          \"com.reltio.dtss.rest.controller.data.search.MatchesController.getPotentialMatches at MatchesController.java, line 190\",\n          \"com.reltio.dtss.rest.controller.data.search.MatchesController.getPotentialMatchesForCtEntities at MatchesController.java, line 105\",\n          \"com.reltio.dtss.rest.controller.data.search.MatchesController$$FastClassBySpringCGLIB$$b2e2c717.invoke at <generated>, line -1\",\n          \"org.springframework.cglib.proxy.MethodProxy.invoke at MethodProxy.java, line 204\",\n          \"org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint at CglibAopProxy.java, line 717\",\n          \"org.springframework.aop.framework.ReflectiveMethodInvocation.proceed at ReflectiveMethodInvocation.java, line 157\",\n          \"org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke at MethodSecurityInterceptor.java, line 68\",\n          \"org.springframework.aop.framework.ReflectiveMethodInvocation.proceed at ReflectiveMethodInvocation.java, line 179\",\n          \"org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept at CglibAopProxy.java, line 653\",\n          \"com.reltio.dtss.rest.controller.data.search.MatchesController$$EnhancerBySpringCGLIB$$15b4308d_2.getPotentialMatchesForCtEntities at <generated>, line -1\",\n          \"sun.reflect.NativeMethodAccessorImpl.invoke0 at NativeMethodAccessorImpl.java, line -2\",\n          \"sun.reflect.NativeMethodAccessorImpl.invoke at NativeMethodAccessorImpl.java, line 62\",\n          \"sun.reflect.DelegatingMethodAccessorImpl.invoke at DelegatingMethodAccessorImpl.java, line 43\",\n          \"java.lang.reflect.Method.invoke at Method.java, line 498\",\n          \"org.springframework.web.method.support.InvocableHandlerMethod.doInvoke at InvocableHandlerMethod.java, line 221\",\n          \"org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest at InvocableHandlerMethod.java, line 137\",\n          \"org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle at ServletInvocableHandlerMethod.java, line 110\",\n          \"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod at RequestMappingHandlerAdapter.java, line 806\",\n          \"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal at RequestMappingHandlerAdapter.java, line 729\",\n          \"org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle at AbstractHandlerMethodAdapter.java, line 85\",\n          \"org.springframework.web.servlet.DispatcherServlet.doDispatch at DispatcherServlet.java, line 959\",\n          \"org.springframework.web.servlet.DispatcherServlet.doService at DispatcherServlet.java, line 893\",\n          \"org.springframework.web.servlet.FrameworkServlet.processRequest at FrameworkServlet.java, line 970\",\n          \"org.springframework.web.servlet.FrameworkServlet.doPost at FrameworkServlet.java, line 872\",\n          \"javax.servlet.http.HttpServlet.service at HttpServlet.java, line 661\",\n          \"org.springframework.web.servlet.FrameworkServlet.service at FrameworkServlet.java, line 846\",\n          \"javax.servlet.http.HttpServlet.service at HttpServlet.java, line 742\",\n          \"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter at ApplicationFilterChain.java, line 231\",\n          \"org.apache.catalina.core.ApplicationFilterChain.doFilter at ApplicationFilterChain.java, line 166\",\n          \"org.apache.tomcat.websocket.server.WsFilter.doFilter at WsFilter.java, line 52\",\n          \"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter at ApplicationFilterChain.java, line 193\",\n          \"org.apache.catalina.core.ApplicationFilterChain.doFilter at ApplicationFilterChain.java, line 166\",\n          \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 316\",\n          \"org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke at FilterSecurityInterceptor.java, line 126\",\n          \"org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter at FilterSecurityInterceptor.java, line 90\",\n          \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n          \"org.springframework.security.web.access.ExceptionTranslationFilter.doFilter at ExceptionTranslationFilter.java, line 114\",\n          \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n          \"org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter at AnonymousAuthenticationFilter.java, line 111\",\n          \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n          \"org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter at SecurityContextHolderAwareRequestFilter.java, line 169\",\n          \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n          \"org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter at OAuth2AuthenticationProcessingFilter.java, line 176\",\n          \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n          \"org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal at HeaderWriterFilter.java, line 64\",\n          \"org.springframework.web.filter.OncePerRequestFilter.doFilter at OncePerRequestFilter.java, line 107\",\n          \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n          \"org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal at WebAsyncManagerIntegrationFilter.java, line 53\",\n          \"org.springframework.web.filter.OncePerRequestFilter.doFilter at OncePerRequestFilter.java, line 107\",\n          \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n          \"org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter at SecurityContextPersistenceFilter.java, line 91\",\n          \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n          \"org.springframework.security.web.FilterChainProxy.doFilterInternal at FilterChainProxy.java, line 213\",\n          \"org.springframework.security.web.FilterChainProxy.doFilter at FilterChainProxy.java, line 176\",\n          \"org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate at DelegatingFilterProxy.java, line 346\",\n          \"org.springframework.web.filter.DelegatingFilterProxy.doFilter at DelegatingFilterProxy.java, line 262\",\n          \"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter at ApplicationFilterChain.java, line 193\",\n          \"org.apache.catalina.core.ApplicationFilterChain.doFilter at ApplicationFilterChain.java, line 166\",\n          \"com.reltio.dtss.servlet.AllowCrossDomainRequestsFilter.doFilter at AllowCrossDomainRequestsFilter.java, line 32\",\n          \"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter at ApplicationFilterChain.java, line 193\",\n          \"org.apache.catalina.core.ApplicationFilterChain.doFilter at ApplicationFilterChain.java, line 166\",\n          \"org.apache.catalina.core.StandardWrapperValve.invoke at StandardWrapperValve.java, line 198\",\n          \"org.apache.catalina.core.StandardContextValve.invoke at StandardContextValve.java, line 96\",\n          \"org.apache.catalina.authenticator.AuthenticatorBase.invoke at AuthenticatorBase.java, line 504\",\n          \"org.apache.catalina.core.StandardHostValve.invoke at StandardHostValve.java, line 140\",\n          \"org.apache.catalina.valves.ErrorReportValve.invoke at ErrorReportValve.java, line 81\",\n          \"org.apache.catalina.valves.AbstractAccessLogValve.invoke at AbstractAccessLogValve.java, line 650\",\n          \"org.apache.catalina.core.StandardEngineValve.invoke at StandardEngineValve.java, line 87\",\n          \"org.apache.catalina.connector.CoyoteAdapter.service at CoyoteAdapter.java, line 342\",\n          \"org.apache.coyote.http11.Http11Processor.service at Http11Processor.java, line 803\",\n          \"org.apache.coyote.AbstractProcessorLight.process at AbstractProcessorLight.java, line 66\",\n          \"org.apache.coyote.AbstractProtocol$ConnectionHandler.process at AbstractProtocol.java, line 790\",\n          \"org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun at NioEndpoint.java, line 1459\",\n          \"org.apache.tomcat.util.net.SocketProcessorBase.run at SocketProcessorBase.java, line 49\",\n          \"java.util.concurrent.ThreadPoolExecutor.runWorker at ThreadPoolExecutor.java, line 1149\",\n          \"java.util.concurrent.ThreadPoolExecutor$Worker.run at ThreadPoolExecutor.java, line 624\",\n          \"org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run at TaskThread.java, line 61\",\n          \"java.lang.Thread.run at Thread.java, line 748\"\n        ]\n      },\n      \"exception\": \"com.reltio.rest.data.marshalling.MarshallerException:Code: UNMARSHALLING_IO_ERROR; Message parameters: []. UnMarshalling I/O Error. UnMarshalling I/O Error\",\n      \"stack\": [\n        \"com.reltio.rest.data.marshalling.impl.JacksonMarshallerImpl.unmarshall at JacksonMarshallerImpl.java, line 325\",\n        \"com.reltio.dtss.rest.controller.data.search.MatchesController.retrieveEntityFromNode at MatchesController.java, line 242\",\n        \"com.reltio.dtss.rest.controller.data.search.MatchesController.getEntities at MatchesController.java, line 260\",\n        \"com.reltio.dtss.rest.controller.data.search.MatchesController.getPotentialMatches at MatchesController.java, line 190\",\n        \"com.reltio.dtss.rest.controller.data.search.MatchesController.getPotentialMatchesForCtEntities at MatchesController.java, line 105\",\n        \"com.reltio.dtss.rest.controller.data.search.MatchesController$$FastClassBySpringCGLIB$$b2e2c717.invoke at <generated>, line -1\",\n        \"org.springframework.cglib.proxy.MethodProxy.invoke at MethodProxy.java, line 204\",\n        \"org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint at CglibAopProxy.java, line 717\",\n        \"org.springframework.aop.framework.ReflectiveMethodInvocation.proceed at ReflectiveMethodInvocation.java, line 157\",\n        \"org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke at MethodSecurityInterceptor.java, line 68\",\n        \"org.springframework.aop.framework.ReflectiveMethodInvocation.proceed at ReflectiveMethodInvocation.java, line 179\",\n        \"org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept at CglibAopProxy.java, line 653\",\n        \"com.reltio.dtss.rest.controller.data.search.MatchesController$$EnhancerBySpringCGLIB$$15b4308d_2.getPotentialMatchesForCtEntities at <generated>, line -1\",\n        \"sun.reflect.NativeMethodAccessorImpl.invoke0 at NativeMethodAccessorImpl.java, line -2\",\n        \"sun.reflect.NativeMethodAccessorImpl.invoke at NativeMethodAccessorImpl.java, line 62\",\n        \"sun.reflect.DelegatingMethodAccessorImpl.invoke at DelegatingMethodAccessorImpl.java, line 43\",\n        \"java.lang.reflect.Method.invoke at Method.java, line 498\",\n        \"org.springframework.web.method.support.InvocableHandlerMethod.doInvoke at InvocableHandlerMethod.java, line 221\",\n        \"org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest at InvocableHandlerMethod.java, line 137\",\n        \"org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle at ServletInvocableHandlerMethod.java, line 110\",\n        \"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod at RequestMappingHandlerAdapter.java, line 806\",\n        \"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal at RequestMappingHandlerAdapter.java, line 729\",\n        \"org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle at AbstractHandlerMethodAdapter.java, line 85\",\n        \"org.springframework.web.servlet.DispatcherServlet.doDispatch at DispatcherServlet.java, line 959\",\n        \"org.springframework.web.servlet.DispatcherServlet.doService at DispatcherServlet.java, line 893\",\n        \"org.springframework.web.servlet.FrameworkServlet.processRequest at FrameworkServlet.java, line 970\",\n        \"org.springframework.web.servlet.FrameworkServlet.doPost at FrameworkServlet.java, line 872\",\n        \"javax.servlet.http.HttpServlet.service at HttpServlet.java, line 661\",\n        \"org.springframework.web.servlet.FrameworkServlet.service at FrameworkServlet.java, line 846\",\n        \"javax.servlet.http.HttpServlet.service at HttpServlet.java, line 742\",\n        \"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter at ApplicationFilterChain.java, line 231\",\n        \"org.apache.catalina.core.ApplicationFilterChain.doFilter at ApplicationFilterChain.java, line 166\",\n        \"org.apache.tomcat.websocket.server.WsFilter.doFilter at WsFilter.java, line 52\",\n        \"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter at ApplicationFilterChain.java, line 193\",\n        \"org.apache.catalina.core.ApplicationFilterChain.doFilter at ApplicationFilterChain.java, line 166\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 316\",\n        \"org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke at FilterSecurityInterceptor.java, line 126\",\n        \"org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter at FilterSecurityInterceptor.java, line 90\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.access.ExceptionTranslationFilter.doFilter at ExceptionTranslationFilter.java, line 114\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter at AnonymousAuthenticationFilter.java, line 111\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter at SecurityContextHolderAwareRequestFilter.java, line 169\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter at OAuth2AuthenticationProcessingFilter.java, line 176\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal at HeaderWriterFilter.java, line 64\",\n        \"org.springframework.web.filter.OncePerRequestFilter.doFilter at OncePerRequestFilter.java, line 107\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal at WebAsyncManagerIntegrationFilter.java, line 53\",\n        \"org.springframework.web.filter.OncePerRequestFilter.doFilter at OncePerRequestFilter.java, line 107\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter at SecurityContextPersistenceFilter.java, line 91\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.FilterChainProxy.doFilterInternal at FilterChainProxy.java, line 213\",\n        \"org.springframework.security.web.FilterChainProxy.doFilter at FilterChainProxy.java, line 176\",\n        \"org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate at DelegatingFilterProxy.java, line 346\",\n        \"org.springframework.web.filter.DelegatingFilterProxy.doFilter at DelegatingFilterProxy.java, line 262\",\n        \"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter at ApplicationFilterChain.java, line 193\",\n        \"org.apache.catalina.core.ApplicationFilterChain.doFilter at ApplicationFilterChain.java, line 166\",\n        \"com.reltio.dtss.servlet.AllowCrossDomainRequestsFilter.doFilter at AllowCrossDomainRequestsFilter.java, line 32\",\n        \"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter at ApplicationFilterChain.java, line 193\",\n        \"org.apache.catalina.core.ApplicationFilterChain.doFilter at ApplicationFilterChain.java, line 166\",\n        \"org.apache.catalina.core.StandardWrapperValve.invoke at StandardWrapperValve.java, line 198\",\n        \"org.apache.catalina.core.StandardContextValve.invoke at StandardContextValve.java, line 96\",\n        \"org.apache.catalina.authenticator.AuthenticatorBase.invoke at AuthenticatorBase.java, line 504\",\n        \"org.apache.catalina.core.StandardHostValve.invoke at StandardHostValve.java, line 140\",\n        \"org.apache.catalina.valves.ErrorReportValve.invoke at ErrorReportValve.java, line 81\",\n        \"org.apache.catalina.valves.AbstractAccessLogValve.invoke at AbstractAccessLogValve.java, line 650\",\n        \"org.apache.catalina.core.StandardEngineValve.invoke at StandardEngineValve.java, line 87\",\n        \"org.apache.catalina.connector.CoyoteAdapter.service at CoyoteAdapter.java, line 342\",\n        \"org.apache.coyote.http11.Http11Processor.service at Http11Processor.java, line 803\",\n        \"org.apache.coyote.AbstractProcessorLight.process at AbstractProcessorLight.java, line 66\",\n        \"org.apache.coyote.AbstractProtocol$ConnectionHandler.process at AbstractProtocol.java, line 790\",\n        \"org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun at NioEndpoint.java, line 1459\",\n        \"org.apache.tomcat.util.net.SocketProcessorBase.run at SocketProcessorBase.java, line 49\",\n        \"java.util.concurrent.ThreadPoolExecutor.runWorker at ThreadPoolExecutor.java, line 1149\",\n        \"java.util.concurrent.ThreadPoolExecutor$Worker.run at ThreadPoolExecutor.java, line 624\",\n        \"org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run at TaskThread.java, line 61\",\n        \"java.lang.Thread.run at Thread.java, line 748\"\n      ]\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "39b6b6cd-3dd3-45b8-9c37-af9259bda499",
                            "name": "Not Found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dtss",
                                        "entities",
                                        "_matchesForCtEntities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Positive Integer value to identify maximum number of entities to return in a response.",
                                                "type": "text/plain"
                                            },
                                            "key": "max",
                                            "value": "100"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If this parameter is set to <b>true</b>, none of the potential matches from the Data Tenant that are subscribed to by any entity in the customer tenant are displayed. Otherwise, all potential matches from the data tenant, regardless of whether or not each potential match is already subscribed to by an entity in the Customer tenant, are displayed. The default value of this parameter is <b>false</b>.",
                                                "type": "text/plain"
                                            },
                                            "key": "skipAllImportedEntities",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect entity's JSON content in the response. Available options:<br><ul><li><b>sendHidden:</b> disabled by default, the entity's JSON contains hidden attributes if this option is enabled.</li><li><b>ovOnly:</b> return only attribute values that have the <b>ov=true</b> flag.</li><li><b>nonOvOnly:</b> return only attribute values that have the <b>ov=false</b> flag. If you have a nested or reference attribute value, where <b>ov=true</b>, but sub-attributes, where <b>ov=false</b>, then these sub-attributes will not appear in the response.</li><li><b>searchByOv:</b> Search and sort by all attributes with ov only; disabled by default.</li></ul></br>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Search query filter for Data Tenant. This enables filtering the entities based on a condition. The format for the filter query parameter is: <b>filter=({Condition Type}[AND/OR {Condition Type}]*)</b>",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "The crosswalks that you want to use for searching entities in the data tenant.",
                                                "type": "text/plain"
                                            },
                                            "key": "sources",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "",
                                            "type": "text/plain"
                                        },
                                        "key": "SearchMetadata",
                                        "value": "AUTO"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) ID of the Data tenant from which the potential matches are required.",
                                            "type": "text/plain"
                                        },
                                        "key": "DataTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) ID of the Customer tenant for which the potential matches are required.",
                                            "type": "text/plain"
                                        },
                                        "key": "CustomerTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"severity\": \"Error\",\n    \"errorMessage\": \"Subscription does not exist.\",\n    \"errorCode\": 3020,\n    \"errorDetailMessage\": \"Subscription for DT staticData01 and CT staticCustomer01 does not exist.\",\n    \"innerErrorData\": {\n      \"exception\": \"com.reltio.dtss.rest.errors.SubscriptionNotFoundException:Subscription for DT staticData01 and CT staticCustomer01 does not exist.\",\n      \"stack\": [\n        \"com.reltio.dtss.rest.controller.AbstractDtssAPIController.getTenantSubscription at AbstractDtssAPIController.java, line 87\",\n        \"com.reltio.dtss.rest.controller.AbstractDtssAPIController.getTenantSubscription at AbstractDtssAPIController.java, line 98\",\n        \"com.reltio.dtss.rest.controller.AbstractDtssAPIController.getTenantSubscription at AbstractDtssAPIController.java, line 94\",\n        \"com.reltio.dtss.rest.controller.data.search.MatchesController.getPotentialMatches at MatchesController.java, line 177\",\n        \"com.reltio.dtss.rest.controller.data.search.MatchesController.getPotentialMatchesForCtEntities at MatchesController.java, line 105\",\n        \"com.reltio.dtss.rest.controller.data.search.MatchesController$$FastClassBySpringCGLIB$$b2e2c717.invoke at <generated>, line -1\",\n        \"org.springframework.cglib.proxy.MethodProxy.invoke at MethodProxy.java, line 204\",\n        \"org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint at CglibAopProxy.java, line 717\",\n        \"org.springframework.aop.framework.ReflectiveMethodInvocation.proceed at ReflectiveMethodInvocation.java, line 157\",\n        \"org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke at MethodSecurityInterceptor.java, line 68\",\n        \"org.springframework.aop.framework.ReflectiveMethodInvocation.proceed at ReflectiveMethodInvocation.java, line 179\",\n        \"org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept at CglibAopProxy.java, line 653\",\n        \"com.reltio.dtss.rest.controller.data.search.MatchesController$$EnhancerBySpringCGLIB$$45f65212_2.getPotentialMatchesForCtEntities at <generated>, line -1\",\n        \"sun.reflect.NativeMethodAccessorImpl.invoke0 at NativeMethodAccessorImpl.java, line -2\",\n        \"sun.reflect.NativeMethodAccessorImpl.invoke at NativeMethodAccessorImpl.java, line 62\",\n        \"sun.reflect.DelegatingMethodAccessorImpl.invoke at DelegatingMethodAccessorImpl.java, line 43\",\n        \"java.lang.reflect.Method.invoke at Method.java, line 498\",\n        \"org.springframework.web.method.support.InvocableHandlerMethod.doInvoke at InvocableHandlerMethod.java, line 221\",\n        \"org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest at InvocableHandlerMethod.java, line 137\",\n        \"org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle at ServletInvocableHandlerMethod.java, line 110\",\n        \"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod at RequestMappingHandlerAdapter.java, line 806\",\n        \"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal at RequestMappingHandlerAdapter.java, line 729\",\n        \"org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle at AbstractHandlerMethodAdapter.java, line 85\",\n        \"org.springframework.web.servlet.DispatcherServlet.doDispatch at DispatcherServlet.java, line 959\",\n        \"org.springframework.web.servlet.DispatcherServlet.doService at DispatcherServlet.java, line 893\",\n        \"org.springframework.web.servlet.FrameworkServlet.processRequest at FrameworkServlet.java, line 970\",\n        \"org.springframework.web.servlet.FrameworkServlet.doPost at FrameworkServlet.java, line 872\",\n        \"javax.servlet.http.HttpServlet.service at HttpServlet.java, line 661\",\n        \"org.springframework.web.servlet.FrameworkServlet.service at FrameworkServlet.java, line 846\",\n        \"javax.servlet.http.HttpServlet.service at HttpServlet.java, line 742\",\n        \"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter at ApplicationFilterChain.java, line 231\",\n        \"org.apache.catalina.core.ApplicationFilterChain.doFilter at ApplicationFilterChain.java, line 166\",\n        \"org.apache.tomcat.websocket.server.WsFilter.doFilter at WsFilter.java, line 52\",\n        \"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter at ApplicationFilterChain.java, line 193\",\n        \"org.apache.catalina.core.ApplicationFilterChain.doFilter at ApplicationFilterChain.java, line 166\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 316\",\n        \"org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke at FilterSecurityInterceptor.java, line 126\",\n        \"org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter at FilterSecurityInterceptor.java, line 90\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.access.ExceptionTranslationFilter.doFilter at ExceptionTranslationFilter.java, line 114\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter at AnonymousAuthenticationFilter.java, line 111\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter at SecurityContextHolderAwareRequestFilter.java, line 169\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter at OAuth2AuthenticationProcessingFilter.java, line 176\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal at HeaderWriterFilter.java, line 64\",\n        \"org.springframework.web.filter.OncePerRequestFilter.doFilter at OncePerRequestFilter.java, line 107\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal at WebAsyncManagerIntegrationFilter.java, line 53\",\n        \"org.springframework.web.filter.OncePerRequestFilter.doFilter at OncePerRequestFilter.java, line 107\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter at SecurityContextPersistenceFilter.java, line 91\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.FilterChainProxy.doFilterInternal at FilterChainProxy.java, line 213\",\n        \"org.springframework.security.web.FilterChainProxy.doFilter at FilterChainProxy.java, line 176\",\n        \"org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate at DelegatingFilterProxy.java, line 346\",\n        \"org.springframework.web.filter.DelegatingFilterProxy.doFilter at DelegatingFilterProxy.java, line 262\",\n        \"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter at ApplicationFilterChain.java, line 193\",\n        \"org.apache.catalina.core.ApplicationFilterChain.doFilter at ApplicationFilterChain.java, line 166\",\n        \"com.reltio.dtss.servlet.AllowCrossDomainRequestsFilter.doFilter at AllowCrossDomainRequestsFilter.java, line 32\",\n        \"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter at ApplicationFilterChain.java, line 193\",\n        \"org.apache.catalina.core.ApplicationFilterChain.doFilter at ApplicationFilterChain.java, line 166\",\n        \"org.apache.catalina.core.StandardWrapperValve.invoke at StandardWrapperValve.java, line 198\",\n        \"org.apache.catalina.core.StandardContextValve.invoke at StandardContextValve.java, line 96\",\n        \"org.apache.catalina.authenticator.AuthenticatorBase.invoke at AuthenticatorBase.java, line 504\",\n        \"org.apache.catalina.core.StandardHostValve.invoke at StandardHostValve.java, line 140\",\n        \"org.apache.catalina.valves.ErrorReportValve.invoke at ErrorReportValve.java, line 81\",\n        \"org.apache.catalina.valves.AbstractAccessLogValve.invoke at AbstractAccessLogValve.java, line 650\",\n        \"org.apache.catalina.core.StandardEngineValve.invoke at StandardEngineValve.java, line 87\",\n        \"org.apache.catalina.connector.CoyoteAdapter.service at CoyoteAdapter.java, line 342\",\n        \"org.apache.coyote.http11.Http11Processor.service at Http11Processor.java, line 803\",\n        \"org.apache.coyote.AbstractProcessorLight.process at AbstractProcessorLight.java, line 66\",\n        \"org.apache.coyote.AbstractProtocol$ConnectionHandler.process at AbstractProtocol.java, line 790\",\n        \"org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun at NioEndpoint.java, line 1459\",\n        \"org.apache.tomcat.util.net.SocketProcessorBase.run at SocketProcessorBase.java, line 49\",\n        \"java.util.concurrent.ThreadPoolExecutor.runWorker at ThreadPoolExecutor.java, line 1149\",\n        \"java.util.concurrent.ThreadPoolExecutor$Worker.run at ThreadPoolExecutor.java, line 624\",\n        \"org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run at TaskThread.java, line 61\",\n        \"java.lang.Thread.run at Thread.java, line 748\"\n      ]\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "72d8b0af-c5a1-480b-b117-437566e81395",
                    "name": "/services/dtss/entities/_merge",
                    "request": {
                        "name": "/services/dtss/entities/_merge",
                        "description": {
                            "content": "The endpoint is used to manually merge a data tenant entity with the customer tenant entity. With merge, the entity in the customer tenant is said to be subscribed to the entity in the data tenant. It has the crosswalk with the data tenant as the source.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dtss",
                                "entities",
                                "_merge"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Entity URI from the Data Tenant. For example: <b>00iPLVp</b> or <b>entities/00iPLVp</b>.",
                                        "type": "text/plain"
                                    },
                                    "key": "dataEntityUri",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Entity URI from the Customer Tenant. For example, <b>00iPLVp</b> or <b>entities/00iPLVp</b>.",
                                        "type": "text/plain"
                                    },
                                    "key": "customerEntityUri",
                                    "value": "<string>"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required) Source Data Tenant ID.",
                                    "type": "text/plain"
                                },
                                "key": "DataTenant",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required) Target Customer Tenant ID.",
                                    "type": "text/plain"
                                },
                                "key": "CustomerTenant",
                                "value": "<string>"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "bdda7dbf-e190-456e-b58c-c4b9d1685b17",
                            "name": "successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dtss",
                                        "entities",
                                        "_merge"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "(Required) Entity URI from the Data Tenant. For example: <b>00iPLVp</b> or <b>entities/00iPLVp</b>.",
                                                "type": "text/plain"
                                            },
                                            "key": "dataEntityUri",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "(Required) Entity URI from the Customer Tenant. For example, <b>00iPLVp</b> or <b>entities/00iPLVp</b>.",
                                                "type": "text/plain"
                                            },
                                            "key": "customerEntityUri",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) Source Data Tenant ID.",
                                            "type": "text/plain"
                                        },
                                        "key": "DataTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) Target Customer Tenant ID.",
                                            "type": "text/plain"
                                        },
                                        "key": "CustomerTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"success\": \"<boolean>\",\n  \"uris\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a68b7349-ac9b-4406-80a8-d6002e653657",
                            "name": "Bad Request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dtss",
                                        "entities",
                                        "_merge"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "(Required) Entity URI from the Data Tenant. For example: <b>00iPLVp</b> or <b>entities/00iPLVp</b>.",
                                                "type": "text/plain"
                                            },
                                            "key": "dataEntityUri",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "(Required) Entity URI from the Customer Tenant. For example, <b>00iPLVp</b> or <b>entities/00iPLVp</b>.",
                                                "type": "text/plain"
                                            },
                                            "key": "customerEntityUri",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) Source Data Tenant ID.",
                                            "type": "text/plain"
                                        },
                                        "key": "DataTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) Target Customer Tenant ID.",
                                            "type": "text/plain"
                                        },
                                        "key": "CustomerTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"severity\": \"Error\",\n    \"errorMessage\": \"DataTenant entity can't be imported.\",\n    \"errorCode\": 3109,\n    \"errorDetailMessage\": \"Entity with id='2JHAOQJ' from data tenant cant be imported: Object does not contain needed sources or this object is filtered out by Object Mapping.\",\n    \"innerErrorData\": {\n      \"exception\": \"com.reltio.dtss.rest.errors.DtssCommonException:Entity with id='2JHAOQJ' from data tenant cant be imported: Object does not contain needed sources or this object is filtered out by Object Mapping.\",\n      \"stack\": [\n        \"com.reltio.dtss.service.subscription.ObjectSubscriptionService.getSubscribeResult at ObjectSubscriptionService.java, line 485\",\n        \"com.reltio.dtss.service.subscription.ObjectSubscriptionService.subscribeEntity at ObjectSubscriptionService.java, line 377\",\n        \"com.reltio.dtss.service.subscription.ObjectSubscriptionService.subscribeEntity at ObjectSubscriptionService.java, line 404\",\n        \"com.reltio.dtss.service.subscription.ManualSubscriptionService.importEntityByUri at ManualSubscriptionService.java, line 169\",\n        \"com.reltio.dtss.rest.controller.data.entity.SubscriptionController.importEntityByUri at SubscriptionController.java, line 99\",\n        \"com.reltio.dtss.rest.controller.data.entity.SubscriptionController$$FastClassBySpringCGLIB$$57239716.invoke at <generated>, line -1\",\n        \"org.springframework.cglib.proxy.MethodProxy.invoke at MethodProxy.java, line 204\",\n        \"org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint at CglibAopProxy.java, line 717\",\n        \"org.springframework.aop.framework.ReflectiveMethodInvocation.proceed at ReflectiveMethodInvocation.java, line 157\",\n        \"org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke at MethodSecurityInterceptor.java, line 68\",\n        \"org.springframework.aop.framework.ReflectiveMethodInvocation.proceed at ReflectiveMethodInvocation.java, line 179\",\n        \"org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept at CglibAopProxy.java, line 653\",\n        \"com.reltio.dtss.rest.controller.data.entity.SubscriptionController$$EnhancerBySpringCGLIB$$e051b137_2.importEntityByUri at <generated>, line -1\",\n        \"sun.reflect.NativeMethodAccessorImpl.invoke0 at NativeMethodAccessorImpl.java, line -2\",\n        \"sun.reflect.NativeMethodAccessorImpl.invoke at NativeMethodAccessorImpl.java, line 62\",\n        \"sun.reflect.DelegatingMethodAccessorImpl.invoke at DelegatingMethodAccessorImpl.java, line 43\",\n        \"java.lang.reflect.Method.invoke at Method.java, line 498\",\n        \"org.springframework.web.method.support.InvocableHandlerMethod.doInvoke at InvocableHandlerMethod.java, line 221\",\n        \"org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest at InvocableHandlerMethod.java, line 137\",\n        \"org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle at ServletInvocableHandlerMethod.java, line 110\",\n        \"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod at RequestMappingHandlerAdapter.java, line 806\",\n        \"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal at RequestMappingHandlerAdapter.java, line 729\",\n        \"org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle at AbstractHandlerMethodAdapter.java, line 85\",\n        \"org.springframework.web.servlet.DispatcherServlet.doDispatch at DispatcherServlet.java, line 959\",\n        \"org.springframework.web.servlet.DispatcherServlet.doService at DispatcherServlet.java, line 893\",\n        \"org.springframework.web.servlet.FrameworkServlet.processRequest at FrameworkServlet.java, line 970\",\n        \"org.springframework.web.servlet.FrameworkServlet.doPost at FrameworkServlet.java, line 872\",\n        \"javax.servlet.http.HttpServlet.service at HttpServlet.java, line 661\",\n        \"org.springframework.web.servlet.FrameworkServlet.service at FrameworkServlet.java, line 846\",\n        \"javax.servlet.http.HttpServlet.service at HttpServlet.java, line 742\",\n        \"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter at ApplicationFilterChain.java, line 231\",\n        \"org.apache.catalina.core.ApplicationFilterChain.doFilter at ApplicationFilterChain.java, line 166\",\n        \"org.apache.tomcat.websocket.server.WsFilter.doFilter at WsFilter.java, line 52\",\n        \"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter at ApplicationFilterChain.java, line 193\",\n        \"org.apache.catalina.core.ApplicationFilterChain.doFilter at ApplicationFilterChain.java, line 166\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 316\",\n        \"org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke at FilterSecurityInterceptor.java, line 126\",\n        \"org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter at FilterSecurityInterceptor.java, line 90\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.access.ExceptionTranslationFilter.doFilter at ExceptionTranslationFilter.java, line 114\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter at AnonymousAuthenticationFilter.java, line 111\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter at SecurityContextHolderAwareRequestFilter.java, line 169\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter at OAuth2AuthenticationProcessingFilter.java, line 176\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal at HeaderWriterFilter.java, line 64\",\n        \"org.springframework.web.filter.OncePerRequestFilter.doFilter at OncePerRequestFilter.java, line 107\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal at WebAsyncManagerIntegrationFilter.java, line 53\",\n        \"org.springframework.web.filter.OncePerRequestFilter.doFilter at OncePerRequestFilter.java, line 107\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter at SecurityContextPersistenceFilter.java, line 91\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.FilterChainProxy.doFilterInternal at FilterChainProxy.java, line 213\",\n        \"org.springframework.security.web.FilterChainProxy.doFilter at FilterChainProxy.java, line 176\",\n        \"org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate at DelegatingFilterProxy.java, line 346\",\n        \"org.springframework.web.filter.DelegatingFilterProxy.doFilter at DelegatingFilterProxy.java, line 262\",\n        \"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter at ApplicationFilterChain.java, line 193\",\n        \"org.apache.catalina.core.ApplicationFilterChain.doFilter at ApplicationFilterChain.java, line 166\",\n        \"com.reltio.dtss.servlet.AllowCrossDomainRequestsFilter.doFilter at AllowCrossDomainRequestsFilter.java, line 32\",\n        \"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter at ApplicationFilterChain.java, line 193\",\n        \"org.apache.catalina.core.ApplicationFilterChain.doFilter at ApplicationFilterChain.java, line 166\",\n        \"org.apache.catalina.core.StandardWrapperValve.invoke at StandardWrapperValve.java, line 198\",\n        \"org.apache.catalina.core.StandardContextValve.invoke at StandardContextValve.java, line 96\",\n        \"org.apache.catalina.authenticator.AuthenticatorBase.invoke at AuthenticatorBase.java, line 504\",\n        \"org.apache.catalina.core.StandardHostValve.invoke at StandardHostValve.java, line 140\",\n        \"org.apache.catalina.valves.ErrorReportValve.invoke at ErrorReportValve.java, line 81\",\n        \"org.apache.catalina.valves.AbstractAccessLogValve.invoke at AbstractAccessLogValve.java, line 650\",\n        \"org.apache.catalina.core.StandardEngineValve.invoke at StandardEngineValve.java, line 87\",\n        \"org.apache.catalina.connector.CoyoteAdapter.service at CoyoteAdapter.java, line 342\",\n        \"org.apache.coyote.http11.Http11Processor.service at Http11Processor.java, line 803\",\n        \"org.apache.coyote.AbstractProcessorLight.process at AbstractProcessorLight.java, line 66\",\n        \"org.apache.coyote.AbstractProtocol$ConnectionHandler.process at AbstractProtocol.java, line 790\",\n        \"org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun at NioEndpoint.java, line 1459\",\n        \"org.apache.tomcat.util.net.SocketProcessorBase.run at SocketProcessorBase.java, line 49\",\n        \"java.util.concurrent.ThreadPoolExecutor.runWorker at ThreadPoolExecutor.java, line 1149\",\n        \"java.util.concurrent.ThreadPoolExecutor$Worker.run at ThreadPoolExecutor.java, line 624\",\n        \"org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run at TaskThread.java, line 61\",\n        \"java.lang.Thread.run at Thread.java, line 748\"\n      ]\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "04a1fbf2-b429-4a3f-bd62-442146b6ba23",
                            "name": "Forbidden",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dtss",
                                        "entities",
                                        "_merge"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "(Required) Entity URI from the Data Tenant. For example: <b>00iPLVp</b> or <b>entities/00iPLVp</b>.",
                                                "type": "text/plain"
                                            },
                                            "key": "dataEntityUri",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "(Required) Entity URI from the Customer Tenant. For example, <b>00iPLVp</b> or <b>entities/00iPLVp</b>.",
                                                "type": "text/plain"
                                            },
                                            "key": "customerEntityUri",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) Source Data Tenant ID.",
                                            "type": "text/plain"
                                        },
                                        "key": "DataTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) Target Customer Tenant ID.",
                                            "type": "text/plain"
                                        },
                                        "key": "CustomerTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"severity\": \"Error\",\n    \"errorMessage\": \"DataTenant entity can't be imported.\",\n    \"errorCode\": 403,\n    \"errorDetailMessage\": \"DataTenant entity can't be imported. The operation is forbidden for the current user, please check your privileges\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a5109bc3-2e97-4595-80d6-4deff0f0e695",
                            "name": "Not Found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dtss",
                                        "entities",
                                        "_merge"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "(Required) Entity URI from the Data Tenant. For example: <b>00iPLVp</b> or <b>entities/00iPLVp</b>.",
                                                "type": "text/plain"
                                            },
                                            "key": "dataEntityUri",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "(Required) Entity URI from the Customer Tenant. For example, <b>00iPLVp</b> or <b>entities/00iPLVp</b>.",
                                                "type": "text/plain"
                                            },
                                            "key": "customerEntityUri",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) Source Data Tenant ID.",
                                            "type": "text/plain"
                                        },
                                        "key": "DataTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) Target Customer Tenant ID.",
                                            "type": "text/plain"
                                        },
                                        "key": "CustomerTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"severity\": \"Error\",\n    \"errorMessage\": \"Subscription does not exist.\",\n    \"errorCode\": 3020,\n    \"errorDetailMessage\": \"Subscription for DT staticData01 and CT staticCustomer01 does not exist.\",\n    \"innerErrorData\": {\n      \"exception\": \"com.reltio.dtss.rest.errors.SubscriptionNotFoundException:Subscription for DT staticData01 and CT staticCustomer01 does not exist.\",\n      \"stack\": [\n        \"com.reltio.dtss.rest.controller.AbstractDtssAPIController.getTenantSubscription at AbstractDtssAPIController.java, line 87\",\n        \"com.reltio.dtss.rest.controller.AbstractDtssAPIController.getTenantSubscription at AbstractDtssAPIController.java, line 98\",\n        \"com.reltio.dtss.rest.controller.AbstractDtssAPIController.getTenantSubscription at AbstractDtssAPIController.java, line 94\",\n        \"com.reltio.dtss.rest.controller.data.entity.SubscriptionController.mergeEntities at SubscriptionController.java, line 113\",\n        \"com.reltio.dtss.rest.controller.data.entity.SubscriptionController$$FastClassBySpringCGLIB$$57239716.invoke at <generated>, line -1\",\n        \"org.springframework.cglib.proxy.MethodProxy.invoke at MethodProxy.java, line 204\",\n        \"org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint at CglibAopProxy.java, line 717\",\n        \"org.springframework.aop.framework.ReflectiveMethodInvocation.proceed at ReflectiveMethodInvocation.java, line 157\",\n        \"org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke at MethodSecurityInterceptor.java, line 68\",\n        \"org.springframework.aop.framework.ReflectiveMethodInvocation.proceed at ReflectiveMethodInvocation.java, line 179\",\n        \"org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept at CglibAopProxy.java, line 653\",\n        \"com.reltio.dtss.rest.controller.data.entity.SubscriptionController$$EnhancerBySpringCGLIB$$ef46dda1_2.mergeEntities at <generated>, line -1\",\n        \"sun.reflect.NativeMethodAccessorImpl.invoke0 at NativeMethodAccessorImpl.java, line -2\",\n        \"sun.reflect.NativeMethodAccessorImpl.invoke at NativeMethodAccessorImpl.java, line 62\",\n        \"sun.reflect.DelegatingMethodAccessorImpl.invoke at DelegatingMethodAccessorImpl.java, line 43\",\n        \"java.lang.reflect.Method.invoke at Method.java, line 498\",\n        \"org.springframework.web.method.support.InvocableHandlerMethod.doInvoke at InvocableHandlerMethod.java, line 221\",\n        \"org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest at InvocableHandlerMethod.java, line 137\",\n        \"org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle at ServletInvocableHandlerMethod.java, line 110\",\n        \"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod at RequestMappingHandlerAdapter.java, line 806\",\n        \"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal at RequestMappingHandlerAdapter.java, line 729\",\n        \"org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle at AbstractHandlerMethodAdapter.java, line 85\",\n        \"org.springframework.web.servlet.DispatcherServlet.doDispatch at DispatcherServlet.java, line 959\",\n        \"org.springframework.web.servlet.DispatcherServlet.doService at DispatcherServlet.java, line 893\",\n        \"org.springframework.web.servlet.FrameworkServlet.processRequest at FrameworkServlet.java, line 970\",\n        \"org.springframework.web.servlet.FrameworkServlet.doPost at FrameworkServlet.java, line 872\",\n        \"javax.servlet.http.HttpServlet.service at HttpServlet.java, line 661\",\n        \"org.springframework.web.servlet.FrameworkServlet.service at FrameworkServlet.java, line 846\",\n        \"javax.servlet.http.HttpServlet.service at HttpServlet.java, line 742\",\n        \"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter at ApplicationFilterChain.java, line 231\",\n        \"org.apache.catalina.core.ApplicationFilterChain.doFilter at ApplicationFilterChain.java, line 166\",\n        \"org.apache.tomcat.websocket.server.WsFilter.doFilter at WsFilter.java, line 52\",\n        \"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter at ApplicationFilterChain.java, line 193\",\n        \"org.apache.catalina.core.ApplicationFilterChain.doFilter at ApplicationFilterChain.java, line 166\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 316\",\n        \"org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke at FilterSecurityInterceptor.java, line 126\",\n        \"org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter at FilterSecurityInterceptor.java, line 90\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.access.ExceptionTranslationFilter.doFilter at ExceptionTranslationFilter.java, line 114\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter at AnonymousAuthenticationFilter.java, line 111\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter at SecurityContextHolderAwareRequestFilter.java, line 169\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter at OAuth2AuthenticationProcessingFilter.java, line 176\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal at HeaderWriterFilter.java, line 64\",\n        \"org.springframework.web.filter.OncePerRequestFilter.doFilter at OncePerRequestFilter.java, line 107\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal at WebAsyncManagerIntegrationFilter.java, line 53\",\n        \"org.springframework.web.filter.OncePerRequestFilter.doFilter at OncePerRequestFilter.java, line 107\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter at SecurityContextPersistenceFilter.java, line 91\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.FilterChainProxy.doFilterInternal at FilterChainProxy.java, line 213\",\n        \"org.springframework.security.web.FilterChainProxy.doFilter at FilterChainProxy.java, line 176\",\n        \"org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate at DelegatingFilterProxy.java, line 346\",\n        \"org.springframework.web.filter.DelegatingFilterProxy.doFilter at DelegatingFilterProxy.java, line 262\",\n        \"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter at ApplicationFilterChain.java, line 193\",\n        \"org.apache.catalina.core.ApplicationFilterChain.doFilter at ApplicationFilterChain.java, line 166\",\n        \"com.reltio.dtss.servlet.AllowCrossDomainRequestsFilter.doFilter at AllowCrossDomainRequestsFilter.java, line 32\",\n        \"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter at ApplicationFilterChain.java, line 193\",\n        \"org.apache.catalina.core.ApplicationFilterChain.doFilter at ApplicationFilterChain.java, line 166\",\n        \"org.apache.catalina.core.StandardWrapperValve.invoke at StandardWrapperValve.java, line 198\",\n        \"org.apache.catalina.core.StandardContextValve.invoke at StandardContextValve.java, line 96\",\n        \"org.apache.catalina.authenticator.AuthenticatorBase.invoke at AuthenticatorBase.java, line 504\",\n        \"org.apache.catalina.core.StandardHostValve.invoke at StandardHostValve.java, line 140\",\n        \"org.apache.catalina.valves.ErrorReportValve.invoke at ErrorReportValve.java, line 81\",\n        \"org.apache.catalina.valves.AbstractAccessLogValve.invoke at AbstractAccessLogValve.java, line 650\",\n        \"org.apache.catalina.core.StandardEngineValve.invoke at StandardEngineValve.java, line 87\",\n        \"org.apache.catalina.connector.CoyoteAdapter.service at CoyoteAdapter.java, line 342\",\n        \"org.apache.coyote.http11.Http11Processor.service at Http11Processor.java, line 803\",\n        \"org.apache.coyote.AbstractProcessorLight.process at AbstractProcessorLight.java, line 66\",\n        \"org.apache.coyote.AbstractProtocol$ConnectionHandler.process at AbstractProtocol.java, line 790\",\n        \"org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun at NioEndpoint.java, line 1459\",\n        \"org.apache.tomcat.util.net.SocketProcessorBase.run at SocketProcessorBase.java, line 49\",\n        \"java.util.concurrent.ThreadPoolExecutor.runWorker at ThreadPoolExecutor.java, line 1149\",\n        \"java.util.concurrent.ThreadPoolExecutor$Worker.run at ThreadPoolExecutor.java, line 624\",\n        \"org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run at TaskThread.java, line 61\",\n        \"java.lang.Thread.run at Thread.java, line 748\"\n      ]\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f653d83b-6935-41ac-9463-b1997abcfe9e",
                            "name": "Too Many Requests",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dtss",
                                        "entities",
                                        "_merge"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "(Required) Entity URI from the Data Tenant. For example: <b>00iPLVp</b> or <b>entities/00iPLVp</b>.",
                                                "type": "text/plain"
                                            },
                                            "key": "dataEntityUri",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "(Required) Entity URI from the Customer Tenant. For example, <b>00iPLVp</b> or <b>entities/00iPLVp</b>.",
                                                "type": "text/plain"
                                            },
                                            "key": "customerEntityUri",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) Source Data Tenant ID.",
                                            "type": "text/plain"
                                        },
                                        "key": "DataTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) Target Customer Tenant ID.",
                                            "type": "text/plain"
                                        },
                                        "key": "CustomerTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Too Many Requests",
                            "code": 429,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"severity\": \"Error\",\n    \"errorMessage\": \"DataTenant entity can't be imported. Too many requests.\",\n    \"errorCode\": 429,\n    \"errorDetailMessage\": \"Max number of retries is exceeded for loadObjects.. com.reltio.dtss.service.api.http.APIClientCriticalException: Max number of retries is exceeded for loadObjects.\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c2348e01-bcaf-4331-90d7-833a2e41ac57",
                            "name": "Service Unavailable",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dtss",
                                        "entities",
                                        "_merge"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "(Required) Entity URI from the Data Tenant. For example: <b>00iPLVp</b> or <b>entities/00iPLVp</b>.",
                                                "type": "text/plain"
                                            },
                                            "key": "dataEntityUri",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "(Required) Entity URI from the Customer Tenant. For example, <b>00iPLVp</b> or <b>entities/00iPLVp</b>.",
                                                "type": "text/plain"
                                            },
                                            "key": "customerEntityUri",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) Source Data Tenant ID.",
                                            "type": "text/plain"
                                        },
                                        "key": "DataTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) Target Customer Tenant ID.",
                                            "type": "text/plain"
                                        },
                                        "key": "CustomerTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"severity\": \"Error\",\n    \"errorMessage\": \"DataTenant entity can't be imported. quota_exceeded.\",\n    \"errorCode\": 503,\n    \"errorDetailMessage\": \"Code: DATA_ENTITY_CANNOT_BE_IMPORTED_SERVICE_UNAVAILABLE; Message parameters: [Max number of retries is exceeded for loadObjects.. com.reltio.dtss.service.api.http.APIClientCriticalException: Max number of retries is exceeded for loadObjects.\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "fb9dd14d-22e6-4371-a928-9f8dfb3bd90b",
                    "name": "/services/dtss/entities/_notMatch",
                    "request": {
                        "name": "/services/dtss/entities/_notMatch",
                        "description": {
                            "content": "If the entity URI specified in the request matches with an entity URI in the customer tenant, the API returns the entity from the customer tenant.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dtss",
                                "entities",
                                "_notMatch"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Entity URI from the Customer Tenant.",
                                        "type": "text/plain"
                                    },
                                    "key": "customerEntityUri",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Specifies if response must contain entities. The default value is <b>false</b>.",
                                        "type": "text/plain"
                                    },
                                    "key": "returnObjects",
                                    "value": "false"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required) ID of the Data Tenant.",
                                    "type": "text/plain"
                                },
                                "key": "DataTenant",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required) ID of the Customer Tenant.",
                                    "type": "text/plain"
                                },
                                "key": "CustomerTenant",
                                "value": "<string>"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "63a0589f-21e0-49ac-8a01-887c38f7890e",
                            "name": "successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dtss",
                                        "entities",
                                        "_notMatch"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "(Required) Entity URI from the Customer Tenant.",
                                                "type": "text/plain"
                                            },
                                            "key": "customerEntityUri",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if response must contain entities. The default value is <b>false</b>.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) ID of the Data Tenant.",
                                            "type": "text/plain"
                                        },
                                        "key": "DataTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) ID of the Customer Tenant.",
                                            "type": "text/plain"
                                        },
                                        "key": "CustomerTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "<string>",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "b8f2dd50-5fe8-4679-a2c9-732b55a14409",
                    "name": "/services/dtss/entities/_notMatch",
                    "request": {
                        "name": "/services/dtss/entities/_notMatch",
                        "description": {
                            "content": "With this API, you mark an entity in customer tenant as not a match with the entity in the data tenant. It takes the entity URI of the customer tenant and data tenant as input parameters and returns a success message if the two entities are marked as not a match.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dtss",
                                "entities",
                                "_notMatch"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Entity URI in the data tenant.",
                                        "type": "text/plain"
                                    },
                                    "key": "dataEntityUri",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Entity URI in the customer tenant.",
                                        "type": "text/plain"
                                    },
                                    "key": "customerEntityUri",
                                    "value": "<string>"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required) Source Data Tenant ID.",
                                    "type": "text/plain"
                                },
                                "key": "DataTenant",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required) Target Customer Tenant ID.",
                                    "type": "text/plain"
                                },
                                "key": "CustomerTenant",
                                "value": "<string>"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "2c0ffb84-d9b7-4915-8794-c8832f841864",
                            "name": "successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dtss",
                                        "entities",
                                        "_notMatch"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "(Required) Entity URI in the data tenant.",
                                                "type": "text/plain"
                                            },
                                            "key": "dataEntityUri",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "(Required) Entity URI in the customer tenant.",
                                                "type": "text/plain"
                                            },
                                            "key": "customerEntityUri",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) Source Data Tenant ID.",
                                            "type": "text/plain"
                                        },
                                        "key": "DataTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) Target Customer Tenant ID.",
                                            "type": "text/plain"
                                        },
                                        "key": "CustomerTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"successful\": \"<boolean>\",\n  \"error\": \"<string>\",\n  \"result\": {},\n  \"message\": \"<string>\",\n  \"empty\": \"<boolean>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3cbcbd18-580e-448d-9aa9-3535959ee4cf",
                            "name": "Bad Request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dtss",
                                        "entities",
                                        "_notMatch"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "(Required) Entity URI in the data tenant.",
                                                "type": "text/plain"
                                            },
                                            "key": "dataEntityUri",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "(Required) Entity URI in the customer tenant.",
                                                "type": "text/plain"
                                            },
                                            "key": "customerEntityUri",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) Source Data Tenant ID.",
                                            "type": "text/plain"
                                        },
                                        "key": "DataTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) Target Customer Tenant ID.",
                                            "type": "text/plain"
                                        },
                                        "key": "CustomerTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"successful\": false,\n    \"error\": \"Subscription for DT staticData01 and CT staticCustomer01 does not exist.\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e02111cb-7138-462c-a056-6223335c89fb",
                            "name": "Not Found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dtss",
                                        "entities",
                                        "_notMatch"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "(Required) Entity URI in the data tenant.",
                                                "type": "text/plain"
                                            },
                                            "key": "dataEntityUri",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "(Required) Entity URI in the customer tenant.",
                                                "type": "text/plain"
                                            },
                                            "key": "customerEntityUri",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) Source Data Tenant ID.",
                                            "type": "text/plain"
                                        },
                                        "key": "DataTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) Target Customer Tenant ID.",
                                            "type": "text/plain"
                                        },
                                        "key": "CustomerTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"successful\": false,\n    \"error\": \"dataEntityUri and/or customerEntityUri not found.\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "34328c01-6f26-4414-b172-d738eafe4bac",
                    "name": "/services/dtss/entities/_notMatch",
                    "request": {
                        "name": "/services/dtss/entities/_notMatch",
                        "description": {
                            "content": "With this API endpoint, you remove the indicator that marks the entities in the data tenant and customer tenant as not matches.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dtss",
                                "entities",
                                "_notMatch"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Data tenant entity URI.",
                                        "type": "text/plain"
                                    },
                                    "key": "dataEntityUri",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Customer tenant entity URI.",
                                        "type": "text/plain"
                                    },
                                    "key": "customerEntityUri",
                                    "value": "<string>"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required) Source Data Tenant ID.",
                                    "type": "text/plain"
                                },
                                "key": "DataTenant",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required) Target Customer Tenant ID.",
                                    "type": "text/plain"
                                },
                                "key": "CustomerTenant",
                                "value": "<string>"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "7dfe49b3-7986-4345-9d79-e3ab801d8ec6",
                            "name": "successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dtss",
                                        "entities",
                                        "_notMatch"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "(Required) Data tenant entity URI.",
                                                "type": "text/plain"
                                            },
                                            "key": "dataEntityUri",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "(Required) Customer tenant entity URI.",
                                                "type": "text/plain"
                                            },
                                            "key": "customerEntityUri",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) Source Data Tenant ID.",
                                            "type": "text/plain"
                                        },
                                        "key": "DataTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) Target Customer Tenant ID.",
                                            "type": "text/plain"
                                        },
                                        "key": "CustomerTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"successful\": \"<boolean>\",\n  \"error\": \"<string>\",\n  \"result\": {},\n  \"message\": \"<string>\",\n  \"empty\": \"<boolean>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d3460eae-c335-4dd1-8f4b-fedfd8ba0fdf",
                            "name": "Bad Request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dtss",
                                        "entities",
                                        "_notMatch"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "(Required) Data tenant entity URI.",
                                                "type": "text/plain"
                                            },
                                            "key": "dataEntityUri",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "(Required) Customer tenant entity URI.",
                                                "type": "text/plain"
                                            },
                                            "key": "customerEntityUri",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) Source Data Tenant ID.",
                                            "type": "text/plain"
                                        },
                                        "key": "DataTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) Target Customer Tenant ID.",
                                            "type": "text/plain"
                                        },
                                        "key": "CustomerTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"successful\": false,\n    \"error\": \"dataEntityUri and/or customerEntityUri not found.\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "7e6102c8-87d4-4b60-823d-0889a92363b6",
                    "name": "/services/dtss/entities/_unmerge",
                    "request": {
                        "name": "/services/dtss/entities/_unmerge",
                        "description": {
                            "content": "This endpoint unsubscribes an entity in a data tenant from an entity in a customer tenant. The body of the request must contain details of the crosswalk of the customer tenant entity to be unsubscribed.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dtss",
                                "entities",
                                "_unmerge"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required) Target Customer tenant ID.",
                                    "type": "text/plain"
                                },
                                "key": "CustomerTenant",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required) Target Data tenant ID.",
                                    "type": "text/plain"
                                },
                                "key": "DataTenant",
                                "value": "<string>"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  {\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"sourceTable\": \"<string>\"\n  },\n  {\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"sourceTable\": \"<string>\"\n  }\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "9fa7a7d3-c58b-4e70-b93e-e336100e4414",
                            "name": "successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dtss",
                                        "entities",
                                        "_unmerge"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) Target Customer tenant ID.",
                                            "type": "text/plain"
                                        },
                                        "key": "CustomerTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) Target Data tenant ID.",
                                            "type": "text/plain"
                                        },
                                        "key": "DataTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"sourceTable\": \"<string>\"\n  },\n  {\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"sourceTable\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"successful\": \"<boolean>\",\n  \"error\": \"<string>\",\n  \"result\": {},\n  \"message\": \"<string>\",\n  \"empty\": \"<boolean>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6512e262-a1fa-4042-9a75-bb10f5505cc0",
                            "name": "Bad Request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dtss",
                                        "entities",
                                        "_unmerge"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) Target Customer tenant ID.",
                                            "type": "text/plain"
                                        },
                                        "key": "CustomerTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) Target Data tenant ID.",
                                            "type": "text/plain"
                                        },
                                        "key": "DataTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"sourceTable\": \"<string>\"\n  },\n  {\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"sourceTable\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"successful\": false,\n    \"error\": \"Operation failed with error: Entity not found in customer tenant 'staticCustomer01' for the crosswalk(s).\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "8ae8e4d1-9920-4d5a-999f-dcf4eb2b68f9",
                    "name": "/services/dtss/entities/_verifyMatches",
                    "request": {
                        "name": "/services/dtss/entities/_verifyMatches",
                        "description": {
                            "content": "This API returns how the match engine decided on matches between the data tenant and customer tenant.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dtss",
                                "entities",
                                "_verifyMatches"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "The match rules that are enabled.",
                                        "type": "text/plain"
                                    },
                                    "key": "rules",
                                    "value": "<string>"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required) ID of the Data Tenant.",
                                    "type": "text/plain"
                                },
                                "key": "DataTenant",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required) ID of the Customer tenant.",
                                    "type": "text/plain"
                                },
                                "key": "CustomerTenant",
                                "value": "<string>"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "7086e179-1c3c-498d-b908-5ebc05dc1070",
                            "name": "successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dtss",
                                        "entities",
                                        "_verifyMatches"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "The match rules that are enabled.",
                                                "type": "text/plain"
                                            },
                                            "key": "rules",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) ID of the Data Tenant.",
                                            "type": "text/plain"
                                        },
                                        "key": "DataTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) ID of the Customer tenant.",
                                            "type": "text/plain"
                                        },
                                        "key": "CustomerTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"incididunt__\": {\n    \"setAsNotMatch\": \"<boolean>\",\n    \"alreadySubscribed\": \"<boolean>\",\n    \"platformMatchRuleExplanation\": {\n      \"label\": \"<string>\",\n      \"useOvOnly\": \"<boolean>\",\n      \"matchTokensExplanation\": {\n        \"first\": {\n          \"foundInMatchTables\": \"<boolean>\",\n          \"tokens\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"tokensGenerated\": \"<integer>\",\n          \"tokensToBeGenerated\": \"<integer>\",\n          \"maximumTokenExpected\": \"<integer>\",\n          \"warning\": \"<string>\"\n        },\n        \"second\": {\n          \"foundInMatchTables\": \"<boolean>\",\n          \"tokens\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"tokensGenerated\": \"<integer>\",\n          \"tokensToBeGenerated\": \"<integer>\",\n          \"maximumTokenExpected\": \"<integer>\",\n          \"warning\": \"<string>\"\n        },\n        \"intersection\": {\n          \"foundInMatchTables\": \"<boolean>\",\n          \"tokens\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"tokensGenerated\": \"<integer>\",\n          \"tokensToBeGenerated\": \"<integer>\",\n          \"maximumTokenExpected\": \"<integer>\",\n          \"warning\": \"<string>\"\n        }\n      },\n      \"ruleExplanation\": {\n        \"andOperandExplanations\": [\n          {\n            \"value\": \"<Circular reference to #/components/schemas/RuleOperandExplanation detected>\"\n          },\n          {\n            \"value\": \"<Circular reference to #/components/schemas/RuleOperandExplanation detected>\"\n          }\n        ],\n        \"orOperandExplanations\": [\n          {\n            \"value\": \"<Circular reference to #/components/schemas/RuleOperandExplanation detected>\"\n          },\n          {\n            \"value\": \"<Circular reference to #/components/schemas/RuleOperandExplanation detected>\"\n          }\n        ],\n        \"notOperandExplanations\": [\n          {\n            \"value\": \"<Circular reference to #/components/schemas/RuleOperandExplanation detected>\"\n          },\n          {\n            \"value\": \"<Circular reference to #/components/schemas/RuleOperandExplanation detected>\"\n          }\n        ],\n        \"equalsExplanations\": [\n          {\n            \"attribute\": \"<string>\",\n            \"values\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"first\": \"<boolean>\",\n            \"second\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"strict\": \"<boolean>\",\n            \"relevance\": \"<number>\",\n            \"checkNulls\": \"<boolean>\"\n          },\n          {\n            \"attribute\": \"<string>\",\n            \"values\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"first\": \"<boolean>\",\n            \"second\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"strict\": \"<boolean>\",\n            \"relevance\": \"<number>\",\n            \"checkNulls\": \"<boolean>\"\n          }\n        ],\n        \"notEqualsExplanations\": [\n          {\n            \"attribute\": \"<string>\",\n            \"values\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"first\": \"<boolean>\",\n            \"second\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"strict\": \"<boolean>\",\n            \"relevance\": \"<number>\",\n            \"checkNulls\": \"<boolean>\"\n          },\n          {\n            \"attribute\": \"<string>\",\n            \"values\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"first\": \"<boolean>\",\n            \"second\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"strict\": \"<boolean>\",\n            \"relevance\": \"<number>\",\n            \"checkNulls\": \"<boolean>\"\n          }\n        ],\n        \"inExplanations\": [\n          {\n            \"attribute\": \"<string>\",\n            \"values\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"first\": \"<boolean>\",\n            \"second\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"strict\": \"<boolean>\",\n            \"relevance\": \"<number>\",\n            \"checkNulls\": \"<boolean>\"\n          },\n          {\n            \"attribute\": \"<string>\",\n            \"values\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"first\": \"<boolean>\",\n            \"second\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"strict\": \"<boolean>\",\n            \"relevance\": \"<number>\",\n            \"checkNulls\": \"<boolean>\"\n          }\n        ],\n        \"exactExplanations\": {\n          \"inaf\": {\n            \"match\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"relevance\": \"<double>\"\n          }\n        },\n        \"exactOrNullExplanations\": {\n          \"dolore3\": {\n            \"match\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"relevance\": \"<double>\"\n          },\n          \"eiusmod7_\": {\n            \"match\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"relevance\": \"<double>\"\n          }\n        },\n        \"exactOrAllNullExplanations\": {\n          \"sunt_0e\": {\n            \"match\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"relevance\": \"<double>\"\n          }\n        },\n        \"fuzzyExplanations\": {\n          \"eiusmod624\": {\n            \"match\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"relevance\": \"<double>\"\n          }\n        },\n        \"multiExplanations\": {\n          \"fugiat_542\": {\n            \"match\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"relevance\": \"<double>\"\n          },\n          \"veniam2b\": {\n            \"match\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"relevance\": \"<double>\"\n          },\n          \"nulla35\": {\n            \"match\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"relevance\": \"<double>\"\n          }\n        },\n        \"documentComparatorExplanation\": {},\n        \"relevance\": \"<double>\"\n      },\n      \"matchIQExplanation\": {\n        \"documentComparatorExplanation\": {},\n        \"relevance\": \"<double>\"\n      },\n      \"negativeRuleExplanation\": {\n        \"andOperandExplanations\": [\n          {\n            \"value\": \"<Circular reference to #/components/schemas/RuleOperandExplanation detected>\"\n          },\n          {\n            \"value\": \"<Circular reference to #/components/schemas/RuleOperandExplanation detected>\"\n          }\n        ],\n        \"orOperandExplanations\": [\n          {\n            \"value\": \"<Circular reference to #/components/schemas/RuleOperandExplanation detected>\"\n          },\n          {\n            \"value\": \"<Circular reference to #/components/schemas/RuleOperandExplanation detected>\"\n          }\n        ],\n        \"notOperandExplanations\": [\n          {\n            \"value\": \"<Circular reference to #/components/schemas/RuleOperandExplanation detected>\"\n          },\n          {\n            \"value\": \"<Circular reference to #/components/schemas/RuleOperandExplanation detected>\"\n          }\n        ],\n        \"equalsExplanations\": [\n          {\n            \"attribute\": \"<string>\",\n            \"values\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"first\": \"<boolean>\",\n            \"second\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"strict\": \"<boolean>\",\n            \"relevance\": \"<number>\",\n            \"checkNulls\": \"<boolean>\"\n          },\n          {\n            \"attribute\": \"<string>\",\n            \"values\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"first\": \"<boolean>\",\n            \"second\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"strict\": \"<boolean>\",\n            \"relevance\": \"<number>\",\n            \"checkNulls\": \"<boolean>\"\n          }\n        ],\n        \"notEqualsExplanations\": [\n          {\n            \"attribute\": \"<string>\",\n            \"values\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"first\": \"<boolean>\",\n            \"second\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"strict\": \"<boolean>\",\n            \"relevance\": \"<number>\",\n            \"checkNulls\": \"<boolean>\"\n          },\n          {\n            \"attribute\": \"<string>\",\n            \"values\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"first\": \"<boolean>\",\n            \"second\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"strict\": \"<boolean>\",\n            \"relevance\": \"<number>\",\n            \"checkNulls\": \"<boolean>\"\n          }\n        ],\n        \"inExplanations\": [\n          {\n            \"attribute\": \"<string>\",\n            \"values\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"first\": \"<boolean>\",\n            \"second\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"strict\": \"<boolean>\",\n            \"relevance\": \"<number>\",\n            \"checkNulls\": \"<boolean>\"\n          },\n          {\n            \"attribute\": \"<string>\",\n            \"values\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"first\": \"<boolean>\",\n            \"second\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"strict\": \"<boolean>\",\n            \"relevance\": \"<number>\",\n            \"checkNulls\": \"<boolean>\"\n          }\n        ],\n        \"exactExplanations\": {\n          \"in_8\": {\n            \"match\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"relevance\": \"<double>\"\n          }\n        },\n        \"exactOrNullExplanations\": {\n          \"commodoa4\": {\n            \"match\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"relevance\": \"<double>\"\n          }\n        },\n        \"exactOrAllNullExplanations\": {\n          \"incididunt92\": {\n            \"match\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"relevance\": \"<double>\"\n          },\n          \"Duis_f\": {\n            \"match\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"relevance\": \"<double>\"\n          }\n        },\n        \"fuzzyExplanations\": {\n          \"in03\": {\n            \"match\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"relevance\": \"<double>\"\n          },\n          \"in_d96\": {\n            \"match\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"relevance\": \"<double>\"\n          }\n        },\n        \"multiExplanations\": {\n          \"incididuntb0f\": {\n            \"match\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"relevance\": \"<double>\"\n          },\n          \"Lorem60\": {\n            \"match\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"relevance\": \"<double>\"\n          },\n          \"veniam_f20\": {\n            \"match\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"relevance\": \"<double>\"\n          }\n        },\n        \"documentComparatorExplanation\": {},\n        \"relevance\": \"<double>\"\n      },\n      \"matched\": \"<boolean>\",\n      \"matchedByDocuments\": \"<boolean>\",\n      \"matchActionType\": \"<string>\",\n      \"relevance\": \"<double>\",\n      \"bypassed\": \"<boolean>\"\n    }\n  },\n  \"ipsum4d6\": {\n    \"setAsNotMatch\": \"<boolean>\",\n    \"alreadySubscribed\": \"<boolean>\",\n    \"platformMatchRuleExplanation\": {\n      \"label\": \"<string>\",\n      \"useOvOnly\": \"<boolean>\",\n      \"matchTokensExplanation\": {\n        \"first\": {\n          \"foundInMatchTables\": \"<boolean>\",\n          \"tokens\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"tokensGenerated\": \"<integer>\",\n          \"tokensToBeGenerated\": \"<integer>\",\n          \"maximumTokenExpected\": \"<integer>\",\n          \"warning\": \"<string>\"\n        },\n        \"second\": {\n          \"foundInMatchTables\": \"<boolean>\",\n          \"tokens\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"tokensGenerated\": \"<integer>\",\n          \"tokensToBeGenerated\": \"<integer>\",\n          \"maximumTokenExpected\": \"<integer>\",\n          \"warning\": \"<string>\"\n        },\n        \"intersection\": {\n          \"foundInMatchTables\": \"<boolean>\",\n          \"tokens\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"tokensGenerated\": \"<integer>\",\n          \"tokensToBeGenerated\": \"<integer>\",\n          \"maximumTokenExpected\": \"<integer>\",\n          \"warning\": \"<string>\"\n        }\n      },\n      \"ruleExplanation\": {\n        \"andOperandExplanations\": [\n          {\n            \"value\": \"<Circular reference to #/components/schemas/RuleOperandExplanation detected>\"\n          },\n          {\n            \"value\": \"<Circular reference to #/components/schemas/RuleOperandExplanation detected>\"\n          }\n        ],\n        \"orOperandExplanations\": [\n          {\n            \"value\": \"<Circular reference to #/components/schemas/RuleOperandExplanation detected>\"\n          },\n          {\n            \"value\": \"<Circular reference to #/components/schemas/RuleOperandExplanation detected>\"\n          }\n        ],\n        \"notOperandExplanations\": [\n          {\n            \"value\": \"<Circular reference to #/components/schemas/RuleOperandExplanation detected>\"\n          },\n          {\n            \"value\": \"<Circular reference to #/components/schemas/RuleOperandExplanation detected>\"\n          }\n        ],\n        \"equalsExplanations\": [\n          {\n            \"attribute\": \"<string>\",\n            \"values\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"first\": \"<boolean>\",\n            \"second\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"strict\": \"<boolean>\",\n            \"relevance\": \"<number>\",\n            \"checkNulls\": \"<boolean>\"\n          },\n          {\n            \"attribute\": \"<string>\",\n            \"values\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"first\": \"<boolean>\",\n            \"second\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"strict\": \"<boolean>\",\n            \"relevance\": \"<number>\",\n            \"checkNulls\": \"<boolean>\"\n          }\n        ],\n        \"notEqualsExplanations\": [\n          {\n            \"attribute\": \"<string>\",\n            \"values\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"first\": \"<boolean>\",\n            \"second\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"strict\": \"<boolean>\",\n            \"relevance\": \"<number>\",\n            \"checkNulls\": \"<boolean>\"\n          },\n          {\n            \"attribute\": \"<string>\",\n            \"values\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"first\": \"<boolean>\",\n            \"second\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"strict\": \"<boolean>\",\n            \"relevance\": \"<number>\",\n            \"checkNulls\": \"<boolean>\"\n          }\n        ],\n        \"inExplanations\": [\n          {\n            \"attribute\": \"<string>\",\n            \"values\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"first\": \"<boolean>\",\n            \"second\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"strict\": \"<boolean>\",\n            \"relevance\": \"<number>\",\n            \"checkNulls\": \"<boolean>\"\n          },\n          {\n            \"attribute\": \"<string>\",\n            \"values\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"first\": \"<boolean>\",\n            \"second\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"strict\": \"<boolean>\",\n            \"relevance\": \"<number>\",\n            \"checkNulls\": \"<boolean>\"\n          }\n        ],\n        \"exactExplanations\": {\n          \"temporfd7\": {\n            \"match\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"relevance\": \"<double>\"\n          },\n          \"consequat90a\": {\n            \"match\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"relevance\": \"<double>\"\n          }\n        },\n        \"exactOrNullExplanations\": {\n          \"deserunt_8\": {\n            \"match\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"relevance\": \"<double>\"\n          },\n          \"veniam3\": {\n            \"match\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"relevance\": \"<double>\"\n          },\n          \"enim29\": {\n            \"match\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"relevance\": \"<double>\"\n          }\n        },\n        \"exactOrAllNullExplanations\": {\n          \"do_2_\": {\n            \"match\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"relevance\": \"<double>\"\n          }\n        },\n        \"fuzzyExplanations\": {\n          \"magna7\": {\n            \"match\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"relevance\": \"<double>\"\n          },\n          \"dolore_fc2\": {\n            \"match\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"relevance\": \"<double>\"\n          }\n        },\n        \"multiExplanations\": {\n          \"ut_7\": {\n            \"match\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"relevance\": \"<double>\"\n          }\n        },\n        \"documentComparatorExplanation\": {},\n        \"relevance\": \"<double>\"\n      },\n      \"matchIQExplanation\": {\n        \"documentComparatorExplanation\": {},\n        \"relevance\": \"<double>\"\n      },\n      \"negativeRuleExplanation\": {\n        \"andOperandExplanations\": [\n          {\n            \"value\": \"<Circular reference to #/components/schemas/RuleOperandExplanation detected>\"\n          },\n          {\n            \"value\": \"<Circular reference to #/components/schemas/RuleOperandExplanation detected>\"\n          }\n        ],\n        \"orOperandExplanations\": [\n          {\n            \"value\": \"<Circular reference to #/components/schemas/RuleOperandExplanation detected>\"\n          },\n          {\n            \"value\": \"<Circular reference to #/components/schemas/RuleOperandExplanation detected>\"\n          }\n        ],\n        \"notOperandExplanations\": [\n          {\n            \"value\": \"<Circular reference to #/components/schemas/RuleOperandExplanation detected>\"\n          },\n          {\n            \"value\": \"<Circular reference to #/components/schemas/RuleOperandExplanation detected>\"\n          }\n        ],\n        \"equalsExplanations\": [\n          {\n            \"attribute\": \"<string>\",\n            \"values\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"first\": \"<boolean>\",\n            \"second\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"strict\": \"<boolean>\",\n            \"relevance\": \"<number>\",\n            \"checkNulls\": \"<boolean>\"\n          },\n          {\n            \"attribute\": \"<string>\",\n            \"values\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"first\": \"<boolean>\",\n            \"second\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"strict\": \"<boolean>\",\n            \"relevance\": \"<number>\",\n            \"checkNulls\": \"<boolean>\"\n          }\n        ],\n        \"notEqualsExplanations\": [\n          {\n            \"attribute\": \"<string>\",\n            \"values\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"first\": \"<boolean>\",\n            \"second\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"strict\": \"<boolean>\",\n            \"relevance\": \"<number>\",\n            \"checkNulls\": \"<boolean>\"\n          },\n          {\n            \"attribute\": \"<string>\",\n            \"values\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"first\": \"<boolean>\",\n            \"second\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"strict\": \"<boolean>\",\n            \"relevance\": \"<number>\",\n            \"checkNulls\": \"<boolean>\"\n          }\n        ],\n        \"inExplanations\": [\n          {\n            \"attribute\": \"<string>\",\n            \"values\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"first\": \"<boolean>\",\n            \"second\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"strict\": \"<boolean>\",\n            \"relevance\": \"<number>\",\n            \"checkNulls\": \"<boolean>\"\n          },\n          {\n            \"attribute\": \"<string>\",\n            \"values\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"first\": \"<boolean>\",\n            \"second\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"strict\": \"<boolean>\",\n            \"relevance\": \"<number>\",\n            \"checkNulls\": \"<boolean>\"\n          }\n        ],\n        \"exactExplanations\": {\n          \"nisi_f\": {\n            \"match\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"relevance\": \"<double>\"\n          },\n          \"sunt6_e\": {\n            \"match\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"relevance\": \"<double>\"\n          }\n        },\n        \"exactOrNullExplanations\": {\n          \"sed7\": {\n            \"match\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"relevance\": \"<double>\"\n          },\n          \"iruref51\": {\n            \"match\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"relevance\": \"<double>\"\n          },\n          \"minimbc\": {\n            \"match\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"relevance\": \"<double>\"\n          },\n          \"culpa76\": {\n            \"match\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"relevance\": \"<double>\"\n          },\n          \"deserunta9\": {\n            \"match\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"relevance\": \"<double>\"\n          }\n        },\n        \"exactOrAllNullExplanations\": {\n          \"voluptate__7\": {\n            \"match\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"relevance\": \"<double>\"\n          }\n        },\n        \"fuzzyExplanations\": {\n          \"Duis_1\": {\n            \"match\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"relevance\": \"<double>\"\n          },\n          \"minim_8\": {\n            \"match\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"relevance\": \"<double>\"\n          }\n        },\n        \"multiExplanations\": {\n          \"utac8\": {\n            \"match\": \"<boolean>\",\n            \"ignoreInToken\": \"<boolean>\",\n            \"relevance\": \"<double>\"\n          }\n        },\n        \"documentComparatorExplanation\": {},\n        \"relevance\": \"<double>\"\n      },\n      \"matched\": \"<boolean>\",\n      \"matchedByDocuments\": \"<boolean>\",\n      \"matchActionType\": \"<string>\",\n      \"relevance\": \"<double>\",\n      \"bypassed\": \"<boolean>\"\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "bbfd09ec-9998-4dcb-8da2-d625a5fa0a15",
                            "name": "Bad Request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dtss",
                                        "entities",
                                        "_verifyMatches"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "The match rules that are enabled.",
                                                "type": "text/plain"
                                            },
                                            "key": "rules",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) ID of the Data Tenant.",
                                            "type": "text/plain"
                                        },
                                        "key": "DataTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) ID of the Customer tenant.",
                                            "type": "text/plain"
                                        },
                                        "key": "CustomerTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"severity\": \"Error\",\n    \"errorMessage\": \"Unsupported request. \",\n    \"errorCode\": 2003,\n    \"errorDetailMessage\": \"Invalid path, request method or content-type in user request\",\n    \"innerErrorData\": {\n      \"exception\": \"com.reltio.metadata.errors.CommonException:Code: INVALID_REQUEST_ERROR; Message parameters: null. Unsupported request. {0}. Invalid path, request method or content-type in user request\",\n      \"stack\": [\n        \"com.reltio.dtss.rest.controller.data.search.MatchesController.getMatchExplanation at MatchesController.java, line 153\",\n        \"com.reltio.dtss.rest.controller.data.search.MatchesController.getMatchExplanationInDtMetadata at MatchesController.java, line 146\",\n        \"com.reltio.dtss.rest.controller.data.search.MatchesController$$FastClassBySpringCGLIB$$b2e2c717.invoke at <generated>, line -1\",\n        \"org.springframework.cglib.proxy.MethodProxy.invoke at MethodProxy.java, line 204\",\n        \"org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint at CglibAopProxy.java, line 717\",\n        \"org.springframework.aop.framework.ReflectiveMethodInvocation.proceed at ReflectiveMethodInvocation.java, line 157\",\n        \"org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke at MethodSecurityInterceptor.java, line 68\",\n        \"org.springframework.aop.framework.ReflectiveMethodInvocation.proceed at ReflectiveMethodInvocation.java, line 179\",\n        \"org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept at CglibAopProxy.java, line 653\",\n        \"com.reltio.dtss.rest.controller.data.search.MatchesController$$EnhancerBySpringCGLIB$$544ef15d_2.getMatchExplanationInDtMetadata at <generated>, line -1\",\n        \"sun.reflect.NativeMethodAccessorImpl.invoke0 at NativeMethodAccessorImpl.java, line -2\",\n        \"sun.reflect.NativeMethodAccessorImpl.invoke at NativeMethodAccessorImpl.java, line 62\",\n        \"sun.reflect.DelegatingMethodAccessorImpl.invoke at DelegatingMethodAccessorImpl.java, line 43\",\n        \"java.lang.reflect.Method.invoke at Method.java, line 498\",\n        \"org.springframework.web.method.support.InvocableHandlerMethod.doInvoke at InvocableHandlerMethod.java, line 221\",\n        \"org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest at InvocableHandlerMethod.java, line 137\",\n        \"org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle at ServletInvocableHandlerMethod.java, line 110\",\n        \"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod at RequestMappingHandlerAdapter.java, line 806\",\n        \"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal at RequestMappingHandlerAdapter.java, line 729\",\n        \"org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle at AbstractHandlerMethodAdapter.java, line 85\",\n        \"org.springframework.web.servlet.DispatcherServlet.doDispatch at DispatcherServlet.java, line 959\",\n        \"org.springframework.web.servlet.DispatcherServlet.doService at DispatcherServlet.java, line 893\",\n        \"org.springframework.web.servlet.FrameworkServlet.processRequest at FrameworkServlet.java, line 970\",\n        \"org.springframework.web.servlet.FrameworkServlet.doPost at FrameworkServlet.java, line 872\",\n        \"javax.servlet.http.HttpServlet.service at HttpServlet.java, line 661\",\n        \"org.springframework.web.servlet.FrameworkServlet.service at FrameworkServlet.java, line 846\",\n        \"javax.servlet.http.HttpServlet.service at HttpServlet.java, line 742\",\n        \"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter at ApplicationFilterChain.java, line 231\",\n        \"org.apache.catalina.core.ApplicationFilterChain.doFilter at ApplicationFilterChain.java, line 166\",\n        \"org.apache.tomcat.websocket.server.WsFilter.doFilter at WsFilter.java, line 52\",\n        \"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter at ApplicationFilterChain.java, line 193\",\n        \"org.apache.catalina.core.ApplicationFilterChain.doFilter at ApplicationFilterChain.java, line 166\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 316\",\n        \"org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke at FilterSecurityInterceptor.java, line 126\",\n        \"org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter at FilterSecurityInterceptor.java, line 90\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.access.ExceptionTranslationFilter.doFilter at ExceptionTranslationFilter.java, line 114\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter at AnonymousAuthenticationFilter.java, line 111\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter at SecurityContextHolderAwareRequestFilter.java, line 169\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter at OAuth2AuthenticationProcessingFilter.java, line 176\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal at HeaderWriterFilter.java, line 64\",\n        \"org.springframework.web.filter.OncePerRequestFilter.doFilter at OncePerRequestFilter.java, line 107\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal at WebAsyncManagerIntegrationFilter.java, line 53\",\n        \"org.springframework.web.filter.OncePerRequestFilter.doFilter at OncePerRequestFilter.java, line 107\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter at SecurityContextPersistenceFilter.java, line 91\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.FilterChainProxy.doFilterInternal at FilterChainProxy.java, line 213\",\n        \"org.springframework.security.web.FilterChainProxy.doFilter at FilterChainProxy.java, line 176\",\n        \"org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate at DelegatingFilterProxy.java, line 346\",\n        \"org.springframework.web.filter.DelegatingFilterProxy.doFilter at DelegatingFilterProxy.java, line 262\",\n        \"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter at ApplicationFilterChain.java, line 193\",\n        \"org.apache.catalina.core.ApplicationFilterChain.doFilter at ApplicationFilterChain.java, line 166\",\n        \"com.reltio.dtss.servlet.AllowCrossDomainRequestsFilter.doFilter at AllowCrossDomainRequestsFilter.java, line 32\",\n        \"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter at ApplicationFilterChain.java, line 193\",\n        \"org.apache.catalina.core.ApplicationFilterChain.doFilter at ApplicationFilterChain.java, line 166\",\n        \"org.apache.catalina.core.StandardWrapperValve.invoke at StandardWrapperValve.java, line 198\",\n        \"org.apache.catalina.core.StandardContextValve.invoke at StandardContextValve.java, line 96\",\n        \"org.apache.catalina.authenticator.AuthenticatorBase.invoke at AuthenticatorBase.java, line 504\",\n        \"org.apache.catalina.core.StandardHostValve.invoke at StandardHostValve.java, line 140\",\n        \"org.apache.catalina.valves.ErrorReportValve.invoke at ErrorReportValve.java, line 81\",\n        \"org.apache.catalina.valves.AbstractAccessLogValve.invoke at AbstractAccessLogValve.java, line 650\",\n        \"org.apache.catalina.core.StandardEngineValve.invoke at StandardEngineValve.java, line 87\",\n        \"org.apache.catalina.connector.CoyoteAdapter.service at CoyoteAdapter.java, line 342\",\n        \"org.apache.coyote.http11.Http11Processor.service at Http11Processor.java, line 803\",\n        \"org.apache.coyote.AbstractProcessorLight.process at AbstractProcessorLight.java, line 66\",\n        \"org.apache.coyote.AbstractProtocol$ConnectionHandler.process at AbstractProtocol.java, line 790\",\n        \"org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun at NioEndpoint.java, line 1459\",\n        \"org.apache.tomcat.util.net.SocketProcessorBase.run at SocketProcessorBase.java, line 49\",\n        \"java.util.concurrent.ThreadPoolExecutor.runWorker at ThreadPoolExecutor.java, line 1149\",\n        \"java.util.concurrent.ThreadPoolExecutor$Worker.run at ThreadPoolExecutor.java, line 624\",\n        \"org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run at TaskThread.java, line 61\",\n        \"java.lang.Thread.run at Thread.java, line 748\"\n      ]\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "c93dc374-357b-49a4-9226-64a64da56531",
                    "name": "/services/dtss/relations/_importRelation",
                    "request": {
                        "name": "/services/dtss/relations/_importRelation",
                        "description": {
                            "content": "The endpoint takes the URI of a relationship as a parameter and imports a relationship between the entities into the customer tenant.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dtss",
                                "relations",
                                "_importRelation"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) The Relation URI from the Data tenant which must be imported.",
                                        "type": "text/plain"
                                    },
                                    "key": "dataRelationUri",
                                    "value": "<string>"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required) The ID of the source Data tenant from which the relation must be imported.",
                                    "type": "text/plain"
                                },
                                "key": "DataTenant",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required) The ID of the target Customer tenant to which the relation must be imported.",
                                    "type": "text/plain"
                                },
                                "key": "CustomerTenant",
                                "value": "<string>"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "70260f4c-d9fb-4970-addd-5bab962dd4e1",
                            "name": "successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dtss",
                                        "relations",
                                        "_importRelation"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "(Required) The Relation URI from the Data tenant which must be imported.",
                                                "type": "text/plain"
                                            },
                                            "key": "dataRelationUri",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) The ID of the source Data tenant from which the relation must be imported.",
                                            "type": "text/plain"
                                        },
                                        "key": "DataTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) The ID of the target Customer tenant to which the relation must be imported.",
                                            "type": "text/plain"
                                        },
                                        "key": "CustomerTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"importedEntities\": [\n    {\n      \"success\": \"<boolean>\",\n      \"uris\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"success\": \"<boolean>\",\n      \"uris\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ],\n  \"importedRelations\": [\n    {\n      \"success\": \"<boolean>\",\n      \"uris\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"success\": \"<boolean>\",\n      \"uris\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ],\n  \"entitiesApiClientResult\": {\n    \"successCounter\": {\n      \"value\": \"<integer>\"\n    },\n    \"errorsCounter\": {\n      \"value\": \"<integer>\"\n    },\n    \"time\": {\n      \"value\": \"<long>\"\n    },\n    \"externalError\": {\n      \"value\": \"<integer>\"\n    },\n    \"errorLog\": [\n      {\n        \"timestamp\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"errorCode\": \"<integer>\"\n      },\n      {\n        \"timestamp\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"errorCode\": \"<integer>\"\n      }\n    ],\n    \"succeededDtObjects\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"expiredContracts\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"objectsUploadResult\": {\n      \"success\": \"<boolean>\",\n      \"slicesByDtUri\": {\n        \"ade39\": {\n          \"success\": \"<boolean>\",\n          \"errors\": {\n            \"_nodeFactory\": {\n              \"_cfgBigDecimalExact\": \"<boolean>\"\n            }\n          },\n          \"perCrosswalk\": {\n            \"quis_9\": {\n              \"success\": \"<boolean>\",\n              \"targetObjectInfos\": [\n                {\n                  \"uri\": \"<string>\",\n                  \"type\": \"<string>\",\n                  \"createdTime\": \"<dateTime>\",\n                  \"updatedTime\": \"<dateTime>\",\n                  \"crosswalks\": [\n                    {\n                      \"type\": \"<string>\",\n                      \"value\": \"<string>\",\n                      \"sourceTable\": \"<string>\",\n                      \"createDate\": \"<dateTime>\",\n                      \"updateDate\": \"<dateTime>\"\n                    },\n                    {\n                      \"type\": \"<string>\",\n                      \"value\": \"<string>\",\n                      \"sourceTable\": \"<string>\",\n                      \"createDate\": \"<dateTime>\",\n                      \"updateDate\": \"<dateTime>\"\n                    }\n                  ]\n                },\n                {\n                  \"uri\": \"<string>\",\n                  \"type\": \"<string>\",\n                  \"createdTime\": \"<dateTime>\",\n                  \"updatedTime\": \"<dateTime>\",\n                  \"crosswalks\": [\n                    {\n                      \"type\": \"<string>\",\n                      \"value\": \"<string>\",\n                      \"sourceTable\": \"<string>\",\n                      \"createDate\": \"<dateTime>\",\n                      \"updateDate\": \"<dateTime>\"\n                    },\n                    {\n                      \"type\": \"<string>\",\n                      \"value\": \"<string>\",\n                      \"sourceTable\": \"<string>\",\n                      \"createDate\": \"<dateTime>\",\n                      \"updateDate\": \"<dateTime>\"\n                    }\n                  ]\n                }\n              ],\n              \"errors\": {\n                \"_nodeFactory\": {\n                  \"_cfgBigDecimalExact\": \"<boolean>\"\n                }\n              },\n              \"details\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          }\n        }\n      }\n    }\n  },\n  \"relationsApiClientResult\": {\n    \"successCounter\": {\n      \"value\": \"<integer>\"\n    },\n    \"errorsCounter\": {\n      \"value\": \"<integer>\"\n    },\n    \"time\": {\n      \"value\": \"<long>\"\n    },\n    \"externalError\": {\n      \"value\": \"<integer>\"\n    },\n    \"errorLog\": [\n      {\n        \"timestamp\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"errorCode\": \"<integer>\"\n      },\n      {\n        \"timestamp\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"errorCode\": \"<integer>\"\n      }\n    ],\n    \"succeededDtObjects\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"expiredContracts\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"objectsUploadResult\": {\n      \"success\": \"<boolean>\",\n      \"slicesByDtUri\": {\n        \"magna_2_0\": {\n          \"success\": \"<boolean>\",\n          \"errors\": {\n            \"_nodeFactory\": {\n              \"_cfgBigDecimalExact\": \"<boolean>\"\n            }\n          },\n          \"perCrosswalk\": {\n            \"nostrudcd0\": {\n              \"success\": \"<boolean>\",\n              \"targetObjectInfos\": [\n                {\n                  \"uri\": \"<string>\",\n                  \"type\": \"<string>\",\n                  \"createdTime\": \"<dateTime>\",\n                  \"updatedTime\": \"<dateTime>\",\n                  \"crosswalks\": [\n                    {\n                      \"type\": \"<string>\",\n                      \"value\": \"<string>\",\n                      \"sourceTable\": \"<string>\",\n                      \"createDate\": \"<dateTime>\",\n                      \"updateDate\": \"<dateTime>\"\n                    },\n                    {\n                      \"type\": \"<string>\",\n                      \"value\": \"<string>\",\n                      \"sourceTable\": \"<string>\",\n                      \"createDate\": \"<dateTime>\",\n                      \"updateDate\": \"<dateTime>\"\n                    }\n                  ]\n                },\n                {\n                  \"uri\": \"<string>\",\n                  \"type\": \"<string>\",\n                  \"createdTime\": \"<dateTime>\",\n                  \"updatedTime\": \"<dateTime>\",\n                  \"crosswalks\": [\n                    {\n                      \"type\": \"<string>\",\n                      \"value\": \"<string>\",\n                      \"sourceTable\": \"<string>\",\n                      \"createDate\": \"<dateTime>\",\n                      \"updateDate\": \"<dateTime>\"\n                    },\n                    {\n                      \"type\": \"<string>\",\n                      \"value\": \"<string>\",\n                      \"sourceTable\": \"<string>\",\n                      \"createDate\": \"<dateTime>\",\n                      \"updateDate\": \"<dateTime>\"\n                    }\n                  ]\n                }\n              ],\n              \"errors\": {\n                \"_nodeFactory\": {\n                  \"_cfgBigDecimalExact\": \"<boolean>\"\n                }\n              },\n              \"details\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            },\n            \"adipisicing_97\": {\n              \"success\": \"<boolean>\",\n              \"targetObjectInfos\": [\n                {\n                  \"uri\": \"<string>\",\n                  \"type\": \"<string>\",\n                  \"createdTime\": \"<dateTime>\",\n                  \"updatedTime\": \"<dateTime>\",\n                  \"crosswalks\": [\n                    {\n                      \"type\": \"<string>\",\n                      \"value\": \"<string>\",\n                      \"sourceTable\": \"<string>\",\n                      \"createDate\": \"<dateTime>\",\n                      \"updateDate\": \"<dateTime>\"\n                    },\n                    {\n                      \"type\": \"<string>\",\n                      \"value\": \"<string>\",\n                      \"sourceTable\": \"<string>\",\n                      \"createDate\": \"<dateTime>\",\n                      \"updateDate\": \"<dateTime>\"\n                    }\n                  ]\n                },\n                {\n                  \"uri\": \"<string>\",\n                  \"type\": \"<string>\",\n                  \"createdTime\": \"<dateTime>\",\n                  \"updatedTime\": \"<dateTime>\",\n                  \"crosswalks\": [\n                    {\n                      \"type\": \"<string>\",\n                      \"value\": \"<string>\",\n                      \"sourceTable\": \"<string>\",\n                      \"createDate\": \"<dateTime>\",\n                      \"updateDate\": \"<dateTime>\"\n                    },\n                    {\n                      \"type\": \"<string>\",\n                      \"value\": \"<string>\",\n                      \"sourceTable\": \"<string>\",\n                      \"createDate\": \"<dateTime>\",\n                      \"updateDate\": \"<dateTime>\"\n                    }\n                  ]\n                }\n              ],\n              \"errors\": {\n                \"_nodeFactory\": {\n                  \"_cfgBigDecimalExact\": \"<boolean>\"\n                }\n              },\n              \"details\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            },\n            \"ullamco_f_\": {\n              \"success\": \"<boolean>\",\n              \"targetObjectInfos\": [\n                {\n                  \"uri\": \"<string>\",\n                  \"type\": \"<string>\",\n                  \"createdTime\": \"<dateTime>\",\n                  \"updatedTime\": \"<dateTime>\",\n                  \"crosswalks\": [\n                    {\n                      \"type\": \"<string>\",\n                      \"value\": \"<string>\",\n                      \"sourceTable\": \"<string>\",\n                      \"createDate\": \"<dateTime>\",\n                      \"updateDate\": \"<dateTime>\"\n                    },\n                    {\n                      \"type\": \"<string>\",\n                      \"value\": \"<string>\",\n                      \"sourceTable\": \"<string>\",\n                      \"createDate\": \"<dateTime>\",\n                      \"updateDate\": \"<dateTime>\"\n                    }\n                  ]\n                },\n                {\n                  \"uri\": \"<string>\",\n                  \"type\": \"<string>\",\n                  \"createdTime\": \"<dateTime>\",\n                  \"updatedTime\": \"<dateTime>\",\n                  \"crosswalks\": [\n                    {\n                      \"type\": \"<string>\",\n                      \"value\": \"<string>\",\n                      \"sourceTable\": \"<string>\",\n                      \"createDate\": \"<dateTime>\",\n                      \"updateDate\": \"<dateTime>\"\n                    },\n                    {\n                      \"type\": \"<string>\",\n                      \"value\": \"<string>\",\n                      \"sourceTable\": \"<string>\",\n                      \"createDate\": \"<dateTime>\",\n                      \"updateDate\": \"<dateTime>\"\n                    }\n                  ]\n                }\n              ],\n              \"errors\": {\n                \"_nodeFactory\": {\n                  \"_cfgBigDecimalExact\": \"<boolean>\"\n                }\n              },\n              \"details\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          }\n        }\n      }\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5061313a-4144-44f9-ad8d-b7afa34c4689",
                            "name": "Forbidden",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dtss",
                                        "relations",
                                        "_importRelation"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "(Required) The Relation URI from the Data tenant which must be imported.",
                                                "type": "text/plain"
                                            },
                                            "key": "dataRelationUri",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) The ID of the source Data tenant from which the relation must be imported.",
                                            "type": "text/plain"
                                        },
                                        "key": "DataTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) The ID of the target Customer tenant to which the relation must be imported.",
                                            "type": "text/plain"
                                        },
                                        "key": "CustomerTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"severity\": \"Error\",\n    \"errorMessage\": \"DataTenant entity can't be imported.\",\n    \"errorCode\": 403,\n    \"errorDetailMessage\": \"DataTenant entity can't be imported. The operation is forbidden for the current user, please check your privileges\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "70c4d7bb-36d1-4e38-b33f-1e9d70553bf3",
                            "name": "Not Found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dtss",
                                        "relations",
                                        "_importRelation"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "(Required) The Relation URI from the Data tenant which must be imported.",
                                                "type": "text/plain"
                                            },
                                            "key": "dataRelationUri",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) The ID of the source Data tenant from which the relation must be imported.",
                                            "type": "text/plain"
                                        },
                                        "key": "DataTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) The ID of the target Customer tenant to which the relation must be imported.",
                                            "type": "text/plain"
                                        },
                                        "key": "CustomerTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"severity\": \"Error\",\n    \"errorMessage\": \"Subscription does not exist.\",\n    \"errorCode\": 3020,\n    \"errorDetailMessage\": \"Subscription for DT staticData01 and CT staticCustomer01 does not exist.\",\n    \"innerErrorData\": {\n      \"exception\": \"com.reltio.dtss.rest.errors.SubscriptionNotFoundException:Subscription for DT staticData01 and CT staticCustomer01 does not exist.\",\n      \"stack\": [\n        \"com.reltio.dtss.rest.controller.AbstractDtssAPIController.getTenantSubscription at AbstractDtssAPIController.java, line 87\",\n        \"com.reltio.dtss.rest.controller.AbstractDtssAPIController.getTenantSubscription at AbstractDtssAPIController.java, line 98\",\n        \"com.reltio.dtss.rest.controller.AbstractDtssAPIController.getTenantSubscription at AbstractDtssAPIController.java, line 94\",\n        \"com.reltio.dtss.rest.controller.data.entity.RelationController.importRelationByUri at RelationController.java, line 54\",\n        \"com.reltio.dtss.rest.controller.data.entity.RelationController$$FastClassBySpringCGLIB$$6e85b3b5.invoke at <generated>, line -1\",\n        \"org.springframework.cglib.proxy.MethodProxy.invoke at MethodProxy.java, line 204\",\n        \"org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint at CglibAopProxy.java, line 717\",\n        \"org.springframework.aop.framework.ReflectiveMethodInvocation.proceed at ReflectiveMethodInvocation.java, line 157\",\n        \"org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke at MethodSecurityInterceptor.java, line 68\",\n        \"org.springframework.aop.framework.ReflectiveMethodInvocation.proceed at ReflectiveMethodInvocation.java, line 179\",\n        \"org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept at CglibAopProxy.java, line 653\",\n        \"com.reltio.dtss.rest.controller.data.entity.RelationController$$EnhancerBySpringCGLIB$$f284116a_2.importRelationByUri at <generated>, line -1\",\n        \"sun.reflect.NativeMethodAccessorImpl.invoke0 at NativeMethodAccessorImpl.java, line -2\",\n        \"sun.reflect.NativeMethodAccessorImpl.invoke at NativeMethodAccessorImpl.java, line 62\",\n        \"sun.reflect.DelegatingMethodAccessorImpl.invoke at DelegatingMethodAccessorImpl.java, line 43\",\n        \"java.lang.reflect.Method.invoke at Method.java, line 498\",\n        \"org.springframework.web.method.support.InvocableHandlerMethod.doInvoke at InvocableHandlerMethod.java, line 221\",\n        \"org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest at InvocableHandlerMethod.java, line 137\",\n        \"org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle at ServletInvocableHandlerMethod.java, line 110\",\n        \"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod at RequestMappingHandlerAdapter.java, line 806\",\n        \"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal at RequestMappingHandlerAdapter.java, line 729\",\n        \"org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle at AbstractHandlerMethodAdapter.java, line 85\",\n        \"org.springframework.web.servlet.DispatcherServlet.doDispatch at DispatcherServlet.java, line 959\",\n        \"org.springframework.web.servlet.DispatcherServlet.doService at DispatcherServlet.java, line 893\",\n        \"org.springframework.web.servlet.FrameworkServlet.processRequest at FrameworkServlet.java, line 970\",\n        \"org.springframework.web.servlet.FrameworkServlet.doPost at FrameworkServlet.java, line 872\",\n        \"javax.servlet.http.HttpServlet.service at HttpServlet.java, line 661\",\n        \"org.springframework.web.servlet.FrameworkServlet.service at FrameworkServlet.java, line 846\",\n        \"javax.servlet.http.HttpServlet.service at HttpServlet.java, line 742\",\n        \"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter at ApplicationFilterChain.java, line 231\",\n        \"org.apache.catalina.core.ApplicationFilterChain.doFilter at ApplicationFilterChain.java, line 166\",\n        \"org.apache.tomcat.websocket.server.WsFilter.doFilter at WsFilter.java, line 52\",\n        \"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter at ApplicationFilterChain.java, line 193\",\n        \"org.apache.catalina.core.ApplicationFilterChain.doFilter at ApplicationFilterChain.java, line 166\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 316\",\n        \"org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke at FilterSecurityInterceptor.java, line 126\",\n        \"org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter at FilterSecurityInterceptor.java, line 90\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.access.ExceptionTranslationFilter.doFilter at ExceptionTranslationFilter.java, line 114\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter at AnonymousAuthenticationFilter.java, line 111\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter at SecurityContextHolderAwareRequestFilter.java, line 169\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter at OAuth2AuthenticationProcessingFilter.java, line 176\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal at HeaderWriterFilter.java, line 64\",\n        \"org.springframework.web.filter.OncePerRequestFilter.doFilter at OncePerRequestFilter.java, line 107\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal at WebAsyncManagerIntegrationFilter.java, line 53\",\n        \"org.springframework.web.filter.OncePerRequestFilter.doFilter at OncePerRequestFilter.java, line 107\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter at SecurityContextPersistenceFilter.java, line 91\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.FilterChainProxy.doFilterInternal at FilterChainProxy.java, line 213\",\n        \"org.springframework.security.web.FilterChainProxy.doFilter at FilterChainProxy.java, line 176\",\n        \"org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate at DelegatingFilterProxy.java, line 346\",\n        \"org.springframework.web.filter.DelegatingFilterProxy.doFilter at DelegatingFilterProxy.java, line 262\",\n        \"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter at ApplicationFilterChain.java, line 193\",\n        \"org.apache.catalina.core.ApplicationFilterChain.doFilter at ApplicationFilterChain.java, line 166\",\n        \"com.reltio.dtss.servlet.AllowCrossDomainRequestsFilter.doFilter at AllowCrossDomainRequestsFilter.java, line 32\",\n        \"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter at ApplicationFilterChain.java, line 193\",\n        \"org.apache.catalina.core.ApplicationFilterChain.doFilter at ApplicationFilterChain.java, line 166\",\n        \"org.apache.catalina.core.StandardWrapperValve.invoke at StandardWrapperValve.java, line 198\",\n        \"org.apache.catalina.core.StandardContextValve.invoke at StandardContextValve.java, line 96\",\n        \"org.apache.catalina.authenticator.AuthenticatorBase.invoke at AuthenticatorBase.java, line 504\",\n        \"org.apache.catalina.core.StandardHostValve.invoke at StandardHostValve.java, line 140\",\n        \"org.apache.catalina.valves.ErrorReportValve.invoke at ErrorReportValve.java, line 81\",\n        \"org.apache.catalina.valves.AbstractAccessLogValve.invoke at AbstractAccessLogValve.java, line 650\",\n        \"org.apache.catalina.core.StandardEngineValve.invoke at StandardEngineValve.java, line 87\",\n        \"org.apache.catalina.connector.CoyoteAdapter.service at CoyoteAdapter.java, line 342\",\n        \"org.apache.coyote.http11.Http11Processor.service at Http11Processor.java, line 803\",\n        \"org.apache.coyote.AbstractProcessorLight.process at AbstractProcessorLight.java, line 66\",\n        \"org.apache.coyote.AbstractProtocol$ConnectionHandler.process at AbstractProtocol.java, line 790\",\n        \"org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun at NioEndpoint.java, line 1459\",\n        \"org.apache.tomcat.util.net.SocketProcessorBase.run at SocketProcessorBase.java, line 49\",\n        \"java.util.concurrent.ThreadPoolExecutor.runWorker at ThreadPoolExecutor.java, line 1149\",\n        \"java.util.concurrent.ThreadPoolExecutor$Worker.run at ThreadPoolExecutor.java, line 624\",\n        \"org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run at TaskThread.java, line 61\",\n        \"java.lang.Thread.run at Thread.java, line 748\"\n      ]\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b1380a6c-e201-42d1-ae4f-99341a0042d2",
                            "name": "Too Many Requests",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dtss",
                                        "relations",
                                        "_importRelation"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "(Required) The Relation URI from the Data tenant which must be imported.",
                                                "type": "text/plain"
                                            },
                                            "key": "dataRelationUri",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) The ID of the source Data tenant from which the relation must be imported.",
                                            "type": "text/plain"
                                        },
                                        "key": "DataTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) The ID of the target Customer tenant to which the relation must be imported.",
                                            "type": "text/plain"
                                        },
                                        "key": "CustomerTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Too Many Requests",
                            "code": 429,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"severity\": \"Error\",\n    \"errorMessage\": \"DataTenant relation can't be imported. Too many requests.\",\n    \"errorCode\": 429,\n    \"errorDetailMessage\": \"Max number of retries is exceeded for loadObjects.. com.reltio.dtss.service.api.http.APIClientCriticalException: Max number of retries is exceeded for loadObjects.\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c4d1331e-7372-483f-b5e4-51c4e9fbd873",
                            "name": "Service Unavailable",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dtss",
                                        "relations",
                                        "_importRelation"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "(Required) The Relation URI from the Data tenant which must be imported.",
                                                "type": "text/plain"
                                            },
                                            "key": "dataRelationUri",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) The ID of the source Data tenant from which the relation must be imported.",
                                            "type": "text/plain"
                                        },
                                        "key": "DataTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) The ID of the target Customer tenant to which the relation must be imported.",
                                            "type": "text/plain"
                                        },
                                        "key": "CustomerTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"severity\": \"Error\",\n    \"errorMessage\": \"DataTenant relation can't be imported. quota_exceeded.\",\n    \"errorCode\": 503,\n    \"errorDetailMessage\": \"Code: DATA_ENTITY_CANNOT_BE_IMPORTED_SERVICE_UNAVAILABLE; Message parameters: [Max number of retries is exceeded for loadObjects.. com.reltio.dtss.service.api.http.APIClientCriticalException: Max number of retries is exceeded for loadObjects.\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "e2bf90f4-a3e6-41a5-83f1-d248bb16e39e",
                    "name": "/services/dtss/relations/_importRelations",
                    "request": {
                        "name": "/services/dtss/relations/_importRelations",
                        "description": {
                            "content": "The endpoint takes a set of relationship URIs as input in the body.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dtss",
                                "relations",
                                "_importRelations"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required) The ID of the Source Data Tenant.",
                                    "type": "text/plain"
                                },
                                "key": "DataTenant",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required) The ID of the Target Customer Tenant where the relations must be imported.",
                                    "type": "text/plain"
                                },
                                "key": "CustomerTenant",
                                "value": "<string>"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "94d675d8-e3fd-4273-9686-be0b5f274771",
                            "name": "successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dtss",
                                        "relations",
                                        "_importRelations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) The ID of the Source Data Tenant.",
                                            "type": "text/plain"
                                        },
                                        "key": "DataTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) The ID of the Target Customer Tenant where the relations must be imported.",
                                            "type": "text/plain"
                                        },
                                        "key": "CustomerTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"importedEntities\": [\n    {\n      \"success\": \"<boolean>\",\n      \"uris\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"success\": \"<boolean>\",\n      \"uris\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ],\n  \"importedRelations\": [\n    {\n      \"success\": \"<boolean>\",\n      \"uris\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"success\": \"<boolean>\",\n      \"uris\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ],\n  \"entitiesApiClientResult\": {\n    \"successCounter\": {\n      \"value\": \"<integer>\"\n    },\n    \"errorsCounter\": {\n      \"value\": \"<integer>\"\n    },\n    \"time\": {\n      \"value\": \"<long>\"\n    },\n    \"externalError\": {\n      \"value\": \"<integer>\"\n    },\n    \"errorLog\": [\n      {\n        \"timestamp\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"errorCode\": \"<integer>\"\n      },\n      {\n        \"timestamp\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"errorCode\": \"<integer>\"\n      }\n    ],\n    \"succeededDtObjects\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"expiredContracts\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"objectsUploadResult\": {\n      \"success\": \"<boolean>\",\n      \"slicesByDtUri\": {\n        \"ade39\": {\n          \"success\": \"<boolean>\",\n          \"errors\": {\n            \"_nodeFactory\": {\n              \"_cfgBigDecimalExact\": \"<boolean>\"\n            }\n          },\n          \"perCrosswalk\": {\n            \"quis_9\": {\n              \"success\": \"<boolean>\",\n              \"targetObjectInfos\": [\n                {\n                  \"uri\": \"<string>\",\n                  \"type\": \"<string>\",\n                  \"createdTime\": \"<dateTime>\",\n                  \"updatedTime\": \"<dateTime>\",\n                  \"crosswalks\": [\n                    {\n                      \"type\": \"<string>\",\n                      \"value\": \"<string>\",\n                      \"sourceTable\": \"<string>\",\n                      \"createDate\": \"<dateTime>\",\n                      \"updateDate\": \"<dateTime>\"\n                    },\n                    {\n                      \"type\": \"<string>\",\n                      \"value\": \"<string>\",\n                      \"sourceTable\": \"<string>\",\n                      \"createDate\": \"<dateTime>\",\n                      \"updateDate\": \"<dateTime>\"\n                    }\n                  ]\n                },\n                {\n                  \"uri\": \"<string>\",\n                  \"type\": \"<string>\",\n                  \"createdTime\": \"<dateTime>\",\n                  \"updatedTime\": \"<dateTime>\",\n                  \"crosswalks\": [\n                    {\n                      \"type\": \"<string>\",\n                      \"value\": \"<string>\",\n                      \"sourceTable\": \"<string>\",\n                      \"createDate\": \"<dateTime>\",\n                      \"updateDate\": \"<dateTime>\"\n                    },\n                    {\n                      \"type\": \"<string>\",\n                      \"value\": \"<string>\",\n                      \"sourceTable\": \"<string>\",\n                      \"createDate\": \"<dateTime>\",\n                      \"updateDate\": \"<dateTime>\"\n                    }\n                  ]\n                }\n              ],\n              \"errors\": {\n                \"_nodeFactory\": {\n                  \"_cfgBigDecimalExact\": \"<boolean>\"\n                }\n              },\n              \"details\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          }\n        }\n      }\n    }\n  },\n  \"relationsApiClientResult\": {\n    \"successCounter\": {\n      \"value\": \"<integer>\"\n    },\n    \"errorsCounter\": {\n      \"value\": \"<integer>\"\n    },\n    \"time\": {\n      \"value\": \"<long>\"\n    },\n    \"externalError\": {\n      \"value\": \"<integer>\"\n    },\n    \"errorLog\": [\n      {\n        \"timestamp\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"errorCode\": \"<integer>\"\n      },\n      {\n        \"timestamp\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"errorCode\": \"<integer>\"\n      }\n    ],\n    \"succeededDtObjects\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"expiredContracts\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"objectsUploadResult\": {\n      \"success\": \"<boolean>\",\n      \"slicesByDtUri\": {\n        \"magna_2_0\": {\n          \"success\": \"<boolean>\",\n          \"errors\": {\n            \"_nodeFactory\": {\n              \"_cfgBigDecimalExact\": \"<boolean>\"\n            }\n          },\n          \"perCrosswalk\": {\n            \"nostrudcd0\": {\n              \"success\": \"<boolean>\",\n              \"targetObjectInfos\": [\n                {\n                  \"uri\": \"<string>\",\n                  \"type\": \"<string>\",\n                  \"createdTime\": \"<dateTime>\",\n                  \"updatedTime\": \"<dateTime>\",\n                  \"crosswalks\": [\n                    {\n                      \"type\": \"<string>\",\n                      \"value\": \"<string>\",\n                      \"sourceTable\": \"<string>\",\n                      \"createDate\": \"<dateTime>\",\n                      \"updateDate\": \"<dateTime>\"\n                    },\n                    {\n                      \"type\": \"<string>\",\n                      \"value\": \"<string>\",\n                      \"sourceTable\": \"<string>\",\n                      \"createDate\": \"<dateTime>\",\n                      \"updateDate\": \"<dateTime>\"\n                    }\n                  ]\n                },\n                {\n                  \"uri\": \"<string>\",\n                  \"type\": \"<string>\",\n                  \"createdTime\": \"<dateTime>\",\n                  \"updatedTime\": \"<dateTime>\",\n                  \"crosswalks\": [\n                    {\n                      \"type\": \"<string>\",\n                      \"value\": \"<string>\",\n                      \"sourceTable\": \"<string>\",\n                      \"createDate\": \"<dateTime>\",\n                      \"updateDate\": \"<dateTime>\"\n                    },\n                    {\n                      \"type\": \"<string>\",\n                      \"value\": \"<string>\",\n                      \"sourceTable\": \"<string>\",\n                      \"createDate\": \"<dateTime>\",\n                      \"updateDate\": \"<dateTime>\"\n                    }\n                  ]\n                }\n              ],\n              \"errors\": {\n                \"_nodeFactory\": {\n                  \"_cfgBigDecimalExact\": \"<boolean>\"\n                }\n              },\n              \"details\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            },\n            \"adipisicing_97\": {\n              \"success\": \"<boolean>\",\n              \"targetObjectInfos\": [\n                {\n                  \"uri\": \"<string>\",\n                  \"type\": \"<string>\",\n                  \"createdTime\": \"<dateTime>\",\n                  \"updatedTime\": \"<dateTime>\",\n                  \"crosswalks\": [\n                    {\n                      \"type\": \"<string>\",\n                      \"value\": \"<string>\",\n                      \"sourceTable\": \"<string>\",\n                      \"createDate\": \"<dateTime>\",\n                      \"updateDate\": \"<dateTime>\"\n                    },\n                    {\n                      \"type\": \"<string>\",\n                      \"value\": \"<string>\",\n                      \"sourceTable\": \"<string>\",\n                      \"createDate\": \"<dateTime>\",\n                      \"updateDate\": \"<dateTime>\"\n                    }\n                  ]\n                },\n                {\n                  \"uri\": \"<string>\",\n                  \"type\": \"<string>\",\n                  \"createdTime\": \"<dateTime>\",\n                  \"updatedTime\": \"<dateTime>\",\n                  \"crosswalks\": [\n                    {\n                      \"type\": \"<string>\",\n                      \"value\": \"<string>\",\n                      \"sourceTable\": \"<string>\",\n                      \"createDate\": \"<dateTime>\",\n                      \"updateDate\": \"<dateTime>\"\n                    },\n                    {\n                      \"type\": \"<string>\",\n                      \"value\": \"<string>\",\n                      \"sourceTable\": \"<string>\",\n                      \"createDate\": \"<dateTime>\",\n                      \"updateDate\": \"<dateTime>\"\n                    }\n                  ]\n                }\n              ],\n              \"errors\": {\n                \"_nodeFactory\": {\n                  \"_cfgBigDecimalExact\": \"<boolean>\"\n                }\n              },\n              \"details\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            },\n            \"ullamco_f_\": {\n              \"success\": \"<boolean>\",\n              \"targetObjectInfos\": [\n                {\n                  \"uri\": \"<string>\",\n                  \"type\": \"<string>\",\n                  \"createdTime\": \"<dateTime>\",\n                  \"updatedTime\": \"<dateTime>\",\n                  \"crosswalks\": [\n                    {\n                      \"type\": \"<string>\",\n                      \"value\": \"<string>\",\n                      \"sourceTable\": \"<string>\",\n                      \"createDate\": \"<dateTime>\",\n                      \"updateDate\": \"<dateTime>\"\n                    },\n                    {\n                      \"type\": \"<string>\",\n                      \"value\": \"<string>\",\n                      \"sourceTable\": \"<string>\",\n                      \"createDate\": \"<dateTime>\",\n                      \"updateDate\": \"<dateTime>\"\n                    }\n                  ]\n                },\n                {\n                  \"uri\": \"<string>\",\n                  \"type\": \"<string>\",\n                  \"createdTime\": \"<dateTime>\",\n                  \"updatedTime\": \"<dateTime>\",\n                  \"crosswalks\": [\n                    {\n                      \"type\": \"<string>\",\n                      \"value\": \"<string>\",\n                      \"sourceTable\": \"<string>\",\n                      \"createDate\": \"<dateTime>\",\n                      \"updateDate\": \"<dateTime>\"\n                    },\n                    {\n                      \"type\": \"<string>\",\n                      \"value\": \"<string>\",\n                      \"sourceTable\": \"<string>\",\n                      \"createDate\": \"<dateTime>\",\n                      \"updateDate\": \"<dateTime>\"\n                    }\n                  ]\n                }\n              ],\n              \"errors\": {\n                \"_nodeFactory\": {\n                  \"_cfgBigDecimalExact\": \"<boolean>\"\n                }\n              },\n              \"details\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          }\n        }\n      }\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "96c5e7a2-47a1-41ee-b517-f7440860aa41",
                            "name": "Forbidden",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dtss",
                                        "relations",
                                        "_importRelations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) The ID of the Source Data Tenant.",
                                            "type": "text/plain"
                                        },
                                        "key": "DataTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) The ID of the Target Customer Tenant where the relations must be imported.",
                                            "type": "text/plain"
                                        },
                                        "key": "CustomerTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"severity\": \"Error\",\n    \"errorMessage\": \"DataTenant entity can't be imported.\",\n    \"errorCode\": 403,\n    \"errorDetailMessage\": \"DataTenant entity can't be imported. The operation is forbidden for the current user, please check your privileges\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6c205c27-57a6-4bd8-83f1-a28a34e47f5c",
                            "name": "Not Found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dtss",
                                        "relations",
                                        "_importRelations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) The ID of the Source Data Tenant.",
                                            "type": "text/plain"
                                        },
                                        "key": "DataTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) The ID of the Target Customer Tenant where the relations must be imported.",
                                            "type": "text/plain"
                                        },
                                        "key": "CustomerTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"severity\": \"Error\",\n    \"errorMessage\": \"Subscription does not exist.\",\n    \"errorCode\": 3020,\n    \"errorDetailMessage\": \"Subscription for DT staticData01 and CT staticCustomer01 does not exist.\",\n    \"innerErrorData\": {\n      \"exception\": \"com.reltio.dtss.rest.errors.SubscriptionNotFoundException:Subscription for DT staticData01 and CT staticCustomer01 does not exist.\",\n      \"stack\": [\n        \"com.reltio.dtss.rest.controller.AbstractDtssAPIController.getTenantSubscription at AbstractDtssAPIController.java, line 87\",\n        \"com.reltio.dtss.rest.controller.AbstractDtssAPIController.getTenantSubscription at AbstractDtssAPIController.java, line 98\",\n        \"com.reltio.dtss.rest.controller.AbstractDtssAPIController.getTenantSubscription at AbstractDtssAPIController.java, line 94\",\n        \"com.reltio.dtss.rest.controller.data.entity.RelationController.importRelationByUri at RelationController.java, line 54\",\n        \"com.reltio.dtss.rest.controller.data.entity.RelationController$$FastClassBySpringCGLIB$$6e85b3b5.invoke at <generated>, line -1\",\n        \"org.springframework.cglib.proxy.MethodProxy.invoke at MethodProxy.java, line 204\",\n        \"org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint at CglibAopProxy.java, line 717\",\n        \"org.springframework.aop.framework.ReflectiveMethodInvocation.proceed at ReflectiveMethodInvocation.java, line 157\",\n        \"org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke at MethodSecurityInterceptor.java, line 68\",\n        \"org.springframework.aop.framework.ReflectiveMethodInvocation.proceed at ReflectiveMethodInvocation.java, line 179\",\n        \"org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept at CglibAopProxy.java, line 653\",\n        \"com.reltio.dtss.rest.controller.data.entity.RelationController$$EnhancerBySpringCGLIB$$f284116a_2.importRelationByUri at <generated>, line -1\",\n        \"sun.reflect.NativeMethodAccessorImpl.invoke0 at NativeMethodAccessorImpl.java, line -2\",\n        \"sun.reflect.NativeMethodAccessorImpl.invoke at NativeMethodAccessorImpl.java, line 62\",\n        \"sun.reflect.DelegatingMethodAccessorImpl.invoke at DelegatingMethodAccessorImpl.java, line 43\",\n        \"java.lang.reflect.Method.invoke at Method.java, line 498\",\n        \"org.springframework.web.method.support.InvocableHandlerMethod.doInvoke at InvocableHandlerMethod.java, line 221\",\n        \"org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest at InvocableHandlerMethod.java, line 137\",\n        \"org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle at ServletInvocableHandlerMethod.java, line 110\",\n        \"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod at RequestMappingHandlerAdapter.java, line 806\",\n        \"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal at RequestMappingHandlerAdapter.java, line 729\",\n        \"org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle at AbstractHandlerMethodAdapter.java, line 85\",\n        \"org.springframework.web.servlet.DispatcherServlet.doDispatch at DispatcherServlet.java, line 959\",\n        \"org.springframework.web.servlet.DispatcherServlet.doService at DispatcherServlet.java, line 893\",\n        \"org.springframework.web.servlet.FrameworkServlet.processRequest at FrameworkServlet.java, line 970\",\n        \"org.springframework.web.servlet.FrameworkServlet.doPost at FrameworkServlet.java, line 872\",\n        \"javax.servlet.http.HttpServlet.service at HttpServlet.java, line 661\",\n        \"org.springframework.web.servlet.FrameworkServlet.service at FrameworkServlet.java, line 846\",\n        \"javax.servlet.http.HttpServlet.service at HttpServlet.java, line 742\",\n        \"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter at ApplicationFilterChain.java, line 231\",\n        \"org.apache.catalina.core.ApplicationFilterChain.doFilter at ApplicationFilterChain.java, line 166\",\n        \"org.apache.tomcat.websocket.server.WsFilter.doFilter at WsFilter.java, line 52\",\n        \"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter at ApplicationFilterChain.java, line 193\",\n        \"org.apache.catalina.core.ApplicationFilterChain.doFilter at ApplicationFilterChain.java, line 166\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 316\",\n        \"org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke at FilterSecurityInterceptor.java, line 126\",\n        \"org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter at FilterSecurityInterceptor.java, line 90\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.access.ExceptionTranslationFilter.doFilter at ExceptionTranslationFilter.java, line 114\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter at AnonymousAuthenticationFilter.java, line 111\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter at SecurityContextHolderAwareRequestFilter.java, line 169\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter at OAuth2AuthenticationProcessingFilter.java, line 176\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal at HeaderWriterFilter.java, line 64\",\n        \"org.springframework.web.filter.OncePerRequestFilter.doFilter at OncePerRequestFilter.java, line 107\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal at WebAsyncManagerIntegrationFilter.java, line 53\",\n        \"org.springframework.web.filter.OncePerRequestFilter.doFilter at OncePerRequestFilter.java, line 107\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter at SecurityContextPersistenceFilter.java, line 91\",\n        \"org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter at FilterChainProxy.java, line 330\",\n        \"org.springframework.security.web.FilterChainProxy.doFilterInternal at FilterChainProxy.java, line 213\",\n        \"org.springframework.security.web.FilterChainProxy.doFilter at FilterChainProxy.java, line 176\",\n        \"org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate at DelegatingFilterProxy.java, line 346\",\n        \"org.springframework.web.filter.DelegatingFilterProxy.doFilter at DelegatingFilterProxy.java, line 262\",\n        \"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter at ApplicationFilterChain.java, line 193\",\n        \"org.apache.catalina.core.ApplicationFilterChain.doFilter at ApplicationFilterChain.java, line 166\",\n        \"com.reltio.dtss.servlet.AllowCrossDomainRequestsFilter.doFilter at AllowCrossDomainRequestsFilter.java, line 32\",\n        \"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter at ApplicationFilterChain.java, line 193\",\n        \"org.apache.catalina.core.ApplicationFilterChain.doFilter at ApplicationFilterChain.java, line 166\",\n        \"org.apache.catalina.core.StandardWrapperValve.invoke at StandardWrapperValve.java, line 198\",\n        \"org.apache.catalina.core.StandardContextValve.invoke at StandardContextValve.java, line 96\",\n        \"org.apache.catalina.authenticator.AuthenticatorBase.invoke at AuthenticatorBase.java, line 504\",\n        \"org.apache.catalina.core.StandardHostValve.invoke at StandardHostValve.java, line 140\",\n        \"org.apache.catalina.valves.ErrorReportValve.invoke at ErrorReportValve.java, line 81\",\n        \"org.apache.catalina.valves.AbstractAccessLogValve.invoke at AbstractAccessLogValve.java, line 650\",\n        \"org.apache.catalina.core.StandardEngineValve.invoke at StandardEngineValve.java, line 87\",\n        \"org.apache.catalina.connector.CoyoteAdapter.service at CoyoteAdapter.java, line 342\",\n        \"org.apache.coyote.http11.Http11Processor.service at Http11Processor.java, line 803\",\n        \"org.apache.coyote.AbstractProcessorLight.process at AbstractProcessorLight.java, line 66\",\n        \"org.apache.coyote.AbstractProtocol$ConnectionHandler.process at AbstractProtocol.java, line 790\",\n        \"org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun at NioEndpoint.java, line 1459\",\n        \"org.apache.tomcat.util.net.SocketProcessorBase.run at SocketProcessorBase.java, line 49\",\n        \"java.util.concurrent.ThreadPoolExecutor.runWorker at ThreadPoolExecutor.java, line 1149\",\n        \"java.util.concurrent.ThreadPoolExecutor$Worker.run at ThreadPoolExecutor.java, line 624\",\n        \"org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run at TaskThread.java, line 61\",\n        \"java.lang.Thread.run at Thread.java, line 748\"\n      ]\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "43315e8a-591a-4276-bb32-88af46ffecfa",
                            "name": "Too Many Requests",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dtss",
                                        "relations",
                                        "_importRelations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) The ID of the Source Data Tenant.",
                                            "type": "text/plain"
                                        },
                                        "key": "DataTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) The ID of the Target Customer Tenant where the relations must be imported.",
                                            "type": "text/plain"
                                        },
                                        "key": "CustomerTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Too Many Requests",
                            "code": 429,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"severity\": \"Error\",\n    \"errorMessage\": \"DataTenant relation can't be imported. Too many requests.\",\n    \"errorCode\": 429,\n    \"errorDetailMessage\": \"Max number of retries is exceeded for loadObjects.. com.reltio.dtss.service.api.http.APIClientCriticalException: Max number of retries is exceeded for loadObjects.\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0fe87042-1b73-466c-80c8-0f60b17e77d0",
                            "name": "Service Unavailable",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dtss",
                                        "relations",
                                        "_importRelations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) The ID of the Source Data Tenant.",
                                            "type": "text/plain"
                                        },
                                        "key": "DataTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) The ID of the Target Customer Tenant where the relations must be imported.",
                                            "type": "text/plain"
                                        },
                                        "key": "CustomerTenant",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"severity\": \"Error\",\n    \"errorMessage\": \"DataTenant relation can't be imported. quota_exceeded.\",\n    \"errorCode\": 503,\n    \"errorDetailMessage\": \"Code: DATA_ENTITY_CANNOT_BE_IMPORTED_SERVICE_UNAVAILABLE; Message parameters: [Max number of retries is exceeded for loadObjects.. com.reltio.dtss.service.api.http.APIClientCriticalException: Max number of retries is exceeded for loadObjects.\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ]
        },
        {
            "name": "D&B",
            "description": "",
            "item": [
                {
                    "id": "c534f38a-879a-403c-a53d-d23588fc0338",
                    "name": "/services/dnb/getDetailedProfile",
                    "request": {
                        "name": "/services/dnb/getDetailedProfile",
                        "description": {
                            "content": "Get Detailed Profile API is called when using the Get Company Details button on the UI. It is a real time API used to enrich the account data with most recent and updated information from D&B. It takes the DUNS number as the input and fetches the complete account profile from D&B.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dnb",
                                "getDetailedProfile"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Entity URI's in the <b>entities/XXXX</b> format.",
                                        "type": "text/plain"
                                    },
                                    "key": "entityURI",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "This can be set to <b>true</b> or <b>false</b>. If set to <b>true</b>, then the <b>Direct+ based Get Org Match</b> call or <b>Direct+ based Get Detailed Profile</b> is started. <b>Note:</b> You must have a token or an account with the privileges for Direct+ API usage. Otherwise, an authentication error is raised.",
                                        "type": "text/plain"
                                    },
                                    "key": "plus",
                                    "value": "false"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "This can be set to <b>cmpelf</b> or <b>cmpelk</b>. The default value is <b>cmpelf</b>. <b>Note:</b> Your account must have access to required product. If you set an arbitrary value for this parameter, the following DnB error appears: <b>Supplied product or version of the product does not exist.</b>",
                                        "type": "text/plain"
                                    },
                                    "key": "product",
                                    "value": "cmpelf"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required) Test to checkThe environment details of the tenant for which the  organization match is required.",
                                    "type": "text/plain"
                                },
                                "key": "environmentUrl",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required) ID of the tenant for which the organization match is required.",
                                    "type": "text/plain"
                                },
                                "key": "tenantId",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "The Reltio login username that must be used. You must specify this if the access token is not specified for authorization.",
                                    "type": "text/plain"
                                },
                                "key": "Reltio-User",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "The Reltio login password that must be used. You must specify this if the access token is not specified for authorization.",
                                    "type": "text/plain"
                                },
                                "key": "Reltio-Password",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "The D&B token in the <b>Bearer: <token></b> format. This parameter is required if you do not specify <b>DnB-User</b> and <b>DnB-Password</b>.",
                                    "type": "text/plain"
                                },
                                "key": "DnB-Token",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "The D&B account <b>username</b> or Consumer Key in <b>Direct+</b>. You must specify this if the access token is not specified for authorization.",
                                    "type": "text/plain"
                                },
                                "key": "DnB-User",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "The D&B account <b>password</b> or Consumer Secret in <b>Direct+</b>. You must specify this if the access token is not specified for authorization.",
                                    "type": "text/plain"
                                },
                                "key": "DnB-Password",
                                "value": "<string>"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "084784e2-65b9-4054-895c-bd1b95bfc067",
                            "name": "successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dnb",
                                        "getDetailedProfile"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "(Required) Entity URI's in the <b>entities/XXXX</b> format.",
                                                "type": "text/plain"
                                            },
                                            "key": "entityURI",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This can be set to <b>true</b> or <b>false</b>. If set to <b>true</b>, then the <b>Direct+ based Get Org Match</b> call or <b>Direct+ based Get Detailed Profile</b> is started. <b>Note:</b> You must have a token or an account with the privileges for Direct+ API usage. Otherwise, an authentication error is raised.",
                                                "type": "text/plain"
                                            },
                                            "key": "plus",
                                            "value": "false"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This can be set to <b>cmpelf</b> or <b>cmpelk</b>. The default value is <b>cmpelf</b>. <b>Note:</b> Your account must have access to required product. If you set an arbitrary value for this parameter, the following DnB error appears: <b>Supplied product or version of the product does not exist.</b>",
                                                "type": "text/plain"
                                            },
                                            "key": "product",
                                            "value": "cmpelf"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) Test to checkThe environment details of the tenant for which the  organization match is required.",
                                            "type": "text/plain"
                                        },
                                        "key": "environmentUrl",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) ID of the tenant for which the organization match is required.",
                                            "type": "text/plain"
                                        },
                                        "key": "tenantId",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "The Reltio login username that must be used. You must specify this if the access token is not specified for authorization.",
                                            "type": "text/plain"
                                        },
                                        "key": "Reltio-User",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "The Reltio login password that must be used. You must specify this if the access token is not specified for authorization.",
                                            "type": "text/plain"
                                        },
                                        "key": "Reltio-Password",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "The D&B token in the <b>Bearer: <token></b> format. This parameter is required if you do not specify <b>DnB-User</b> and <b>DnB-Password</b>.",
                                            "type": "text/plain"
                                        },
                                        "key": "DnB-Token",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "The D&B account <b>username</b> or Consumer Key in <b>Direct+</b>. You must specify this if the access token is not specified for authorization.",
                                            "type": "text/plain"
                                        },
                                        "key": "DnB-User",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "The D&B account <b>password</b> or Consumer Secret in <b>Direct+</b>. You must specify this if the access token is not specified for authorization.",
                                            "type": "text/plain"
                                        },
                                        "key": "DnB-Password",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"success\": \"<string>\",\n  \"message\": \"<string>\",\n  \"entities\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "03e80614-64c4-406b-bb1d-ff6516ed06bf",
                    "name": "/services/dnb/getFamilyTree",
                    "request": {
                        "name": "/services/dnb/getFamilyTree",
                        "description": {
                            "content": "The Get Upward Account Hierarchy API allows you to request for all parent organizations (all organizations from the current organization to its global ultimate) for a current organization. The API takes the DUNS number of the organization for which all the parent organizations are requested",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dnb",
                                "getFamilyTree"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Entity URI's in the <b>entities/XXXX</b> format",
                                        "type": "text/plain"
                                    },
                                    "key": "entityURI",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "This can be set to <b>true</b> or <b>false</b>. If set to <b>true</b>, then the <b>Direct+ based Get Org Match</b> call or <b>Direct+ based Get Detailed Profile</b> is started.<b>Note:</b> You must have a token or an account with the privileges for Direct+ API usage. Otherwise, an authentication error is raised.",
                                        "type": "text/plain"
                                    },
                                    "key": "plus",
                                    "value": "<boolean>"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "disabled": false,
                                "description": {
                                    "content": "The environment details of the tenant for which the  organization match is required.",
                                    "type": "text/plain"
                                },
                                "key": "environmentUrl",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "ID of the tenant for which the organization match is required. ",
                                    "type": "text/plain"
                                },
                                "key": "tenantId",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "The Reltio login username that must be used. You must specify this if the access token is not specified for authorization.",
                                    "type": "text/plain"
                                },
                                "key": "Reltio-User",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "The Reltio login password that must be used. You must specify this if the access token is not specified for authorization.",
                                    "type": "text/plain"
                                },
                                "key": "Reltio-Password",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "The D&B token in the <b>Bearer: <token></b> format. This parameter is required if you do not specify <b>DnB-User</b> and <b>DnB-Password</b>.",
                                    "type": "text/plain"
                                },
                                "key": "DnB-Token",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "The D&B account <b>username</b> or Consumer Key in <b>Direct+</b>. You must specify this if the access token is not specified for authorization.",
                                    "type": "text/plain"
                                },
                                "key": "DnB-User",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "The D&B account <b>password</b> or Consumer Secret in <b>Direct+</b>. You must specify this if the access token is not specified for authorization.",
                                    "type": "text/plain"
                                },
                                "key": "DnB-Password",
                                "value": "<string>"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "ea6d7d01-d2fe-448d-9816-3accedd485b3",
                            "name": "successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dnb",
                                        "getFamilyTree"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "(Required) Entity URI's in the <b>entities/XXXX</b> format",
                                                "type": "text/plain"
                                            },
                                            "key": "entityURI",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This can be set to <b>true</b> or <b>false</b>. If set to <b>true</b>, then the <b>Direct+ based Get Org Match</b> call or <b>Direct+ based Get Detailed Profile</b> is started.<b>Note:</b> You must have a token or an account with the privileges for Direct+ API usage. Otherwise, an authentication error is raised.",
                                                "type": "text/plain"
                                            },
                                            "key": "plus",
                                            "value": "<boolean>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "The environment details of the tenant for which the  organization match is required.",
                                            "type": "text/plain"
                                        },
                                        "key": "environmentUrl",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "ID of the tenant for which the organization match is required. ",
                                            "type": "text/plain"
                                        },
                                        "key": "tenantId",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "The Reltio login username that must be used. You must specify this if the access token is not specified for authorization.",
                                            "type": "text/plain"
                                        },
                                        "key": "Reltio-User",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "The Reltio login password that must be used. You must specify this if the access token is not specified for authorization.",
                                            "type": "text/plain"
                                        },
                                        "key": "Reltio-Password",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "The D&B token in the <b>Bearer: <token></b> format. This parameter is required if you do not specify <b>DnB-User</b> and <b>DnB-Password</b>.",
                                            "type": "text/plain"
                                        },
                                        "key": "DnB-Token",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "The D&B account <b>username</b> or Consumer Key in <b>Direct+</b>. You must specify this if the access token is not specified for authorization.",
                                            "type": "text/plain"
                                        },
                                        "key": "DnB-User",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "The D&B account <b>password</b> or Consumer Secret in <b>Direct+</b>. You must specify this if the access token is not specified for authorization.",
                                            "type": "text/plain"
                                        },
                                        "key": "DnB-Password",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"success\": \"<string>\",\n  \"message\": \"<string>\",\n  \"entities\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "1326ce21-e44b-4894-868f-035330b574ed",
                    "name": "/services/dnb/getOrgMatch",
                    "request": {
                        "name": "/services/dnb/getOrgMatch",
                        "description": {
                            "content": "The Get Match API is called using the Get Match button on the UI. It is a real time API, that uses the account data like name and address and returns the D&B DUNS number.<br>The D&B DUNS number is updated in the Reltio account profile. If more than one DUNS numbers are found, multiple account profiles with matching criteria are returned and updated in the associated data tenant. If no match is found, the API returns an error with an appropriate message.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dnb",
                                "getOrgMatch"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Entity URIs in the <b>entities/XXXX</b> format.",
                                        "type": "text/plain"
                                    },
                                    "key": "entityURI",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "This parameter can be set to <b>true</b> or <b>false</b>. If set to <b>true</b>, Direct+ based Get Org Match call or Direct+ based Get Detailed Profile is started. <b>Note:</b> You must have a token or an account with the privileges for Direct+ API usage. Otherwise, an authentication error is raised.",
                                        "type": "text/plain"
                                    },
                                    "key": "plus",
                                    "value": "false"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required) The URL of the environment.",
                                    "type": "text/plain"
                                },
                                "key": "environmentUrl",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required) The ID of the tenant for which the organization match is required.",
                                    "type": "text/plain"
                                },
                                "key": "tenantId",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "The Reltio login username that must be used. You must specify this if the access token is not specified for authorization.",
                                    "type": "text/plain"
                                },
                                "key": "Reltio-User",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "The Reltio login password that must be used. You must specify this if the access token is not specified for authorization.",
                                    "type": "text/plain"
                                },
                                "key": "Reltio-Password",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "The D&B token in the <b>Bearer: <<token>></b> format. This parameter is required if you do not specify <b>D&B-User</b> and <b>D&B-Password</b>.",
                                    "type": "text/plain"
                                },
                                "key": "DnB-Token",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "The D&B account username or Consumer Key in Direct+. You must specify this if the access token is not specified for authorization.",
                                    "type": "text/plain"
                                },
                                "key": "DnB-User",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "The D&B account password or Consumer Secret in Direct+. You must specify this if the access token is not specified for authorization.",
                                    "type": "text/plain"
                                },
                                "key": "DnB-Password",
                                "value": "<string>"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "3af3a5fc-c422-4e7e-852f-d3c3d0d75972",
                            "name": "successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dnb",
                                        "getOrgMatch"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "(Required) Entity URIs in the <b>entities/XXXX</b> format.",
                                                "type": "text/plain"
                                            },
                                            "key": "entityURI",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter can be set to <b>true</b> or <b>false</b>. If set to <b>true</b>, Direct+ based Get Org Match call or Direct+ based Get Detailed Profile is started. <b>Note:</b> You must have a token or an account with the privileges for Direct+ API usage. Otherwise, an authentication error is raised.",
                                                "type": "text/plain"
                                            },
                                            "key": "plus",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) The URL of the environment.",
                                            "type": "text/plain"
                                        },
                                        "key": "environmentUrl",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) The ID of the tenant for which the organization match is required.",
                                            "type": "text/plain"
                                        },
                                        "key": "tenantId",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "The Reltio login username that must be used. You must specify this if the access token is not specified for authorization.",
                                            "type": "text/plain"
                                        },
                                        "key": "Reltio-User",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "The Reltio login password that must be used. You must specify this if the access token is not specified for authorization.",
                                            "type": "text/plain"
                                        },
                                        "key": "Reltio-Password",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "The D&B token in the <b>Bearer: <<token>></b> format. This parameter is required if you do not specify <b>D&B-User</b> and <b>D&B-Password</b>.",
                                            "type": "text/plain"
                                        },
                                        "key": "DnB-Token",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "The D&B account username or Consumer Key in Direct+. You must specify this if the access token is not specified for authorization.",
                                            "type": "text/plain"
                                        },
                                        "key": "DnB-User",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "The D&B account password or Consumer Secret in Direct+. You must specify this if the access token is not specified for authorization.",
                                            "type": "text/plain"
                                        },
                                        "key": "DnB-Password",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"success\": \"<string>\",\n  \"message\": \"<string>\",\n  \"entities\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "8ee85caf-7856-4920-888d-1c01838eaa61",
                    "name": "//config/mappings/:mappingName",
                    "request": {
                        "name": "//config/mappings/:mappingName",
                        "description": {
                            "content": "D&B Connector Get mapping API enables you to fetch the mappings for various operations like batch, enrichment etc. performed through D&B Connector.<br>You can pass the following mappingName as part of the API parameter: <br>batch, enrichment, filter, match, corporate_linkage",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "",
                                "config",
                                "mappings",
                                ":mappingName"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "plus",
                                    "value": "true"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "mappingName",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required)  The name of the mapping",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required)  The URL of the environment.",
                                    "type": "text/plain"
                                },
                                "key": "environmentUrl",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required)  The ID of the tenant.",
                                    "type": "text/plain"
                                },
                                "key": "tenantId",
                                "value": "<string>"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "5ef0b057-8aa8-40cf-a206-c9b176b82928",
                            "name": "successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "",
                                        "config",
                                        "mappings",
                                        ":mappingName"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "",
                                                "type": "text/plain"
                                            },
                                            "key": "plus",
                                            "value": "true"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required)  The URL of the environment.",
                                            "type": "text/plain"
                                        },
                                        "key": "environmentUrl",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required)  The ID of the tenant.",
                                            "type": "text/plain"
                                        },
                                        "key": "tenantId",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "e861f62b-a2d0-4a7e-aa8f-f3ccd1fe112c",
                    "name": "//config/profiles/:profileName/mappings/:mappingName",
                    "request": {
                        "name": "//config/profiles/:profileName/mappings/:mappingName",
                        "description": {
                            "content": "D&B Connector Get mapping API enables you to fetch the mappings for various operations like batch, enrichment etc. performed through D&B Connector. The profileName is the D&B Connector profile specific for your tenant. You can obtain the profile name using the Get /services/config/tenants API.<br>You can pass the following mappingName as part of the API parameter:<br>batch, enrichment, filter, match, corporate_linkage",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "",
                                "config",
                                "profiles",
                                ":profileName",
                                "mappings",
                                ":mappingName"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "This parameter can be set to <b>true</b> or <b>false</b>.",
                                        "type": "text/plain"
                                    },
                                    "key": "plus",
                                    "value": "true"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "profileName",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Profile name",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "mappingName",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Mapping name",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "0cc3a2c8-b86b-45db-9ae0-57f1e12568e4",
                            "name": "successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "",
                                        "config",
                                        "profiles",
                                        ":profileName",
                                        "mappings",
                                        ":mappingName"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter can be set to <b>true</b> or <b>false</b>.",
                                                "type": "text/plain"
                                            },
                                            "key": "plus",
                                            "value": "true"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "3999a430-74dd-4980-9cf5-2236623a4186",
                    "name": "//config/profiles/:profileName/mappings/:mappingName",
                    "request": {
                        "name": "//config/profiles/:profileName/mappings/:mappingName",
                        "description": {
                            "content": "Enables you to update the mappings for various operations like batch, enrichment etc. performed through D&B Connector. The profileName is the D&B Connector profile specific for your tenant. You can obtain the profile name using the Get /services/config/tenants API.<br>You can pass the following mappingName as part of the API parameter: batch, enrichment, filter, match, corporate_linkage",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "",
                                "config",
                                "profiles",
                                ":profileName",
                                "mappings",
                                ":mappingName"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "This parameter can be set to <b>true</b> or <b>false</b>.",
                                        "type": "text/plain"
                                    },
                                    "key": "plus",
                                    "value": "true"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "profileName",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Profile name",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "mappingName",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Mapping name",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"repositoryConfigService\": {},\n  \"verificationService\": {}\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "af761373-b246-4284-8138-6f32ada6cb10",
                            "name": "successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "",
                                        "config",
                                        "profiles",
                                        ":profileName",
                                        "mappings",
                                        ":mappingName"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter can be set to <b>true</b> or <b>false</b>.",
                                                "type": "text/plain"
                                            },
                                            "key": "plus",
                                            "value": "true"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"repositoryConfigService\": {},\n  \"verificationService\": {}\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "b9c08ac6-6b13-4d29-9e00-c7298f3a6e21",
                    "name": "//config/tenants",
                    "request": {
                        "name": "//config/tenants",
                        "description": {
                            "content": "You can object the D&B Connector profile name configured for your tenant. You use this profile to obtain, and update the mappings for your D&B connector setup",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "",
                                "config",
                                "tenants"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required)  The URL of the environment.",
                                    "type": "text/plain"
                                },
                                "key": "environmentUrl",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required)  The ID of the tenant.",
                                    "type": "text/plain"
                                },
                                "key": "tenantId",
                                "value": "<string>"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "de65c2ee-c347-4456-a05d-dfa7ba734884",
                            "name": "successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "",
                                        "config",
                                        "tenants"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required)  The URL of the environment.",
                                            "type": "text/plain"
                                        },
                                        "key": "environmentUrl",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required)  The ID of the tenant.",
                                            "type": "text/plain"
                                        },
                                        "key": "tenantId",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"success\": \"<string>\",\n  \"tenant\": {\n    \"environmentUrl\": \"<string>\",\n    \"tenantId\": \"<string>\"\n  },\n  \"dataTenant\": {\n    \"environmentUrl\": \"<string>\",\n    \"tenantId\": \"<string>\"\n  },\n  \"profile\": \"<string>\",\n  \"message\": \"<string>\",\n  \"profileConfiguration\": {\n    \"dnb\": {\n      \"username\": \"<string>\",\n      \"password\": \"<string>\",\n      \"registrationId\": \"<string>\"\n    },\n    \"statusXwalkProvider\": \"<string>\",\n    \"verificationStatusSource\": \"<string>\",\n    \"skipRelationsCreation\": \"<boolean>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "4142fab2-11d5-4861-b48a-233fe5751866",
                    "name": "//dnb/batch",
                    "request": {
                        "name": "//dnb/batch",
                        "description": {},
                        "url": {
                            "path": [
                                "",
                                "dnb",
                                "batch"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "force",
                                    "value": "false"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": " This parameter can be set to <b>true</b> or <b>false</b>. If set to <b>true</b>, Direct+ based Get Org Match call or Direct+ based Get Detailed Profile is started. Note: You must have a token or an account with the privileges for Direct+ API usage. Otherwise, an authentication error is raised.",
                                        "type": "text/plain"
                                    },
                                    "key": "plus",
                                    "value": "false"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "disabled": false,
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "mergeOrgsWithSameDUNS",
                                "value": "false"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "s3Region",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required)   The URL of the environment.",
                                    "type": "text/plain"
                                },
                                "key": "environmentUrl",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required)  The ID of the tenant for which the organization match is required.",
                                    "type": "text/plain"
                                },
                                "key": "tenantId",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": " ftp.dnb.com",
                                    "type": "text/plain"
                                },
                                "key": "DnB-Ftp",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": " /puts",
                                    "type": "text/plain"
                                },
                                "key": "DnB-Path-Put",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": " /gets",
                                    "type": "text/plain"
                                },
                                "key": "DnB-Path-Get",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": " {{SafeTransport Username}}",
                                    "type": "text/plain"
                                },
                                "key": "DnB-User",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": " Direct+ multiprocess secret key or DnB FTP site password {{SafeTransport Password}}",
                                    "type": "text/plain"
                                },
                                "key": "DnB-Password",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "Max seconds to wait response files appear on FTP site",
                                    "type": "text/plain"
                                },
                                "key": "waitResponseSeconds",
                                "value": "<long-int64>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "DnB returns confidence code for each processed entity in range 1 .. 10. 10 means absolutely confidence.All entities have confidence code less than minConfidenceCode parameter will be marked with error Low Confidence Score. Default value is 7.",
                                    "type": "text/plain"
                                },
                                "key": "minConfidenceCode",
                                "value": "<long-int64>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "Direct+ product name. Default value is cmpelf",
                                    "type": "text/plain"
                                },
                                "key": "productId",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "Direct+ product version. Default value is v1",
                                    "type": "text/plain"
                                },
                                "key": "productVersion",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": " S3 bucket to store request and responses raw data files. Note: optional parameter",
                                    "type": "text/plain"
                                },
                                "key": "s3Bucket",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": " S3 path on specified S3 bucket. Note: optional parameter",
                                    "type": "text/plain"
                                },
                                "key": "s3Path",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": " AWS access key <b>Value: {{AccessKey}}.</b>. Note: optional parameter",
                                    "type": "text/plain"
                                },
                                "key": "awsAccessKey",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": " AWS secret key <b>Value: {{SecretKey}}.</b>. Note: optional parameter",
                                    "type": "text/plain"
                                },
                                "key": "awsSecretKey",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "DnB connector provides ability of scheduling batch jobs using standard cron expressions. Note: expression expecting in the UTC time zone. Please convert your local time to UTC before start job",
                                    "type": "text/plain"
                                },
                                "key": "cronExpression",
                                "value": "<string>"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"exportTask\": {\n    \"filter\": \"<string>\",\n    \"distributed\": \"<boolean>\",\n    \"taskPartsCount\": \"<integer>\",\n    \"finishedTime\": \"<long>\"\n  },\n  \"putFilesTask\": {\n    \"compressionType\": \"<string>\",\n    \"exportTaskIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"currentExportTaskId\": \"<string>\",\n    \"processedEntities\": \"<long>\",\n    \"skippedLines\": \"<long>\",\n    \"filesIndex\": \"<integer>\",\n    \"finishedTime\": \"<long>\"\n  },\n  \"getFilesTask\": {\n    \"createdTime\": \"<long>\",\n    \"fileEntries\": [\n      {\n        \"jobId\": \"<string>\",\n        \"filename\": \"<string>\",\n        \"processId\": \"<string>\",\n        \"createdDate\": \"<long>\",\n        \"requestLines\": \"<long>\",\n        \"receivedDate\": \"<long>\",\n        \"responseSize\": \"<long>\",\n        \"receivedLines\": \"<integer>\",\n        \"failedLines\": \"<integer>\",\n        \"status\": \"<string>\",\n        \"forceS3\": \"<boolean>\",\n        \"errorMessage\": \"<string>\"\n      },\n      {\n        \"jobId\": \"<string>\",\n        \"filename\": \"<string>\",\n        \"processId\": \"<string>\",\n        \"createdDate\": \"<long>\",\n        \"requestLines\": \"<long>\",\n        \"receivedDate\": \"<long>\",\n        \"responseSize\": \"<long>\",\n        \"receivedLines\": \"<integer>\",\n        \"failedLines\": \"<integer>\",\n        \"status\": \"<string>\",\n        \"forceS3\": \"<boolean>\",\n        \"errorMessage\": \"<string>\"\n      }\n    ],\n    \"finishedTime\": \"<long>\"\n  }\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "edc7c13d-7ed8-40fd-b692-9047de751fc2",
                            "name": "successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "",
                                        "dnb",
                                        "batch"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "",
                                                "type": "text/plain"
                                            },
                                            "key": "force",
                                            "value": "false"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": " This parameter can be set to <b>true</b> or <b>false</b>. If set to <b>true</b>, Direct+ based Get Org Match call or Direct+ based Get Detailed Profile is started. Note: You must have a token or an account with the privileges for Direct+ API usage. Otherwise, an authentication error is raised.",
                                                "type": "text/plain"
                                            },
                                            "key": "plus",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "",
                                            "type": "text/plain"
                                        },
                                        "key": "mergeOrgsWithSameDUNS",
                                        "value": "false"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "",
                                            "type": "text/plain"
                                        },
                                        "key": "s3Region",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required)   The URL of the environment.",
                                            "type": "text/plain"
                                        },
                                        "key": "environmentUrl",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required)  The ID of the tenant for which the organization match is required.",
                                            "type": "text/plain"
                                        },
                                        "key": "tenantId",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": " ftp.dnb.com",
                                            "type": "text/plain"
                                        },
                                        "key": "DnB-Ftp",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": " /puts",
                                            "type": "text/plain"
                                        },
                                        "key": "DnB-Path-Put",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": " /gets",
                                            "type": "text/plain"
                                        },
                                        "key": "DnB-Path-Get",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": " {{SafeTransport Username}}",
                                            "type": "text/plain"
                                        },
                                        "key": "DnB-User",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": " Direct+ multiprocess secret key or DnB FTP site password {{SafeTransport Password}}",
                                            "type": "text/plain"
                                        },
                                        "key": "DnB-Password",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "Max seconds to wait response files appear on FTP site",
                                            "type": "text/plain"
                                        },
                                        "key": "waitResponseSeconds",
                                        "value": "<long-int64>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "DnB returns confidence code for each processed entity in range 1 .. 10. 10 means absolutely confidence.All entities have confidence code less than minConfidenceCode parameter will be marked with error Low Confidence Score. Default value is 7.",
                                            "type": "text/plain"
                                        },
                                        "key": "minConfidenceCode",
                                        "value": "<long-int64>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "Direct+ product name. Default value is cmpelf",
                                            "type": "text/plain"
                                        },
                                        "key": "productId",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "Direct+ product version. Default value is v1",
                                            "type": "text/plain"
                                        },
                                        "key": "productVersion",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": " S3 bucket to store request and responses raw data files. Note: optional parameter",
                                            "type": "text/plain"
                                        },
                                        "key": "s3Bucket",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": " S3 path on specified S3 bucket. Note: optional parameter",
                                            "type": "text/plain"
                                        },
                                        "key": "s3Path",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": " AWS access key <b>Value: {{AccessKey}}.</b>. Note: optional parameter",
                                            "type": "text/plain"
                                        },
                                        "key": "awsAccessKey",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": " AWS secret key <b>Value: {{SecretKey}}.</b>. Note: optional parameter",
                                            "type": "text/plain"
                                        },
                                        "key": "awsSecretKey",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "DnB connector provides ability of scheduling batch jobs using standard cron expressions. Note: expression expecting in the UTC time zone. Please convert your local time to UTC before start job",
                                            "type": "text/plain"
                                        },
                                        "key": "cronExpression",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"exportTask\": {\n    \"filter\": \"<string>\",\n    \"distributed\": \"<boolean>\",\n    \"taskPartsCount\": \"<integer>\",\n    \"finishedTime\": \"<long>\"\n  },\n  \"putFilesTask\": {\n    \"compressionType\": \"<string>\",\n    \"exportTaskIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"currentExportTaskId\": \"<string>\",\n    \"processedEntities\": \"<long>\",\n    \"skippedLines\": \"<long>\",\n    \"filesIndex\": \"<integer>\",\n    \"finishedTime\": \"<long>\"\n  },\n  \"getFilesTask\": {\n    \"createdTime\": \"<long>\",\n    \"fileEntries\": [\n      {\n        \"jobId\": \"<string>\",\n        \"filename\": \"<string>\",\n        \"processId\": \"<string>\",\n        \"createdDate\": \"<long>\",\n        \"requestLines\": \"<long>\",\n        \"receivedDate\": \"<long>\",\n        \"responseSize\": \"<long>\",\n        \"receivedLines\": \"<integer>\",\n        \"failedLines\": \"<integer>\",\n        \"status\": \"<string>\",\n        \"forceS3\": \"<boolean>\",\n        \"errorMessage\": \"<string>\"\n      },\n      {\n        \"jobId\": \"<string>\",\n        \"filename\": \"<string>\",\n        \"processId\": \"<string>\",\n        \"createdDate\": \"<long>\",\n        \"requestLines\": \"<long>\",\n        \"receivedDate\": \"<long>\",\n        \"responseSize\": \"<long>\",\n        \"receivedLines\": \"<integer>\",\n        \"failedLines\": \"<integer>\",\n        \"status\": \"<string>\",\n        \"forceS3\": \"<boolean>\",\n        \"errorMessage\": \"<string>\"\n      }\n    ],\n    \"finishedTime\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"jobId\": \"<long>\",\n  \"success\": \"<string>\",\n  \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "e10aa95a-9919-4b4d-a1e9-8ec2f6b64ee6",
                    "name": "//dnb/batch/:jobId",
                    "request": {
                        "name": "//dnb/batch/:jobId",
                        "description": {
                            "content": "Cancel an active job based on the Job ID specified in the request. Use DELETE request to do it.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "",
                                "dnb",
                                "batch",
                                ":jobId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "key": "jobId"
                                }
                            ]
                        },
                        "header": [
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required)   The ID of the Job that must be canceled.",
                                    "type": "text/plain"
                                },
                                "key": "jobId",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required)   The URL of the environment.",
                                    "type": "text/plain"
                                },
                                "key": "environmentUrl",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required)  The ID of the tenant for which the organization match is required.",
                                    "type": "text/plain"
                                },
                                "key": "tenantId",
                                "value": "<string>"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "49c0a942-178e-4e7a-8b49-b898a9af300a",
                            "name": "successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "",
                                        "dnb",
                                        "batch",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required)   The ID of the Job that must be canceled.",
                                            "type": "text/plain"
                                        },
                                        "key": "jobId",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required)   The URL of the environment.",
                                            "type": "text/plain"
                                        },
                                        "key": "environmentUrl",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required)  The ID of the tenant for which the organization match is required.",
                                            "type": "text/plain"
                                        },
                                        "key": "tenantId",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"jobId\": \"<long>\",\n  \"success\": \"<string>\",\n  \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "1866d767-5d71-4b4d-9e41-ff46056e8517",
                    "name": "//dnb/getOrgMatch",
                    "request": {
                        "name": "//dnb/getOrgMatch",
                        "description": {
                            "content": "The Get Match API is called by external service on entity created event and provides an entity JSON body.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "",
                                "dnb",
                                "getOrgMatch"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "plus",
                                    "value": "false"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required) ",
                                    "type": "text/plain"
                                },
                                "key": "environmentUrl",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required) ",
                                    "type": "text/plain"
                                },
                                "key": "tenantId",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "DnB-Token",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "DnB-User",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "DnB-Password",
                                "value": "<string>"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "e5aa2448-3421-4983-aeed-0563c2cebcdd",
                            "name": "successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "",
                                        "dnb",
                                        "getOrgMatch"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "",
                                                "type": "text/plain"
                                            },
                                            "key": "plus",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) ",
                                            "type": "text/plain"
                                        },
                                        "key": "environmentUrl",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) ",
                                            "type": "text/plain"
                                        },
                                        "key": "tenantId",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "",
                                            "type": "text/plain"
                                        },
                                        "key": "DnB-Token",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "",
                                            "type": "text/plain"
                                        },
                                        "key": "DnB-User",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "",
                                            "type": "text/plain"
                                        },
                                        "key": "DnB-Password",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"success\": \"<string>\",\n  \"message\": \"<string>\",\n  \"entities\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "1867addd-edc5-4bbc-924f-57dd64224757",
                    "name": "//dnb/monitoring/background",
                    "request": {
                        "name": "//dnb/monitoring/background",
                        "description": {
                            "content": "A monitoring background job is a process that lists the event's destination, reads event files and notification files, and uploads them to the corresponding Reltio tenant. The destination, for now, is the S3 bucket only. The monitoring background job can be started manually to immediately process incoming data or can be scheduled using a cron expression.<ul type=\"square\"><li>Cron’s scheduled background monitoring process will automatically calculate the new files on each iteration by searching for previously started a job and extract max file timestamp from them which will be used as a starting point for the new job</li><li>Monitoring background job started without cron expression will treat all existing files in the destination location as new and process them</li><ul>",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "",
                                "dnb",
                                "monitoring",
                                "background"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "disabled": false,
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "s3Region",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "s3Path",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "entityType",
                                "value": "configuration/entityTypes/Organization"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "overrideUpwHierarchy",
                                "value": "<boolean>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "partialOverride",
                                "value": "true"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required)   The URL of the environment.",
                                    "type": "text/plain"
                                },
                                "key": "environmentUrl",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required)  The ID of the tenant for which the organization match is required.",
                                    "type": "text/plain"
                                },
                                "key": "tenantId",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": " {{SafeTransport Username}}",
                                    "type": "text/plain"
                                },
                                "key": "DnB-User",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": " {{SafeTransport Password}}",
                                    "type": "text/plain"
                                },
                                "key": "DnB-Password",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "DnB monitoring registration identifier",
                                    "type": "text/plain"
                                },
                                "key": "DnB-Registration",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": " Currently this is not used by PUT process, but is a required attribute. Reserved for future usage. <b>Value: {{AccessKey}}.</b>",
                                    "type": "text/plain"
                                },
                                "key": "awsAccessKey",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": " Currently this is not used by PUT process, but is a required attribute. Reserved for future usage. <b>Value: {{SecretKey}}.</b>",
                                    "type": "text/plain"
                                },
                                "key": "awsSecretKey",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "cronExpression",
                                "value": "<string>"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"startTimestamp\": \"<string>\",\n  \"exceptionFiles\": [\n    {\n      \"reference\": \"<string>\",\n      \"name\": \"<string>\",\n      \"size\": \"<long>\",\n      \"status\": {\n        \"message\": \"<string>\",\n        \"uploaded\": \"<boolean>\",\n        \"linesUploaded\": \"<long>\"\n      }\n    },\n    {\n      \"reference\": \"<string>\",\n      \"name\": \"<string>\",\n      \"size\": \"<long>\",\n      \"status\": {\n        \"message\": \"<string>\",\n        \"uploaded\": \"<boolean>\",\n        \"linesUploaded\": \"<long>\"\n      }\n    }\n  ],\n  \"monitoringFiles\": [\n    {\n      \"fileHeader\": {\n        \"reference\": \"<string>\",\n        \"headerType\": \"<string>\",\n        \"fileId\": \"<string>\",\n        \"fileTimeStamp\": \"<string>\",\n        \"inLanguage\": \"<string>\",\n        \"productID\": \"<string>\",\n        \"productVersion\": \"<string>\",\n        \"totalRecordCount\": \"<long>\",\n        \"files\": [\n          {\n            \"name\": \"<string>\",\n            \"hash\": \"<string>\",\n            \"status\": {\n              \"message\": \"<string>\",\n              \"uploaded\": \"<boolean>\",\n              \"linesUploaded\": \"<long>\"\n            }\n          },\n          {\n            \"name\": \"<string>\",\n            \"hash\": \"<string>\",\n            \"status\": {\n              \"message\": \"<string>\",\n              \"uploaded\": \"<boolean>\",\n              \"linesUploaded\": \"<long>\"\n            }\n          }\n        ],\n        \"notificationCount\": [\n          {\n            \"count\": \"<long>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"count\": \"<long>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"size\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    },\n    {\n      \"fileHeader\": {\n        \"reference\": \"<string>\",\n        \"headerType\": \"<string>\",\n        \"fileId\": \"<string>\",\n        \"fileTimeStamp\": \"<string>\",\n        \"inLanguage\": \"<string>\",\n        \"productID\": \"<string>\",\n        \"productVersion\": \"<string>\",\n        \"totalRecordCount\": \"<long>\",\n        \"files\": [\n          {\n            \"name\": \"<string>\",\n            \"hash\": \"<string>\",\n            \"status\": {\n              \"message\": \"<string>\",\n              \"uploaded\": \"<boolean>\",\n              \"linesUploaded\": \"<long>\"\n            }\n          },\n          {\n            \"name\": \"<string>\",\n            \"hash\": \"<string>\",\n            \"status\": {\n              \"message\": \"<string>\",\n              \"uploaded\": \"<boolean>\",\n              \"linesUploaded\": \"<long>\"\n            }\n          }\n        ],\n        \"notificationCount\": [\n          {\n            \"count\": \"<long>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"count\": \"<long>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"size\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    }\n  ]\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "84f412c6-e3cf-4476-9e17-1377f679c332",
                            "name": "successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "",
                                        "dnb",
                                        "monitoring",
                                        "background"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "",
                                            "type": "text/plain"
                                        },
                                        "key": "s3Region",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "",
                                            "type": "text/plain"
                                        },
                                        "key": "s3Path",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "",
                                            "type": "text/plain"
                                        },
                                        "key": "entityType",
                                        "value": "configuration/entityTypes/Organization"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "",
                                            "type": "text/plain"
                                        },
                                        "key": "overrideUpwHierarchy",
                                        "value": "<boolean>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "",
                                            "type": "text/plain"
                                        },
                                        "key": "partialOverride",
                                        "value": "true"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required)   The URL of the environment.",
                                            "type": "text/plain"
                                        },
                                        "key": "environmentUrl",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required)  The ID of the tenant for which the organization match is required.",
                                            "type": "text/plain"
                                        },
                                        "key": "tenantId",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": " {{SafeTransport Username}}",
                                            "type": "text/plain"
                                        },
                                        "key": "DnB-User",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": " {{SafeTransport Password}}",
                                            "type": "text/plain"
                                        },
                                        "key": "DnB-Password",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "DnB monitoring registration identifier",
                                            "type": "text/plain"
                                        },
                                        "key": "DnB-Registration",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": " Currently this is not used by PUT process, but is a required attribute. Reserved for future usage. <b>Value: {{AccessKey}}.</b>",
                                            "type": "text/plain"
                                        },
                                        "key": "awsAccessKey",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": " Currently this is not used by PUT process, but is a required attribute. Reserved for future usage. <b>Value: {{SecretKey}}.</b>",
                                            "type": "text/plain"
                                        },
                                        "key": "awsSecretKey",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "",
                                            "type": "text/plain"
                                        },
                                        "key": "cronExpression",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"startTimestamp\": \"<string>\",\n  \"exceptionFiles\": [\n    {\n      \"reference\": \"<string>\",\n      \"name\": \"<string>\",\n      \"size\": \"<long>\",\n      \"status\": {\n        \"message\": \"<string>\",\n        \"uploaded\": \"<boolean>\",\n        \"linesUploaded\": \"<long>\"\n      }\n    },\n    {\n      \"reference\": \"<string>\",\n      \"name\": \"<string>\",\n      \"size\": \"<long>\",\n      \"status\": {\n        \"message\": \"<string>\",\n        \"uploaded\": \"<boolean>\",\n        \"linesUploaded\": \"<long>\"\n      }\n    }\n  ],\n  \"monitoringFiles\": [\n    {\n      \"fileHeader\": {\n        \"reference\": \"<string>\",\n        \"headerType\": \"<string>\",\n        \"fileId\": \"<string>\",\n        \"fileTimeStamp\": \"<string>\",\n        \"inLanguage\": \"<string>\",\n        \"productID\": \"<string>\",\n        \"productVersion\": \"<string>\",\n        \"totalRecordCount\": \"<long>\",\n        \"files\": [\n          {\n            \"name\": \"<string>\",\n            \"hash\": \"<string>\",\n            \"status\": {\n              \"message\": \"<string>\",\n              \"uploaded\": \"<boolean>\",\n              \"linesUploaded\": \"<long>\"\n            }\n          },\n          {\n            \"name\": \"<string>\",\n            \"hash\": \"<string>\",\n            \"status\": {\n              \"message\": \"<string>\",\n              \"uploaded\": \"<boolean>\",\n              \"linesUploaded\": \"<long>\"\n            }\n          }\n        ],\n        \"notificationCount\": [\n          {\n            \"count\": \"<long>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"count\": \"<long>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"size\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    },\n    {\n      \"fileHeader\": {\n        \"reference\": \"<string>\",\n        \"headerType\": \"<string>\",\n        \"fileId\": \"<string>\",\n        \"fileTimeStamp\": \"<string>\",\n        \"inLanguage\": \"<string>\",\n        \"productID\": \"<string>\",\n        \"productVersion\": \"<string>\",\n        \"totalRecordCount\": \"<long>\",\n        \"files\": [\n          {\n            \"name\": \"<string>\",\n            \"hash\": \"<string>\",\n            \"status\": {\n              \"message\": \"<string>\",\n              \"uploaded\": \"<boolean>\",\n              \"linesUploaded\": \"<long>\"\n            }\n          },\n          {\n            \"name\": \"<string>\",\n            \"hash\": \"<string>\",\n            \"status\": {\n              \"message\": \"<string>\",\n              \"uploaded\": \"<boolean>\",\n              \"linesUploaded\": \"<long>\"\n            }\n          }\n        ],\n        \"notificationCount\": [\n          {\n            \"count\": \"<long>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"count\": \"<long>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"size\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    }\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"jobId\": \"<long>\",\n  \"success\": \"<string>\",\n  \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "c34142fe-84eb-4fce-a29b-90b9c5c5b81c",
                    "name": "//dnb/monitoring/batch",
                    "request": {
                        "name": "//dnb/monitoring/batch",
                        "description": {
                            "content": "register or removes multiple DUNS numbers from the DnB monitoring registration using an export file. Only entities with DUNS numbers will pass to processing",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "",
                                "dnb",
                                "monitoring",
                                "batch"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required)   The URL of the environment.",
                                    "type": "text/plain"
                                },
                                "key": "environmentUrl",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required)  The ID of the tenant for which the organization match is required.",
                                    "type": "text/plain"
                                },
                                "key": "tenantId",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": " ftp.dnb.com",
                                    "type": "text/plain"
                                },
                                "key": "DnB-Ftp",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": " {{SafeTransport Username}}",
                                    "type": "text/plain"
                                },
                                "key": "DnB-User",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": " {{SafeTransport Password}}",
                                    "type": "text/plain"
                                },
                                "key": "DnB-Password",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "DnB monitoring registration name",
                                    "type": "text/plain"
                                },
                                "key": "DnB-Registration",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "DnB monitoring batch operation, can be remove or add. Default value is add",
                                    "type": "text/plain"
                                },
                                "key": "DnB-Registration-Op",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "DnB connector provides ability of scheduling batch jobs using standard cron expressions. Note: expression expecting time in the UTC time zone. Please convert your local time to UTC before start job",
                                    "type": "text/plain"
                                },
                                "key": "cronExpression",
                                "value": "<string>"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"exportTask\": {\n    \"filter\": \"<string>\",\n    \"distributed\": \"<boolean>\",\n    \"taskPartsCount\": \"<integer>\",\n    \"finishedTime\": \"<long>\"\n  },\n  \"putFilesTask\": {\n    \"compressionType\": \"<string>\",\n    \"exportTaskIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"currentExportTaskId\": \"<string>\",\n    \"processedEntities\": \"<long>\",\n    \"skippedLines\": \"<long>\",\n    \"filesIndex\": \"<integer>\",\n    \"finishedTime\": \"<long>\"\n  },\n  \"getFilesTask\": {\n    \"createdTime\": \"<long>\",\n    \"fileEntries\": [\n      {\n        \"jobId\": \"<string>\",\n        \"filename\": \"<string>\",\n        \"processId\": \"<string>\",\n        \"createdDate\": \"<long>\",\n        \"requestLines\": \"<long>\",\n        \"receivedDate\": \"<long>\",\n        \"responseSize\": \"<long>\",\n        \"receivedLines\": \"<integer>\",\n        \"failedLines\": \"<integer>\",\n        \"status\": \"<string>\",\n        \"forceS3\": \"<boolean>\",\n        \"errorMessage\": \"<string>\"\n      },\n      {\n        \"jobId\": \"<string>\",\n        \"filename\": \"<string>\",\n        \"processId\": \"<string>\",\n        \"createdDate\": \"<long>\",\n        \"requestLines\": \"<long>\",\n        \"receivedDate\": \"<long>\",\n        \"responseSize\": \"<long>\",\n        \"receivedLines\": \"<integer>\",\n        \"failedLines\": \"<integer>\",\n        \"status\": \"<string>\",\n        \"forceS3\": \"<boolean>\",\n        \"errorMessage\": \"<string>\"\n      }\n    ],\n    \"finishedTime\": \"<long>\"\n  }\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "0689843c-d953-4f61-b364-be0171e90d30",
                            "name": "successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "",
                                        "dnb",
                                        "monitoring",
                                        "batch"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required)   The URL of the environment.",
                                            "type": "text/plain"
                                        },
                                        "key": "environmentUrl",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required)  The ID of the tenant for which the organization match is required.",
                                            "type": "text/plain"
                                        },
                                        "key": "tenantId",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": " ftp.dnb.com",
                                            "type": "text/plain"
                                        },
                                        "key": "DnB-Ftp",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": " {{SafeTransport Username}}",
                                            "type": "text/plain"
                                        },
                                        "key": "DnB-User",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": " {{SafeTransport Password}}",
                                            "type": "text/plain"
                                        },
                                        "key": "DnB-Password",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "DnB monitoring registration name",
                                            "type": "text/plain"
                                        },
                                        "key": "DnB-Registration",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "DnB monitoring batch operation, can be remove or add. Default value is add",
                                            "type": "text/plain"
                                        },
                                        "key": "DnB-Registration-Op",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "DnB connector provides ability of scheduling batch jobs using standard cron expressions. Note: expression expecting time in the UTC time zone. Please convert your local time to UTC before start job",
                                            "type": "text/plain"
                                        },
                                        "key": "cronExpression",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"exportTask\": {\n    \"filter\": \"<string>\",\n    \"distributed\": \"<boolean>\",\n    \"taskPartsCount\": \"<integer>\",\n    \"finishedTime\": \"<long>\"\n  },\n  \"putFilesTask\": {\n    \"compressionType\": \"<string>\",\n    \"exportTaskIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"currentExportTaskId\": \"<string>\",\n    \"processedEntities\": \"<long>\",\n    \"skippedLines\": \"<long>\",\n    \"filesIndex\": \"<integer>\",\n    \"finishedTime\": \"<long>\"\n  },\n  \"getFilesTask\": {\n    \"createdTime\": \"<long>\",\n    \"fileEntries\": [\n      {\n        \"jobId\": \"<string>\",\n        \"filename\": \"<string>\",\n        \"processId\": \"<string>\",\n        \"createdDate\": \"<long>\",\n        \"requestLines\": \"<long>\",\n        \"receivedDate\": \"<long>\",\n        \"responseSize\": \"<long>\",\n        \"receivedLines\": \"<integer>\",\n        \"failedLines\": \"<integer>\",\n        \"status\": \"<string>\",\n        \"forceS3\": \"<boolean>\",\n        \"errorMessage\": \"<string>\"\n      },\n      {\n        \"jobId\": \"<string>\",\n        \"filename\": \"<string>\",\n        \"processId\": \"<string>\",\n        \"createdDate\": \"<long>\",\n        \"requestLines\": \"<long>\",\n        \"receivedDate\": \"<long>\",\n        \"responseSize\": \"<long>\",\n        \"receivedLines\": \"<integer>\",\n        \"failedLines\": \"<integer>\",\n        \"status\": \"<string>\",\n        \"forceS3\": \"<boolean>\",\n        \"errorMessage\": \"<string>\"\n      }\n    ],\n    \"finishedTime\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"jobId\": \"<long>\",\n  \"success\": \"<string>\",\n  \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "7c8eccab-8616-43df-af62-2f61360b8cc1",
                    "name": "//dnb/monitoring/registration",
                    "request": {
                        "name": "//dnb/monitoring/registration",
                        "description": {
                            "content": "Makes a request to the D&B list of duns numbers and returns information if DUNS number is registered for monitoring or not. This is on demand API call and can be configured to be called from Reltio UI using a button click",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "",
                                "dnb",
                                "monitoring",
                                "registration"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Entity URIs in the <b>entities/XXXX</b> format.",
                                        "type": "text/plain"
                                    },
                                    "key": "entityURI",
                                    "value": "<string>"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required) The URL of the environment.",
                                    "type": "text/plain"
                                },
                                "key": "environmentUrl",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required) The ID of the tenant for which the organization match is required.",
                                    "type": "text/plain"
                                },
                                "key": "tenantId",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "The D&B token in the <b>Bearer: <<token>></b> format. This parameter is required if you do not specify <b>D&B-User</b> and <b>D&B-Password</b>.",
                                    "type": "text/plain"
                                },
                                "key": "DnB-Token",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "The D&B account username or Consumer Key in Direct+. You must specify this if the access token is not specified for authorization.",
                                    "type": "text/plain"
                                },
                                "key": "DnB-User",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "The D&B account password or Consumer Secret in Direct+. You must specify this if the access token is not specified for authorization.",
                                    "type": "text/plain"
                                },
                                "key": "DnB-Password",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "DnB monitoring registration name",
                                    "type": "text/plain"
                                },
                                "key": "DnB-Registration",
                                "value": "<string>"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {
                            "mode": "raw",
                            "raw": "{}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "aa735449-12f1-4460-857b-b57cc0195206",
                            "name": "successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "",
                                        "dnb",
                                        "monitoring",
                                        "registration"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "(Required) Entity URIs in the <b>entities/XXXX</b> format.",
                                                "type": "text/plain"
                                            },
                                            "key": "entityURI",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) The URL of the environment.",
                                            "type": "text/plain"
                                        },
                                        "key": "environmentUrl",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) The ID of the tenant for which the organization match is required.",
                                            "type": "text/plain"
                                        },
                                        "key": "tenantId",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "The D&B token in the <b>Bearer: <<token>></b> format. This parameter is required if you do not specify <b>D&B-User</b> and <b>D&B-Password</b>.",
                                            "type": "text/plain"
                                        },
                                        "key": "DnB-Token",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "The D&B account username or Consumer Key in Direct+. You must specify this if the access token is not specified for authorization.",
                                            "type": "text/plain"
                                        },
                                        "key": "DnB-User",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "The D&B account password or Consumer Secret in Direct+. You must specify this if the access token is not specified for authorization.",
                                            "type": "text/plain"
                                        },
                                        "key": "DnB-Password",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "DnB monitoring registration name",
                                            "type": "text/plain"
                                        },
                                        "key": "DnB-Registration",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"success\": \"<string>\",\n  \"message\": \"<string>\",\n  \"entities\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "50f502c1-e4f3-480d-a263-c1050b56abfd",
                    "name": "//dnb/monitoring/registration",
                    "request": {
                        "name": "//dnb/monitoring/registration",
                        "description": {
                            "content": "Registers the DUNS number from the entity in the DnB monitoring registration. The entity must have a DUNS number. This is on demand API call and can be configured to be called from Reltio UI using a button click",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "",
                                "dnb",
                                "monitoring",
                                "registration"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Entity URIs in the <b>entities/XXXX</b> format.",
                                        "type": "text/plain"
                                    },
                                    "key": "entityURI",
                                    "value": "<string>"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required) The URL of the environment.",
                                    "type": "text/plain"
                                },
                                "key": "environmentUrl",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required) The ID of the tenant for which the organization match is required.",
                                    "type": "text/plain"
                                },
                                "key": "tenantId",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "The D&B token in the <b>Bearer: <<token>></b> format. This parameter is required if you do not specify <b>D&B-User</b> and <b>D&B-Password</b>.",
                                    "type": "text/plain"
                                },
                                "key": "DnB-Token",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "The D&B account username or Consumer Key in Direct+. You must specify this if the access token is not specified for authorization.",
                                    "type": "text/plain"
                                },
                                "key": "DnB-User",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "The D&B account password or Consumer Secret in Direct+. You must specify this if the access token is not specified for authorization.",
                                    "type": "text/plain"
                                },
                                "key": "DnB-Password",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "DnB monitoring registration name",
                                    "type": "text/plain"
                                },
                                "key": "DnB-Registration",
                                "value": "<string>"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "581b8fca-5e90-4ce9-a8bf-802edc233a09",
                            "name": "successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "",
                                        "dnb",
                                        "monitoring",
                                        "registration"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "(Required) Entity URIs in the <b>entities/XXXX</b> format.",
                                                "type": "text/plain"
                                            },
                                            "key": "entityURI",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) The URL of the environment.",
                                            "type": "text/plain"
                                        },
                                        "key": "environmentUrl",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) The ID of the tenant for which the organization match is required.",
                                            "type": "text/plain"
                                        },
                                        "key": "tenantId",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "The D&B token in the <b>Bearer: <<token>></b> format. This parameter is required if you do not specify <b>D&B-User</b> and <b>D&B-Password</b>.",
                                            "type": "text/plain"
                                        },
                                        "key": "DnB-Token",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "The D&B account username or Consumer Key in Direct+. You must specify this if the access token is not specified for authorization.",
                                            "type": "text/plain"
                                        },
                                        "key": "DnB-User",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "The D&B account password or Consumer Secret in Direct+. You must specify this if the access token is not specified for authorization.",
                                            "type": "text/plain"
                                        },
                                        "key": "DnB-Password",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "DnB monitoring registration name",
                                            "type": "text/plain"
                                        },
                                        "key": "DnB-Registration",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"success\": \"<string>\",\n  \"message\": \"<string>\",\n  \"entities\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "4ec207f7-138f-44ea-80f1-0c5a2d44bd0e",
                    "name": "//dnb/monitoring/registration",
                    "request": {
                        "name": "//dnb/monitoring/registration",
                        "description": {
                            "content": "Removes the entity’s DUNS number from the DnB monitoring registration.  The entity must have a DUNS number. This is on demand API call and can be configured to be called from Reltio UI using a button click",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "",
                                "dnb",
                                "monitoring",
                                "registration"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Entity URIs in the <b>entities/XXXX</b> format.",
                                        "type": "text/plain"
                                    },
                                    "key": "entityURI",
                                    "value": "<string>"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required) The URL of the environment.",
                                    "type": "text/plain"
                                },
                                "key": "environmentUrl",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "(Required) The ID of the tenant for which the organization match is required.",
                                    "type": "text/plain"
                                },
                                "key": "tenantId",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "The D&B token in the <b>Bearer: <<token>></b> format. This parameter is required if you do not specify <b>D&B-User</b> and <b>D&B-Password</b>.",
                                    "type": "text/plain"
                                },
                                "key": "DnB-Token",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "The D&B account username or Consumer Key in Direct+. You must specify this if the access token is not specified for authorization.",
                                    "type": "text/plain"
                                },
                                "key": "DnB-User",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "The D&B account password or Consumer Secret in Direct+. You must specify this if the access token is not specified for authorization.",
                                    "type": "text/plain"
                                },
                                "key": "DnB-Password",
                                "value": "<string>"
                            },
                            {
                                "disabled": false,
                                "description": {
                                    "content": "DnB monitoring registration name",
                                    "type": "text/plain"
                                },
                                "key": "DnB-Registration",
                                "value": "<string>"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "body": {
                            "mode": "raw",
                            "raw": "{}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "61470bc0-3386-46f2-ad78-6308f582f9f4",
                            "name": "successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "",
                                        "dnb",
                                        "monitoring",
                                        "registration"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "(Required) Entity URIs in the <b>entities/XXXX</b> format.",
                                                "type": "text/plain"
                                            },
                                            "key": "entityURI",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) The URL of the environment.",
                                            "type": "text/plain"
                                        },
                                        "key": "environmentUrl",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "(Required) The ID of the tenant for which the organization match is required.",
                                            "type": "text/plain"
                                        },
                                        "key": "tenantId",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "The D&B token in the <b>Bearer: <<token>></b> format. This parameter is required if you do not specify <b>D&B-User</b> and <b>D&B-Password</b>.",
                                            "type": "text/plain"
                                        },
                                        "key": "DnB-Token",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "The D&B account username or Consumer Key in Direct+. You must specify this if the access token is not specified for authorization.",
                                            "type": "text/plain"
                                        },
                                        "key": "DnB-User",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "The D&B account password or Consumer Secret in Direct+. You must specify this if the access token is not specified for authorization.",
                                            "type": "text/plain"
                                        },
                                        "key": "DnB-Password",
                                        "value": "<string>"
                                    },
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "DnB monitoring registration name",
                                            "type": "text/plain"
                                        },
                                        "key": "DnB-Registration",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"success\": \"<string>\",\n  \"message\": \"<string>\",\n  \"entities\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ]
        }
    ],
    "event": [],
    "variable": [
        {
            "key": "baseUrl",
            "value": "/"
        }
    ],
    "info": {
        "_postman_id": "51444bf6-0a54-48f6-8817-28a8c23becb5",
        "name": "Imported from OpenAPI",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
        "description": {
            "content": "Contact Support:\n Name: Reltio\n Email: support@reltio.com",
            "type": "text/plain"
        }
    }
}