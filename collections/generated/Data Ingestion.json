{
    "item": [
        {
            "name": "Entities",
            "description": "",
            "item": [
                {
                    "id": "6527e461-7956-4632-b347-04bc0c43e97b",
                    "name": "/services/reltio/api/:tenantId/entities",
                    "request": {
                        "name": "/services/reltio/api/:tenantId/entities",
                        "description": {
                            "content": "This API saves a collection of entities in Reltio Platform according to JSON object definition. To create just one entity using this API, specify one JSON object in the array. <br /> If you post an entity with some crosswalks (for example, <b>crosswalk1</b> and <b>crosswalk2</b>), and that entity corresponds to some existing entities (<b>entity1</b> and <b>entity2</b>) in the Reltio Platform, then these entities are merged in one entity referred as the survivor (for example, <b>entity1</b> would be merged in <b>entity2</b>). After this, the resultant survivor entity (for example, <b>entity2</b>) is updated with the new information from a posted entity. If no entities are found or provided in the posted entity crosswalk or no crosswalks are provided, then a new entity is created. <br /><b>Note:</b> If you do not specify roles in the request, then all roles from the entity being overwritten remain unchanged. To remove all roles from the resultant entity specify an empty array of roles in the <b>POST /entities</b> request.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "reltio",
                                "api",
                                ":tenantId",
                                "entities"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Specifies if the response should contain created entities. Default is true.",
                                        "type": "text/plain"
                                    },
                                    "key": "returnObjects",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                        "type": "text/plain"
                                    },
                                    "key": "options",
                                    "value": "partialOverride,partialOverrideForReference"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"do21\": \"<string>\",\n          \"in_fea\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"eu51\": \"<string>\",\n          \"reprehenderitf37\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"voluptate_2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"sit_2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ut1ff\": \"<string>\",\n          \"incididunt_2b1\": \"<string>\",\n          \"Duis_6\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequat7\": \"<string>\",\n          \"ullamco_c4\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"eiusmodf\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"in_7\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "f13310b7-1c8b-4bd6-b3f5-6c75178f8925",
                            "name": "Entities are successfully saved",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "partialOverride,partialOverrideForReference"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"do21\": \"<string>\",\n          \"in_fea\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"eu51\": \"<string>\",\n          \"reprehenderitf37\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"voluptate_2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"sit_2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ut1ff\": \"<string>\",\n          \"incididunt_2b1\": \"<string>\",\n          \"Duis_6\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequat7\": \"<string>\",\n          \"ullamco_c4\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"eiusmodf\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"in_7\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"index\": \"<integer>\",\n    \"errors\": {\n      \"severity\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorDetailMessage\": \"<string>\",\n      \"innerErrorData\": {\n        \"exception\": \"<string>\"\n      }\n    },\n    \"object\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"amet_bf\": \"<string>\",\n            \"nostrud__04\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"dolore5c\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<long>\",\n      \"updatedTime\": \"<long>\",\n      \"attributes\": {},\n      \"uri\": \"<string>\",\n      \"type\": \"<string>\",\n      \"analyticsAttributes\": {\n        \"magna_029\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ]\n      },\n      \"secondaryLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"refUpdatedBy\": \"<string>\",\n      \"refUpdatedTime\": \"<long>\",\n      \"refCommitTime\": \"<long>\",\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"successful\": \"<boolean>\"\n  },\n  {\n    \"index\": \"<integer>\",\n    \"errors\": {\n      \"severity\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorDetailMessage\": \"<string>\",\n      \"innerErrorData\": {\n        \"exception\": \"<string>\"\n      }\n    },\n    \"object\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"nulla90\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"et5\": \"<string>\",\n            \"enim_b\": \"<string>\",\n            \"occaecatb\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<long>\",\n      \"updatedTime\": \"<long>\",\n      \"attributes\": {},\n      \"uri\": \"<string>\",\n      \"type\": \"<string>\",\n      \"analyticsAttributes\": {\n        \"eiusmod_a77\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"amet__b\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"ut5\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ]\n      },\n      \"secondaryLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"refUpdatedBy\": \"<string>\",\n      \"refUpdatedTime\": \"<long>\",\n      \"refCommitTime\": \"<long>\",\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"successful\": \"<boolean>\"\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "130c535c-b71e-47f0-991f-ba1421ed58df",
                            "name": "Entities aren't saved due to a reason provided in the error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "partialOverride,partialOverrideForReference"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"do21\": \"<string>\",\n          \"in_fea\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"eu51\": \"<string>\",\n          \"reprehenderitf37\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"voluptate_2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"sit_2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ut1ff\": \"<string>\",\n          \"incididunt_2b1\": \"<string>\",\n          \"Duis_6\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequat7\": \"<string>\",\n          \"ullamco_c4\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"eiusmodf\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"in_7\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "75b83066-625d-4357-9782-1afb233f100a",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "partialOverride,partialOverrideForReference"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"do21\": \"<string>\",\n          \"in_fea\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"eu51\": \"<string>\",\n          \"reprehenderitf37\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"voluptate_2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"sit_2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ut1ff\": \"<string>\",\n          \"incididunt_2b1\": \"<string>\",\n          \"Duis_6\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequat7\": \"<string>\",\n          \"ullamco_c4\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"eiusmodf\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"in_7\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6b324914-b1a2-44db-b95f-da8f628f9422",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "partialOverride,partialOverrideForReference"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"do21\": \"<string>\",\n          \"in_fea\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"eu51\": \"<string>\",\n          \"reprehenderitf37\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"voluptate_2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"sit_2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ut1ff\": \"<string>\",\n          \"incididunt_2b1\": \"<string>\",\n          \"Duis_6\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequat7\": \"<string>\",\n          \"ullamco_c4\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"eiusmodf\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"in_7\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f3302bdd-1ea1-41fa-bd77-22670c23a100",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "partialOverride,partialOverrideForReference"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"do21\": \"<string>\",\n          \"in_fea\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"eu51\": \"<string>\",\n          \"reprehenderitf37\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"voluptate_2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"sit_2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ut1ff\": \"<string>\",\n          \"incididunt_2b1\": \"<string>\",\n          \"Duis_6\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequat7\": \"<string>\",\n          \"ullamco_c4\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"eiusmodf\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"in_7\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "86ff96a6-0a0d-4df0-bae8-41bf88e88ef8",
                            "name": "Too many requests, please try later",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "partialOverride,partialOverrideForReference"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"do21\": \"<string>\",\n          \"in_fea\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"eu51\": \"<string>\",\n          \"reprehenderitf37\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"voluptate_2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"sit_2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ut1ff\": \"<string>\",\n          \"incididunt_2b1\": \"<string>\",\n          \"Duis_6\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequat7\": \"<string>\",\n          \"ullamco_c4\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"eiusmodf\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"in_7\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Too Many Requests",
                            "code": 429,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "ee572f6f-02b4-4514-9832-62bec549074a",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "partialOverride,partialOverrideForReference"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"do21\": \"<string>\",\n          \"in_fea\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"eu51\": \"<string>\",\n          \"reprehenderitf37\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"voluptate_2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"sit_2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ut1ff\": \"<string>\",\n          \"incididunt_2b1\": \"<string>\",\n          \"Duis_6\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequat7\": \"<string>\",\n          \"ullamco_c4\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"eiusmodf\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"in_7\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "583c3289-25b5-453c-a187-51a180838a53",
                            "name": "This status code could represent 2 possible scenarios. First, the 'Service Unavailable' scenario. Second, this status code is used when too many requests are being sent in-parallel and API backpressure mechanism was used to protect the platform. In both scenarios, an exponential backoff mechanism should be used to control the rate of requests sent to the server. ",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "partialOverride,partialOverrideForReference"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"do21\": \"<string>\",\n          \"in_fea\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"eu51\": \"<string>\",\n          \"reprehenderitf37\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"voluptate_2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"sit_2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ut1ff\": \"<string>\",\n          \"incididunt_2b1\": \"<string>\",\n          \"Duis_6\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequat7\": \"<string>\",\n          \"ullamco_c4\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"eiusmodf\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"in_7\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "86a168ca-3548-44aa-a827-2f9e093c700a",
                            "name": "The request consumes more resources than it is allowed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "partialOverride,partialOverrideForReference"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"do21\": \"<string>\",\n          \"in_fea\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"eu51\": \"<string>\",\n          \"reprehenderitf37\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"voluptate_2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"sit_2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ut1ff\": \"<string>\",\n          \"incididunt_2b1\": \"<string>\",\n          \"Duis_6\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequat7\": \"<string>\",\n          \"ullamco_c4\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"eiusmodf\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"in_7\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Insufficient Storage (WebDAV) (RFC 4918)",
                            "code": 507,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "0e50120e-ff3f-4156-8104-1f91a1620cfa",
                    "name": "/services/reltio/api/:tenantId/entities/_conditional",
                    "request": {
                        "name": "/services/reltio/api/:tenantId/entities/_conditional",
                        "description": {
                            "content": "This API is an aggregate of Search and Save API.It retrieves the individual entities or searches for multiple entities and based on the search result, this API saves a collection of entities in Reltio Platform according to JSON object definition. ",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "reltio",
                                "api",
                                ":tenantId",
                                "entities",
                                "_conditional"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Enables entities filtering by a condition. Format for filter query parameter: filter=({Condition Type}[AND/OR {Condition Type}]*).\nFor more information, please visit https://docs.reltio.com",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Comma-separated list of properties from object structure that should be returned in a response. Allows you to return a partial object. List of object properties you can find at the response model. Additional system properties are:<ul><li>attributes._lookupCodes: return codes for lookup attributes.</li><li>attributes._lookupValues: return values for lookup attributes.</li></ul>",
                                        "type": "text/plain"
                                    },
                                    "key": "select",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Positive Integer value to identify maximum number of entities to return in a response. Can be used to organize pagination in combination with the \"offset\" parameter.",
                                        "type": "text/plain"
                                    },
                                    "key": "max",
                                    "value": "50"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Positive Integer value to identify starting what element in a result set should be returned in a response. Can be used to organize pagination in combination with the max parameter.",
                                        "type": "text/plain"
                                    },
                                    "key": "offset",
                                    "value": "0"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Entity objects property that should be used for sorting. Can be used in combination with the \"order\" parameter to have reverse order. If this parameter is not provided or if the value cannot be recognized, then no sorting is used.",
                                        "type": "text/plain"
                                    },
                                    "key": "sort",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Order of sorting. Applicable only in combination with the sort parameter. Possible values:\n<ul><li>asc - results are shown in ascending order.</li><li>desc - results are shown in descending order.</li></ul>",
                                        "type": "text/plain"
                                    },
                                    "key": "order",
                                    "value": "asc"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Specifies maximum number of values listed in attributes. This restriction is intended for more efficient responses in the case of very long lists of values in some attributes.",
                                        "type": "text/plain"
                                    },
                                    "key": "defaultMaxValues",
                                    "value": "<int>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "When set to true, documents with search hits in labels get more search relevance score.",
                                        "type": "text/plain"
                                    },
                                    "key": "scoreEnabled",
                                    "value": "false"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Defines whether to include active and expired entities into the results. By default, only active entities are included in the response. Possible values:\n<ul><li>all - include both active and expired entities</li><li>active - include only active entities</li><li>not_active - include only expired entities</li></ul>",
                                        "type": "text/plain"
                                    },
                                    "key": "activeness",
                                    "value": "active"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Specifies if the response should contain created entities. Default is true.",
                                        "type": "text/plain"
                                    },
                                    "key": "returnObjects",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                        "type": "text/plain"
                                    },
                                    "key": "options",
                                    "value": "partialOverride,partialOverrideForReference"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Specifies if the system should apply the request body depending on search results. Default is true.",
                                        "type": "text/plain"
                                    },
                                    "key": "applyIfNoMatches",
                                    "value": "true"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Specifies if the system should return the search results in the response. Default is true.",
                                        "type": "text/plain"
                                    },
                                    "key": "returnMatches",
                                    "value": "true"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"do21\": \"<string>\",\n          \"in_fea\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"eu51\": \"<string>\",\n          \"reprehenderitf37\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"voluptate_2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"sit_2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ut1ff\": \"<string>\",\n          \"incididunt_2b1\": \"<string>\",\n          \"Duis_6\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequat7\": \"<string>\",\n          \"ullamco_c4\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"eiusmodf\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"in_7\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "7cbe3973-dbce-47c9-8c51-1641e1a20da9",
                            "name": "successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities",
                                        "_conditional"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Enables entities filtering by a condition. Format for filter query parameter: filter=({Condition Type}[AND/OR {Condition Type}]*).\nFor more information, please visit https://docs.reltio.com",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of properties from object structure that should be returned in a response. Allows you to return a partial object. List of object properties you can find at the response model. Additional system properties are:<ul><li>attributes._lookupCodes: return codes for lookup attributes.</li><li>attributes._lookupValues: return values for lookup attributes.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "select",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Positive Integer value to identify maximum number of entities to return in a response. Can be used to organize pagination in combination with the \"offset\" parameter.",
                                                "type": "text/plain"
                                            },
                                            "key": "max",
                                            "value": "50"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Positive Integer value to identify starting what element in a result set should be returned in a response. Can be used to organize pagination in combination with the max parameter.",
                                                "type": "text/plain"
                                            },
                                            "key": "offset",
                                            "value": "0"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Entity objects property that should be used for sorting. Can be used in combination with the \"order\" parameter to have reverse order. If this parameter is not provided or if the value cannot be recognized, then no sorting is used.",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Order of sorting. Applicable only in combination with the sort parameter. Possible values:\n<ul><li>asc - results are shown in ascending order.</li><li>desc - results are shown in descending order.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "order",
                                            "value": "asc"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies maximum number of values listed in attributes. This restriction is intended for more efficient responses in the case of very long lists of values in some attributes.",
                                                "type": "text/plain"
                                            },
                                            "key": "defaultMaxValues",
                                            "value": "<int>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "When set to true, documents with search hits in labels get more search relevance score.",
                                                "type": "text/plain"
                                            },
                                            "key": "scoreEnabled",
                                            "value": "false"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines whether to include active and expired entities into the results. By default, only active entities are included in the response. Possible values:\n<ul><li>all - include both active and expired entities</li><li>active - include only active entities</li><li>not_active - include only expired entities</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "activeness",
                                            "value": "active"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "partialOverride,partialOverrideForReference"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the system should apply the request body depending on search results. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "applyIfNoMatches",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the system should return the search results in the response. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnMatches",
                                            "value": "true"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"do21\": \"<string>\",\n          \"in_fea\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"eu51\": \"<string>\",\n          \"reprehenderitf37\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"voluptate_2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"sit_2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ut1ff\": \"<string>\",\n          \"incididunt_2b1\": \"<string>\",\n          \"Duis_6\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequat7\": \"<string>\",\n          \"ullamco_c4\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"eiusmodf\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"in_7\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"index\": \"<integer>\",\n    \"errors\": {\n      \"severity\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorDetailMessage\": \"<string>\",\n      \"innerErrorData\": {\n        \"exception\": \"<string>\"\n      }\n    },\n    \"object\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"amet_bf\": \"<string>\",\n            \"nostrud__04\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"dolore5c\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<long>\",\n      \"updatedTime\": \"<long>\",\n      \"attributes\": {},\n      \"uri\": \"<string>\",\n      \"type\": \"<string>\",\n      \"analyticsAttributes\": {\n        \"magna_029\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ]\n      },\n      \"secondaryLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"refUpdatedBy\": \"<string>\",\n      \"refUpdatedTime\": \"<long>\",\n      \"refCommitTime\": \"<long>\",\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"successful\": \"<boolean>\"\n  },\n  {\n    \"index\": \"<integer>\",\n    \"errors\": {\n      \"severity\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorDetailMessage\": \"<string>\",\n      \"innerErrorData\": {\n        \"exception\": \"<string>\"\n      }\n    },\n    \"object\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"nulla90\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"et5\": \"<string>\",\n            \"enim_b\": \"<string>\",\n            \"occaecatb\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<long>\",\n      \"updatedTime\": \"<long>\",\n      \"attributes\": {},\n      \"uri\": \"<string>\",\n      \"type\": \"<string>\",\n      \"analyticsAttributes\": {\n        \"eiusmod_a77\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"amet__b\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"ut5\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ]\n      },\n      \"secondaryLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"refUpdatedBy\": \"<string>\",\n      \"refUpdatedTime\": \"<long>\",\n      \"refCommitTime\": \"<long>\",\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"successful\": \"<boolean>\"\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ]
        },
        {
            "name": "Interactions",
            "description": "",
            "item": [
                {
                    "id": "d82a9a2e-6cc8-49a6-addc-42546b82a310",
                    "name": "/services/reltio/api/:tenantId/interactions",
                    "request": {
                        "name": "/services/reltio/api/:tenantId/interactions",
                        "description": {
                            "content": "This API creates a collection of interactions in the Reltio Platform according to the JSON object definition. To create just one interaction using this API, specify one JSON object in the array.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "reltio",
                                "api",
                                ":tenantId",
                                "interactions"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "This parameter indicates the identifier of an interaction object in the source system",
                                        "type": "text/plain"
                                    },
                                    "key": "crosswalkValue",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "This parameter specifies if the response must contain the created objects",
                                        "type": "text/plain"
                                    },
                                    "key": "returnObjects",
                                    "value": "true"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                        "type": "text/plain"
                                    },
                                    "key": "options",
                                    "value": "sendHidden,sendHidden"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "disabled": false,
                                "description": {
                                    "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                    "type": "text/plain"
                                },
                                "key": "Source-System",
                                "value": "<string>"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"iruref93\": \"<string>\",\n          \"adipisicing9d\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"sit_f_f\": \"<string>\",\n          \"esta\": \"<string>\",\n          \"officia_\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"anim\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"minim_5c\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"adipisicing_6\": \"<string>\",\n          \"adipisicing09\": \"<string>\",\n          \"sunt1b5\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": -60173672,\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "a816c688-e222-4e19-bd46-4a1368d93ddd",
                            "name": "Successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"iruref93\": \"<string>\",\n          \"adipisicing9d\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"sit_f_f\": \"<string>\",\n          \"esta\": \"<string>\",\n          \"officia_\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"anim\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"minim_5c\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"adipisicing_6\": \"<string>\",\n          \"adipisicing09\": \"<string>\",\n          \"sunt1b5\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": -60173672,\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"index\": \"<integer>\",\n    \"errors\": {\n      \"severity\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorDetailMessage\": \"<string>\",\n      \"innerErrorData\": {\n        \"exception\": \"<string>\"\n      }\n    },\n    \"object\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"ut__e2\": \"<string>\",\n            \"nisi5b5\": \"<string>\",\n            \"officia7d\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"mollita63\": \"<string>\",\n            \"occaecat__7\": \"<string>\",\n            \"in_445\": \"<string>\",\n            \"Lorem0\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<long>\",\n      \"updatedTime\": \"<long>\",\n      \"attributes\": {},\n      \"members\": {},\n      \"timestamp\": -56865075,\n      \"uri\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"successful\": \"<boolean>\"\n  },\n  {\n    \"index\": \"<integer>\",\n    \"errors\": {\n      \"severity\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorDetailMessage\": \"<string>\",\n      \"innerErrorData\": {\n        \"exception\": \"<string>\"\n      }\n    },\n    \"object\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"irure73\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"culpaa77\": \"<string>\",\n            \"inc74\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<long>\",\n      \"updatedTime\": \"<long>\",\n      \"attributes\": {},\n      \"members\": {},\n      \"timestamp\": -18217264,\n      \"uri\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"successful\": \"<boolean>\"\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6ad6f2bc-401e-4c58-8fee-1ac0b9349360",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"iruref93\": \"<string>\",\n          \"adipisicing9d\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"sit_f_f\": \"<string>\",\n          \"esta\": \"<string>\",\n          \"officia_\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"anim\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"minim_5c\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"adipisicing_6\": \"<string>\",\n          \"adipisicing09\": \"<string>\",\n          \"sunt1b5\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": -60173672,\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "028c5f25-6e52-4d03-a334-e2ba4a73ce83",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"iruref93\": \"<string>\",\n          \"adipisicing9d\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"sit_f_f\": \"<string>\",\n          \"esta\": \"<string>\",\n          \"officia_\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"anim\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"minim_5c\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"adipisicing_6\": \"<string>\",\n          \"adipisicing09\": \"<string>\",\n          \"sunt1b5\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": -60173672,\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7be4909a-c1d1-4ea4-ae23-5a8ac48476d9",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"iruref93\": \"<string>\",\n          \"adipisicing9d\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"sit_f_f\": \"<string>\",\n          \"esta\": \"<string>\",\n          \"officia_\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"anim\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"minim_5c\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"adipisicing_6\": \"<string>\",\n          \"adipisicing09\": \"<string>\",\n          \"sunt1b5\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": -60173672,\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3eda0012-3807-41f9-9d77-65d0ccbbff21",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"iruref93\": \"<string>\",\n          \"adipisicing9d\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"sit_f_f\": \"<string>\",\n          \"esta\": \"<string>\",\n          \"officia_\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"anim\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"minim_5c\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"adipisicing_6\": \"<string>\",\n          \"adipisicing09\": \"<string>\",\n          \"sunt1b5\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": -60173672,\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "864ff945-5f41-44a0-9ed9-9a6961eb00f3",
                            "name": "Too many requests, please try later",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"iruref93\": \"<string>\",\n          \"adipisicing9d\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"sit_f_f\": \"<string>\",\n          \"esta\": \"<string>\",\n          \"officia_\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"anim\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"minim_5c\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"adipisicing_6\": \"<string>\",\n          \"adipisicing09\": \"<string>\",\n          \"sunt1b5\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": -60173672,\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Too Many Requests",
                            "code": 429,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "6b2e4d4e-89df-4ef3-a631-0d4ebc823644",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"iruref93\": \"<string>\",\n          \"adipisicing9d\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"sit_f_f\": \"<string>\",\n          \"esta\": \"<string>\",\n          \"officia_\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"anim\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"minim_5c\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"adipisicing_6\": \"<string>\",\n          \"adipisicing09\": \"<string>\",\n          \"sunt1b5\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": -60173672,\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0af4f115-910c-42a9-aeea-9917dfb66da4",
                            "name": "This status code could represent 2 possible scenarios. First, the 'Service Unavailable' scenario. Second, this status code is used when too many requests are being sent in-parallel and API backpressure mechanism was used to protect the platform. In both scenarios, an exponential backoff mechanism should be used to control the rate of requests sent to the server. ",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"iruref93\": \"<string>\",\n          \"adipisicing9d\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"sit_f_f\": \"<string>\",\n          \"esta\": \"<string>\",\n          \"officia_\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"anim\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"minim_5c\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"adipisicing_6\": \"<string>\",\n          \"adipisicing09\": \"<string>\",\n          \"sunt1b5\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": -60173672,\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3f51ae1f-4c6a-441a-9cf7-74e7a6b4c645",
                            "name": "The request consumes more resources than it is allowed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"iruref93\": \"<string>\",\n          \"adipisicing9d\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"sit_f_f\": \"<string>\",\n          \"esta\": \"<string>\",\n          \"officia_\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"anim\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"minim_5c\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"adipisicing_6\": \"<string>\",\n          \"adipisicing09\": \"<string>\",\n          \"sunt1b5\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": -60173672,\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Insufficient Storage (WebDAV) (RFC 4918)",
                            "code": 507,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ]
        },
        {
            "name": "Relationships",
            "description": "",
            "item": [
                {
                    "id": "4380e335-ff8e-4188-aebc-7872e592a954",
                    "name": "/services/reltio/api/:tenantId/relations",
                    "request": {
                        "name": "/services/reltio/api/:tenantId/relations",
                        "description": {
                            "content": "This API saves a collection of relations in the Reltio Platform according to the JSON object definition or to create just one relation using this API, specify one JSON object in the array. You can use the referenced <b>entityURI</b> or referenced entity crosswalk to describe the <b>startObject</b> and/or the <b>endObject</b>. <br>When a new relation is created with URIs for start and end objects, inconsistencies may appear if the relation is created with empty crosswalks inside the <b>startObject</b> and <b>endObject</b> sections. If the <b>connectRelationsToDefaultCrosswalk</b> property available in the physical configuration is enabled and then you create a relation, the <b>startObject</b> and <b>endObject</b> sections are filled with the default crosswalks automatically.</br> <br><b>Note:</b> A crosswalk with the source, which is equal to the value of the default crosswalk in the physical configuration (default value is <b>Reltio</b>), and <b>value=<entity_id></b> is considered as the default crosswalk.</br><br>If the <b>connectRelationsToDefaultCrosswalk</b> property is set to <b>true</b> when a relation is created with empty crosswalks for the start and end objects of the relation, the following rules are applied:<ul><li>If the start entity has a Reltio crosswalk with the same value as its ID, this crosswalk is used as the crosswalk for the start object in the relation. Else, a new Reltio crosswalk with the value equal to the entity ID is created. This new crosswalk is added to the winner contributor of the start entity and the start object of the relation is connected to this new Reltio crosswalk.</li><li>The behavior is the same for the end entity. If the end entity has a Reltio crosswalk with the same value as its ID, this crosswalk is used as the crosswalk for the end object in the relation. Else, a new Reltio crosswalk with the value equal to the entity ID is created. This new crosswalk is added to the winner contributor of the end entity and the end object of the relation is connected to this new Reltio crosswalk.</li></ul></br>",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "reltio",
                                "api",
                                ":tenantId",
                                "relations"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Specifies if the response should contain created relations. Default is true.",
                                        "type": "text/plain"
                                    },
                                    "key": "returnObjects",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                        "type": "text/plain"
                                    },
                                    "key": "options",
                                    "value": "updateAttributeUpdateDates,ignoreOverrideIgnorePinSetting"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"incididunt_0a\": \"<string>\",\n          \"in_e\": \"<string>\",\n          \"sed_45\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequat_69\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"cillum_850\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"nonb3\": \"<string>\",\n            \"non_e3\": \"<string>\",\n            \"Excepteur199\": \"<string>\",\n            \"tempor_a\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"commodo3c\": \"<string>\",\n            \"nisi_3\": \"<string>\",\n            \"in_e83\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"elit_b\": \"<string>\",\n            \"id4b\": \"<string>\",\n            \"sit69\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"nulla_3\": \"<string>\",\n            \"deseruntbb\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"sit_bd\": \"<string>\",\n          \"laborumfe\": \"<string>\",\n          \"Excepteur_c\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nostrud_8a\": \"<string>\",\n          \"cupidatat_3e\": \"<string>\",\n          \"amet3e7\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"cillumf2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"nona0c\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"sunt_9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"anim_ef0\": \"<string>\",\n            \"sit_1\": \"<string>\",\n            \"est_a7\": \"<string>\",\n            \"cillum_24\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"labore1\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"dolor_0\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "142d7daa-0f31-434c-995a-bc6df6354bd7",
                            "name": "Relationships are successfully saved",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "updateAttributeUpdateDates,ignoreOverrideIgnorePinSetting"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"incididunt_0a\": \"<string>\",\n          \"in_e\": \"<string>\",\n          \"sed_45\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequat_69\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"cillum_850\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"nonb3\": \"<string>\",\n            \"non_e3\": \"<string>\",\n            \"Excepteur199\": \"<string>\",\n            \"tempor_a\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"commodo3c\": \"<string>\",\n            \"nisi_3\": \"<string>\",\n            \"in_e83\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"elit_b\": \"<string>\",\n            \"id4b\": \"<string>\",\n            \"sit69\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"nulla_3\": \"<string>\",\n            \"deseruntbb\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"sit_bd\": \"<string>\",\n          \"laborumfe\": \"<string>\",\n          \"Excepteur_c\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nostrud_8a\": \"<string>\",\n          \"cupidatat_3e\": \"<string>\",\n          \"amet3e7\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"cillumf2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"nona0c\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"sunt_9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"anim_ef0\": \"<string>\",\n            \"sit_1\": \"<string>\",\n            \"est_a7\": \"<string>\",\n            \"cillum_24\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"labore1\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"dolor_0\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"index\": \"<integer>\",\n    \"errors\": {\n      \"severity\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorDetailMessage\": \"<string>\",\n      \"innerErrorData\": {\n        \"exception\": \"<string>\"\n      }\n    },\n    \"object\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"exercitation_de\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"dolor6\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<long>\",\n      \"updatedTime\": \"<long>\",\n      \"startEntityTO\": {},\n      \"endEntityTO\": {},\n      \"attributes\": {},\n      \"uri\": \"<string>\",\n      \"type\": \"<string>\",\n      \"startRefPinned\": \"<boolean>\",\n      \"analyticsAttributes\": {\n        \"mollit1_\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ]\n      },\n      \"endRefPinned\": \"<boolean>\",\n      \"endRefIgnored\": \"<boolean>\",\n      \"startRefIgnored\": \"<boolean>\",\n      \"refUpdatedBy\": \"<string>\",\n      \"refUpdatedTime\": \"<long>\",\n      \"refCommitTime\": \"<long>\",\n      \"startObject\": {\n        \"crosswalks\": [\n          {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"sourceTable\": \"<string>\",\n            \"url\": \"<string>\",\n            \"createDate\": \"<dateTime>\",\n            \"updateDate\": \"<dateTime>\",\n            \"reltioLoadDate\": \"<dateTime>\",\n            \"deleteDate\": \"<string>\",\n            \"crosswalkExternalInfo\": {\n              \"dtssInfo\": {\n                \"tenantId\": \"<string>\",\n                \"operationId\": \"<string>\",\n                \"matchReasons\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"updatedBy\": \"<string>\",\n                \"updatedTime\": \"<long>\",\n                \"status\": \"<string>\",\n                \"matchRuleUris\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              }\n            },\n            \"singleAttributeUpdateDates\": {\n              \"incididunta45\": \"<string>\"\n            },\n            \"attributes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dataProvider\": \"<boolean>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"sourceTable\": \"<string>\",\n            \"url\": \"<string>\",\n            \"createDate\": \"<dateTime>\",\n            \"updateDate\": \"<dateTime>\",\n            \"reltioLoadDate\": \"<dateTime>\",\n            \"deleteDate\": \"<string>\",\n            \"crosswalkExternalInfo\": {\n              \"dtssInfo\": {\n                \"tenantId\": \"<string>\",\n                \"operationId\": \"<string>\",\n                \"matchReasons\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"updatedBy\": \"<string>\",\n                \"updatedTime\": \"<long>\",\n                \"status\": \"<string>\",\n                \"matchRuleUris\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              }\n            },\n            \"singleAttributeUpdateDates\": {\n              \"dolore_11\": \"<string>\",\n              \"Ut08\": \"<string>\"\n            },\n            \"attributes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dataProvider\": \"<boolean>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"directionalLabel\": \"<string>\",\n        \"label\": \"<string>\",\n        \"objectURI\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      \"endObject\": {\n        \"crosswalks\": [\n          {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"sourceTable\": \"<string>\",\n            \"url\": \"<string>\",\n            \"createDate\": \"<dateTime>\",\n            \"updateDate\": \"<dateTime>\",\n            \"reltioLoadDate\": \"<dateTime>\",\n            \"deleteDate\": \"<string>\",\n            \"crosswalkExternalInfo\": {\n              \"dtssInfo\": {\n                \"tenantId\": \"<string>\",\n                \"operationId\": \"<string>\",\n                \"matchReasons\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"updatedBy\": \"<string>\",\n                \"updatedTime\": \"<long>\",\n                \"status\": \"<string>\",\n                \"matchRuleUris\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              }\n            },\n            \"singleAttributeUpdateDates\": {\n              \"sint_\": \"<string>\",\n              \"enim192\": \"<string>\"\n            },\n            \"attributes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dataProvider\": \"<boolean>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"sourceTable\": \"<string>\",\n            \"url\": \"<string>\",\n            \"createDate\": \"<dateTime>\",\n            \"updateDate\": \"<dateTime>\",\n            \"reltioLoadDate\": \"<dateTime>\",\n            \"deleteDate\": \"<string>\",\n            \"crosswalkExternalInfo\": {\n              \"dtssInfo\": {\n                \"tenantId\": \"<string>\",\n                \"operationId\": \"<string>\",\n                \"matchReasons\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"updatedBy\": \"<string>\",\n                \"updatedTime\": \"<long>\",\n                \"status\": \"<string>\",\n                \"matchRuleUris\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              }\n            },\n            \"singleAttributeUpdateDates\": {\n              \"minim_2f_\": \"<string>\"\n            },\n            \"attributes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dataProvider\": \"<boolean>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"directionalLabel\": \"<string>\",\n        \"label\": \"<string>\",\n        \"objectURI\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    \"successful\": \"<boolean>\"\n  },\n  {\n    \"index\": \"<integer>\",\n    \"errors\": {\n      \"severity\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorDetailMessage\": \"<string>\",\n      \"innerErrorData\": {\n        \"exception\": \"<string>\"\n      }\n    },\n    \"object\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"exercitation__4\": \"<string>\",\n            \"exercitation03\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"incididunt_b05\": \"<string>\",\n            \"velit_38c\": \"<string>\",\n            \"adipisicing_5__\": \"<string>\",\n            \"velitf\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<long>\",\n      \"updatedTime\": \"<long>\",\n      \"startEntityTO\": {},\n      \"endEntityTO\": {},\n      \"attributes\": {},\n      \"uri\": \"<string>\",\n      \"type\": \"<string>\",\n      \"startRefPinned\": \"<boolean>\",\n      \"analyticsAttributes\": {\n        \"sunt_cc\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ]\n      },\n      \"endRefPinned\": \"<boolean>\",\n      \"endRefIgnored\": \"<boolean>\",\n      \"startRefIgnored\": \"<boolean>\",\n      \"refUpdatedBy\": \"<string>\",\n      \"refUpdatedTime\": \"<long>\",\n      \"refCommitTime\": \"<long>\",\n      \"startObject\": {\n        \"crosswalks\": [\n          {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"sourceTable\": \"<string>\",\n            \"url\": \"<string>\",\n            \"createDate\": \"<dateTime>\",\n            \"updateDate\": \"<dateTime>\",\n            \"reltioLoadDate\": \"<dateTime>\",\n            \"deleteDate\": \"<string>\",\n            \"crosswalkExternalInfo\": {\n              \"dtssInfo\": {\n                \"tenantId\": \"<string>\",\n                \"operationId\": \"<string>\",\n                \"matchReasons\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"updatedBy\": \"<string>\",\n                \"updatedTime\": \"<long>\",\n                \"status\": \"<string>\",\n                \"matchRuleUris\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              }\n            },\n            \"singleAttributeUpdateDates\": {\n              \"utde\": \"<string>\"\n            },\n            \"attributes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dataProvider\": \"<boolean>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"sourceTable\": \"<string>\",\n            \"url\": \"<string>\",\n            \"createDate\": \"<dateTime>\",\n            \"updateDate\": \"<dateTime>\",\n            \"reltioLoadDate\": \"<dateTime>\",\n            \"deleteDate\": \"<string>\",\n            \"crosswalkExternalInfo\": {\n              \"dtssInfo\": {\n                \"tenantId\": \"<string>\",\n                \"operationId\": \"<string>\",\n                \"matchReasons\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"updatedBy\": \"<string>\",\n                \"updatedTime\": \"<long>\",\n                \"status\": \"<string>\",\n                \"matchRuleUris\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              }\n            },\n            \"singleAttributeUpdateDates\": {\n              \"aute_ab\": \"<string>\"\n            },\n            \"attributes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dataProvider\": \"<boolean>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"directionalLabel\": \"<string>\",\n        \"label\": \"<string>\",\n        \"objectURI\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      \"endObject\": {\n        \"crosswalks\": [\n          {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"sourceTable\": \"<string>\",\n            \"url\": \"<string>\",\n            \"createDate\": \"<dateTime>\",\n            \"updateDate\": \"<dateTime>\",\n            \"reltioLoadDate\": \"<dateTime>\",\n            \"deleteDate\": \"<string>\",\n            \"crosswalkExternalInfo\": {\n              \"dtssInfo\": {\n                \"tenantId\": \"<string>\",\n                \"operationId\": \"<string>\",\n                \"matchReasons\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"updatedBy\": \"<string>\",\n                \"updatedTime\": \"<long>\",\n                \"status\": \"<string>\",\n                \"matchRuleUris\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              }\n            },\n            \"singleAttributeUpdateDates\": {\n              \"dolore2aa\": \"<string>\"\n            },\n            \"attributes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dataProvider\": \"<boolean>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"sourceTable\": \"<string>\",\n            \"url\": \"<string>\",\n            \"createDate\": \"<dateTime>\",\n            \"updateDate\": \"<dateTime>\",\n            \"reltioLoadDate\": \"<dateTime>\",\n            \"deleteDate\": \"<string>\",\n            \"crosswalkExternalInfo\": {\n              \"dtssInfo\": {\n                \"tenantId\": \"<string>\",\n                \"operationId\": \"<string>\",\n                \"matchReasons\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"updatedBy\": \"<string>\",\n                \"updatedTime\": \"<long>\",\n                \"status\": \"<string>\",\n                \"matchRuleUris\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              }\n            },\n            \"singleAttributeUpdateDates\": {\n              \"adipisicing_3\": \"<string>\"\n            },\n            \"attributes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dataProvider\": \"<boolean>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"directionalLabel\": \"<string>\",\n        \"label\": \"<string>\",\n        \"objectURI\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    \"successful\": \"<boolean>\"\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b9ea2b63-4b5b-4aed-a5b6-a423353a4501",
                            "name": "Relationships aren't saved due to a reason provided in the error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "updateAttributeUpdateDates,ignoreOverrideIgnorePinSetting"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"incididunt_0a\": \"<string>\",\n          \"in_e\": \"<string>\",\n          \"sed_45\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequat_69\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"cillum_850\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"nonb3\": \"<string>\",\n            \"non_e3\": \"<string>\",\n            \"Excepteur199\": \"<string>\",\n            \"tempor_a\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"commodo3c\": \"<string>\",\n            \"nisi_3\": \"<string>\",\n            \"in_e83\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"elit_b\": \"<string>\",\n            \"id4b\": \"<string>\",\n            \"sit69\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"nulla_3\": \"<string>\",\n            \"deseruntbb\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"sit_bd\": \"<string>\",\n          \"laborumfe\": \"<string>\",\n          \"Excepteur_c\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nostrud_8a\": \"<string>\",\n          \"cupidatat_3e\": \"<string>\",\n          \"amet3e7\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"cillumf2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"nona0c\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"sunt_9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"anim_ef0\": \"<string>\",\n            \"sit_1\": \"<string>\",\n            \"est_a7\": \"<string>\",\n            \"cillum_24\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"labore1\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"dolor_0\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4222dc72-c67a-4e5b-998f-300bcf22e702",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "updateAttributeUpdateDates,ignoreOverrideIgnorePinSetting"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"incididunt_0a\": \"<string>\",\n          \"in_e\": \"<string>\",\n          \"sed_45\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequat_69\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"cillum_850\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"nonb3\": \"<string>\",\n            \"non_e3\": \"<string>\",\n            \"Excepteur199\": \"<string>\",\n            \"tempor_a\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"commodo3c\": \"<string>\",\n            \"nisi_3\": \"<string>\",\n            \"in_e83\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"elit_b\": \"<string>\",\n            \"id4b\": \"<string>\",\n            \"sit69\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"nulla_3\": \"<string>\",\n            \"deseruntbb\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"sit_bd\": \"<string>\",\n          \"laborumfe\": \"<string>\",\n          \"Excepteur_c\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nostrud_8a\": \"<string>\",\n          \"cupidatat_3e\": \"<string>\",\n          \"amet3e7\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"cillumf2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"nona0c\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"sunt_9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"anim_ef0\": \"<string>\",\n            \"sit_1\": \"<string>\",\n            \"est_a7\": \"<string>\",\n            \"cillum_24\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"labore1\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"dolor_0\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "55273d47-aa51-40e0-a0e0-862e3f24cb06",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "updateAttributeUpdateDates,ignoreOverrideIgnorePinSetting"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"incididunt_0a\": \"<string>\",\n          \"in_e\": \"<string>\",\n          \"sed_45\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequat_69\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"cillum_850\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"nonb3\": \"<string>\",\n            \"non_e3\": \"<string>\",\n            \"Excepteur199\": \"<string>\",\n            \"tempor_a\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"commodo3c\": \"<string>\",\n            \"nisi_3\": \"<string>\",\n            \"in_e83\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"elit_b\": \"<string>\",\n            \"id4b\": \"<string>\",\n            \"sit69\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"nulla_3\": \"<string>\",\n            \"deseruntbb\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"sit_bd\": \"<string>\",\n          \"laborumfe\": \"<string>\",\n          \"Excepteur_c\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nostrud_8a\": \"<string>\",\n          \"cupidatat_3e\": \"<string>\",\n          \"amet3e7\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"cillumf2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"nona0c\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"sunt_9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"anim_ef0\": \"<string>\",\n            \"sit_1\": \"<string>\",\n            \"est_a7\": \"<string>\",\n            \"cillum_24\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"labore1\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"dolor_0\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3a2febe2-2499-4da3-a3a0-850c395d3190",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "updateAttributeUpdateDates,ignoreOverrideIgnorePinSetting"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"incididunt_0a\": \"<string>\",\n          \"in_e\": \"<string>\",\n          \"sed_45\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequat_69\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"cillum_850\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"nonb3\": \"<string>\",\n            \"non_e3\": \"<string>\",\n            \"Excepteur199\": \"<string>\",\n            \"tempor_a\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"commodo3c\": \"<string>\",\n            \"nisi_3\": \"<string>\",\n            \"in_e83\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"elit_b\": \"<string>\",\n            \"id4b\": \"<string>\",\n            \"sit69\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"nulla_3\": \"<string>\",\n            \"deseruntbb\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"sit_bd\": \"<string>\",\n          \"laborumfe\": \"<string>\",\n          \"Excepteur_c\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nostrud_8a\": \"<string>\",\n          \"cupidatat_3e\": \"<string>\",\n          \"amet3e7\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"cillumf2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"nona0c\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"sunt_9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"anim_ef0\": \"<string>\",\n            \"sit_1\": \"<string>\",\n            \"est_a7\": \"<string>\",\n            \"cillum_24\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"labore1\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"dolor_0\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "040c4297-4d21-4c5a-9251-0dd8e3927c54",
                            "name": "Too many requests, please try later",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "updateAttributeUpdateDates,ignoreOverrideIgnorePinSetting"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"incididunt_0a\": \"<string>\",\n          \"in_e\": \"<string>\",\n          \"sed_45\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequat_69\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"cillum_850\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"nonb3\": \"<string>\",\n            \"non_e3\": \"<string>\",\n            \"Excepteur199\": \"<string>\",\n            \"tempor_a\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"commodo3c\": \"<string>\",\n            \"nisi_3\": \"<string>\",\n            \"in_e83\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"elit_b\": \"<string>\",\n            \"id4b\": \"<string>\",\n            \"sit69\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"nulla_3\": \"<string>\",\n            \"deseruntbb\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"sit_bd\": \"<string>\",\n          \"laborumfe\": \"<string>\",\n          \"Excepteur_c\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nostrud_8a\": \"<string>\",\n          \"cupidatat_3e\": \"<string>\",\n          \"amet3e7\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"cillumf2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"nona0c\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"sunt_9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"anim_ef0\": \"<string>\",\n            \"sit_1\": \"<string>\",\n            \"est_a7\": \"<string>\",\n            \"cillum_24\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"labore1\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"dolor_0\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Too Many Requests",
                            "code": 429,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "73bc6bd0-8988-4ddb-a76d-3d57e394f3dd",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "updateAttributeUpdateDates,ignoreOverrideIgnorePinSetting"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"incididunt_0a\": \"<string>\",\n          \"in_e\": \"<string>\",\n          \"sed_45\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequat_69\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"cillum_850\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"nonb3\": \"<string>\",\n            \"non_e3\": \"<string>\",\n            \"Excepteur199\": \"<string>\",\n            \"tempor_a\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"commodo3c\": \"<string>\",\n            \"nisi_3\": \"<string>\",\n            \"in_e83\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"elit_b\": \"<string>\",\n            \"id4b\": \"<string>\",\n            \"sit69\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"nulla_3\": \"<string>\",\n            \"deseruntbb\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"sit_bd\": \"<string>\",\n          \"laborumfe\": \"<string>\",\n          \"Excepteur_c\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nostrud_8a\": \"<string>\",\n          \"cupidatat_3e\": \"<string>\",\n          \"amet3e7\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"cillumf2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"nona0c\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"sunt_9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"anim_ef0\": \"<string>\",\n            \"sit_1\": \"<string>\",\n            \"est_a7\": \"<string>\",\n            \"cillum_24\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"labore1\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"dolor_0\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "02af05e7-aa62-44dd-aa51-95756477a413",
                            "name": "This status code could represent 2 possible scenarios. First, the 'Service Unavailable' scenario. Second, this status code is used when too many requests are being sent in-parallel and API backpressure mechanism was used to protect the platform. In both scenarios, an exponential backoff mechanism should be used to control the rate of requests sent to the server. ",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "updateAttributeUpdateDates,ignoreOverrideIgnorePinSetting"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"incididunt_0a\": \"<string>\",\n          \"in_e\": \"<string>\",\n          \"sed_45\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequat_69\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"cillum_850\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"nonb3\": \"<string>\",\n            \"non_e3\": \"<string>\",\n            \"Excepteur199\": \"<string>\",\n            \"tempor_a\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"commodo3c\": \"<string>\",\n            \"nisi_3\": \"<string>\",\n            \"in_e83\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"elit_b\": \"<string>\",\n            \"id4b\": \"<string>\",\n            \"sit69\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"nulla_3\": \"<string>\",\n            \"deseruntbb\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"sit_bd\": \"<string>\",\n          \"laborumfe\": \"<string>\",\n          \"Excepteur_c\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nostrud_8a\": \"<string>\",\n          \"cupidatat_3e\": \"<string>\",\n          \"amet3e7\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"cillumf2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"nona0c\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"sunt_9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"anim_ef0\": \"<string>\",\n            \"sit_1\": \"<string>\",\n            \"est_a7\": \"<string>\",\n            \"cillum_24\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"labore1\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"dolor_0\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b4270f7d-b97c-4a5e-a6f6-b4c7b9da9c46",
                            "name": "The request consumes more resources than it is allowed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "updateAttributeUpdateDates,ignoreOverrideIgnorePinSetting"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"incididunt_0a\": \"<string>\",\n          \"in_e\": \"<string>\",\n          \"sed_45\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequat_69\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"cillum_850\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"nonb3\": \"<string>\",\n            \"non_e3\": \"<string>\",\n            \"Excepteur199\": \"<string>\",\n            \"tempor_a\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"commodo3c\": \"<string>\",\n            \"nisi_3\": \"<string>\",\n            \"in_e83\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"elit_b\": \"<string>\",\n            \"id4b\": \"<string>\",\n            \"sit69\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"nulla_3\": \"<string>\",\n            \"deseruntbb\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"sit_bd\": \"<string>\",\n          \"laborumfe\": \"<string>\",\n          \"Excepteur_c\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nostrud_8a\": \"<string>\",\n          \"cupidatat_3e\": \"<string>\",\n          \"amet3e7\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"cillumf2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"nona0c\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"sunt_9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"anim_ef0\": \"<string>\",\n            \"sit_1\": \"<string>\",\n            \"est_a7\": \"<string>\",\n            \"cillum_24\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"labore1\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"dolor_0\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Insufficient Storage (WebDAV) (RFC 4918)",
                            "code": 507,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ]
        },
        {
            "name": "Data Load Job",
            "description": "",
            "item": [
                {
                    "id": "6b272809-a1c3-4f26-960a-ab73f17ce443",
                    "name": "/services/dataloader/api/:tenantId/_mapping",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/_mapping",
                        "description": {
                            "content": "Creates a new mapping for an object type. For creating the mapping, you must provide details for 'object type', 'summary', 'name', and 'object type URI'",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "_mapping"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "2954e3f2-f896-4dce-afa2-d7b1bf367361",
                            "name": "Mapping is created successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c7a1bfb3-5ce9-44a3-aa6b-5020dcc297c4",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e0078d30-1cb2-46b4-a143-6f4c834a9041",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2763c3e1-84b9-4b09-afdf-e4feed8555a5",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5648ae60-e62d-4b79-adce-6674e70b6a96",
                            "name": "The resource requested was not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "825c586b-e5e8-4c64-b545-7eac63c0ebf9",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "7ac13217-6da3-401c-b509-6b7934c4b3ad",
                    "name": "/services/dataloader/api/:tenantId/_mapping/:mappingId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/_mapping/:mappingId",
                        "description": {
                            "content": "Retrieves the existing mapping details using an ID",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "_mapping",
                                ":mappingId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "If true, API response includes the job definition IDs associated with the mapping",
                                        "type": "text/plain"
                                    },
                                    "key": "includeProjects",
                                    "value": "<boolean>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "mappingId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Defines the ID of the mapping for which details are to be retrieved",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "c796d3cd-8961-49c4-958c-a276b36a3616",
                            "name": "The details for mapping are retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If true, API response includes the job definition IDs associated with the mapping",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e7a62593-67c9-4fc9-a224-a240f696a280",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If true, API response includes the job definition IDs associated with the mapping",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1b426686-5ecd-41ee-889c-b2fbd5befc99",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If true, API response includes the job definition IDs associated with the mapping",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b405a0d1-437b-42b8-82d4-6da1dc6cb5d8",
                            "name": "Check your privileges to do this operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If true, API response includes the job definition IDs associated with the mapping",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3627d97c-f645-40bf-a266-8068345fc38a",
                            "name": "Resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If true, API response includes the job definition IDs associated with the mapping",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c478b523-8235-45d2-a1f0-dce4fc2ef307",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If true, API response includes the job definition IDs associated with the mapping",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "3b8bad59-03ea-403a-9955-6d0bb32e7fbe",
                    "name": "/services/dataloader/api/:tenantId/_mapping/:mappingId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/_mapping/:mappingId",
                        "description": {
                            "content": "Updates an existing mapping. You can add new values for a field or modify the existing values. Before saving the updates, the mapping details are validated based on the business rules",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "_mapping",
                                ":mappingId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "mappingId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the mapping for which the details are to be updated",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "ab3c1d12-88e4-440d-88b3-c56b0f10fa59",
                            "name": "Mapping is updated successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "47ac7712-1614-496b-af16-7d2e4cfeaf3b",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d0c961bf-7a08-476b-9b19-92e2426b6afe",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "fecfa4c9-87d0-4369-967b-b77877f5b6b8",
                            "name": "Check your privileges to do this operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c3fd77e0-a916-4851-aa3b-d1421b10f67c",
                            "name": "Resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5dc42709-2393-4f78-a1f1-23dc978c4d78",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "55e063bc-6951-4915-a506-dfdb2d4da4a9",
                    "name": "/services/dataloader/api/:tenantId/_mapping/:mappingId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/_mapping/:mappingId",
                        "description": {
                            "content": "Deletes an existing mapping if all the business rules are met. The mapping cannot be deleted if it is being used by any job definition",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "_mapping",
                                ":mappingId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "mappingId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the mapping that must be deleted",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "13ba0067-874c-436f-9b52-775c5c268e55",
                            "name": "Mapping is deleted successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "044ed225-d2ae-40f6-b892-3fa3abd2df24",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "06089bd9-37b4-44a7-be5f-a72f62a0dbe0",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2b1a8a76-a174-405e-8cd9-ad71adafd586",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "279f4676-7c22-494e-b4c5-ac7cb5ce786a",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6fb7d8f0-b331-4289-b6cb-c5af589458b2",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "22af3531-61e2-43ab-b6f2-132143ae1443",
                            "name": "Service Unavailable",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "d983d71b-8859-4a3d-9dad-d4d1fba3a924",
                    "name": "/services/dataloader/api/:tenantId/_mappings",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/_mappings",
                        "description": {
                            "content": "Retrieve the details of all mappings for a tenant matching the filter criteria",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "_mappings"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Object type URL for which mappings must be retrieved",
                                        "type": "text/plain"
                                    },
                                    "key": "entityType",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Specify the user name that must be included in the 'equals' and 'not equals' operations while retrieving the mapping details.<br> <b>For example</b>: <li>'createdBy=username@reltio.com' - returns the list of mappings created by the specified user for the tenant</li> <li>'createdBy=username@reltio.com:notequals' - returns the list of mappings which are not created by the specified user for the tenant</li>",
                                        "type": "text/plain"
                                    },
                                    "key": "createdBy",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Long value of date. API returns all the mappings created on or after the specified date",
                                        "type": "text/plain"
                                    },
                                    "key": "creationDate",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                        "type": "text/plain"
                                    },
                                    "key": "page",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Number of objects that need to be returned with a paged response",
                                        "type": "text/plain"
                                    },
                                    "key": "size",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the mappings in the ascending order of Tenant ID, 'sort=tenantId:desc' - sorts the mapping in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,objectTypeUri' - sorts the API response in the descending order of Tenant ID and 'objectTypeUris' are used for second order sorting",
                                        "type": "text/plain"
                                    },
                                    "key": "sort",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "If 'true', API response includes the job definitions IDs",
                                        "type": "text/plain"
                                    },
                                    "key": "includeProjects",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "d9698a58-2b42-4369-b23d-600bbab12c91",
                            "name": "Mapping details matching criteria are retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mappings"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Object type URL for which mappings must be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "entityType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specify the user name that must be included in the 'equals' and 'not equals' operations while retrieving the mapping details.<br> <b>For example</b>: <li>'createdBy=username@reltio.com' - returns the list of mappings created by the specified user for the tenant</li> <li>'createdBy=username@reltio.com:notequals' - returns the list of mappings which are not created by the specified user for the tenant</li>",
                                                "type": "text/plain"
                                            },
                                            "key": "createdBy",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Long value of date. API returns all the mappings created on or after the specified date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the mappings in the ascending order of Tenant ID, 'sort=tenantId:desc' - sorts the mapping in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,objectTypeUri' - sorts the API response in the descending order of Tenant ID and 'objectTypeUris' are used for second order sorting",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'true', API response includes the job definitions IDs",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f6b0f526-4334-4d0b-93da-4bfe28dbdc36",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mappings"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Object type URL for which mappings must be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "entityType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specify the user name that must be included in the 'equals' and 'not equals' operations while retrieving the mapping details.<br> <b>For example</b>: <li>'createdBy=username@reltio.com' - returns the list of mappings created by the specified user for the tenant</li> <li>'createdBy=username@reltio.com:notequals' - returns the list of mappings which are not created by the specified user for the tenant</li>",
                                                "type": "text/plain"
                                            },
                                            "key": "createdBy",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Long value of date. API returns all the mappings created on or after the specified date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the mappings in the ascending order of Tenant ID, 'sort=tenantId:desc' - sorts the mapping in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,objectTypeUri' - sorts the API response in the descending order of Tenant ID and 'objectTypeUris' are used for second order sorting",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'true', API response includes the job definitions IDs",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "822b5c7d-c44b-4b81-9759-aee603466653",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mappings"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Object type URL for which mappings must be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "entityType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specify the user name that must be included in the 'equals' and 'not equals' operations while retrieving the mapping details.<br> <b>For example</b>: <li>'createdBy=username@reltio.com' - returns the list of mappings created by the specified user for the tenant</li> <li>'createdBy=username@reltio.com:notequals' - returns the list of mappings which are not created by the specified user for the tenant</li>",
                                                "type": "text/plain"
                                            },
                                            "key": "createdBy",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Long value of date. API returns all the mappings created on or after the specified date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the mappings in the ascending order of Tenant ID, 'sort=tenantId:desc' - sorts the mapping in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,objectTypeUri' - sorts the API response in the descending order of Tenant ID and 'objectTypeUris' are used for second order sorting",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'true', API response includes the job definitions IDs",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "509ecfe1-50c3-4ffa-9fa8-c917ee711b83",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mappings"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Object type URL for which mappings must be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "entityType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specify the user name that must be included in the 'equals' and 'not equals' operations while retrieving the mapping details.<br> <b>For example</b>: <li>'createdBy=username@reltio.com' - returns the list of mappings created by the specified user for the tenant</li> <li>'createdBy=username@reltio.com:notequals' - returns the list of mappings which are not created by the specified user for the tenant</li>",
                                                "type": "text/plain"
                                            },
                                            "key": "createdBy",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Long value of date. API returns all the mappings created on or after the specified date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the mappings in the ascending order of Tenant ID, 'sort=tenantId:desc' - sorts the mapping in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,objectTypeUri' - sorts the API response in the descending order of Tenant ID and 'objectTypeUris' are used for second order sorting",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'true', API response includes the job definitions IDs",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4a3c7467-611c-4ff9-86c4-c669f37b0140",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mappings"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Object type URL for which mappings must be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "entityType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specify the user name that must be included in the 'equals' and 'not equals' operations while retrieving the mapping details.<br> <b>For example</b>: <li>'createdBy=username@reltio.com' - returns the list of mappings created by the specified user for the tenant</li> <li>'createdBy=username@reltio.com:notequals' - returns the list of mappings which are not created by the specified user for the tenant</li>",
                                                "type": "text/plain"
                                            },
                                            "key": "createdBy",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Long value of date. API returns all the mappings created on or after the specified date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the mappings in the ascending order of Tenant ID, 'sort=tenantId:desc' - sorts the mapping in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,objectTypeUri' - sorts the API response in the descending order of Tenant ID and 'objectTypeUris' are used for second order sorting",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'true', API response includes the job definitions IDs",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9d7e51c6-2342-4a4b-9eed-f519b9e5a949",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mappings"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Object type URL for which mappings must be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "entityType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specify the user name that must be included in the 'equals' and 'not equals' operations while retrieving the mapping details.<br> <b>For example</b>: <li>'createdBy=username@reltio.com' - returns the list of mappings created by the specified user for the tenant</li> <li>'createdBy=username@reltio.com:notequals' - returns the list of mappings which are not created by the specified user for the tenant</li>",
                                                "type": "text/plain"
                                            },
                                            "key": "createdBy",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Long value of date. API returns all the mappings created on or after the specified date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the mappings in the ascending order of Tenant ID, 'sort=tenantId:desc' - sorts the mapping in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,objectTypeUri' - sorts the API response in the descending order of Tenant ID and 'objectTypeUris' are used for second order sorting",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'true', API response includes the job definitions IDs",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "a12f9255-0f25-46a2-95df-bd7d2769944d",
                    "name": "/services/dataloader/api/:tenantId/configuration/_limits",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/configuration/_limits",
                        "description": {
                            "content": "Retrieves all the existing limits for a tenant matching the filter criteria",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "configuration",
                                "_limits"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Name of the environment used to filter and get limits. ",
                                        "type": "text/plain"
                                    },
                                    "key": "environment",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                        "type": "text/plain"
                                    },
                                    "key": "page",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Number of objects that need to be returned with a paged response",
                                        "type": "text/plain"
                                    },
                                    "key": "size",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the source details in the ascending order of tenantId, 'sort=tenantId:desc' - sorts the source details in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,environment:desc' - sorts the API response in the descending order of tenantId and 'environment'",
                                        "type": "text/plain"
                                    },
                                    "key": "sort",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "b00710de-fe01-49d6-9824-cc6fa7137d57",
                            "name": "All existing limits are retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the environment used to filter and get limits. ",
                                                "type": "text/plain"
                                            },
                                            "key": "environment",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the source details in the ascending order of tenantId, 'sort=tenantId:desc' - sorts the source details in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,environment:desc' - sorts the API response in the descending order of tenantId and 'environment'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"environment\": \"<string>\",\n    \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n    \"limitType\": \"STRING\",\n    \"value\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<integer>\",\n    \"tenantId\": \"<string>\"\n  },\n  {\n    \"environment\": \"<string>\",\n    \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n    \"limitType\": \"BOOLEAN\",\n    \"value\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<integer>\",\n    \"tenantId\": \"<string>\"\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9aefb4d8-52f7-44e1-b4ae-f2c3a1b4ffed",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the environment used to filter and get limits. ",
                                                "type": "text/plain"
                                            },
                                            "key": "environment",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the source details in the ascending order of tenantId, 'sort=tenantId:desc' - sorts the source details in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,environment:desc' - sorts the API response in the descending order of tenantId and 'environment'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8562abb0-01b1-4aa3-bfcd-73404db48461",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the environment used to filter and get limits. ",
                                                "type": "text/plain"
                                            },
                                            "key": "environment",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the source details in the ascending order of tenantId, 'sort=tenantId:desc' - sorts the source details in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,environment:desc' - sorts the API response in the descending order of tenantId and 'environment'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "90674c1c-7815-4dcd-90cd-45d12652dd89",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the environment used to filter and get limits. ",
                                                "type": "text/plain"
                                            },
                                            "key": "environment",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the source details in the ascending order of tenantId, 'sort=tenantId:desc' - sorts the source details in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,environment:desc' - sorts the API response in the descending order of tenantId and 'environment'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6f0ff63d-7891-4af8-8032-314ad3fff257",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the environment used to filter and get limits. ",
                                                "type": "text/plain"
                                            },
                                            "key": "environment",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the source details in the ascending order of tenantId, 'sort=tenantId:desc' - sorts the source details in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,environment:desc' - sorts the API response in the descending order of tenantId and 'environment'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f19b0b9d-f4dc-47d8-9ede-5072bb596217",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the environment used to filter and get limits. ",
                                                "type": "text/plain"
                                            },
                                            "key": "environment",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the source details in the ascending order of tenantId, 'sort=tenantId:desc' - sorts the source details in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,environment:desc' - sorts the API response in the descending order of tenantId and 'environment'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "b5e5de20-aa9c-4a38-80f1-30014ce1fda1",
                    "name": "/services/dataloader/api/:tenantId/configuration/_limits",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/configuration/_limits",
                        "description": {
                            "content": "Creates limits. While creating limits, you must provide the limit name, value, and datatype",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "configuration",
                                "_limits"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"BOOLEAN\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "d69f896d-07a8-4141-b55b-591334581682",
                            "name": "Resource is created successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"BOOLEAN\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"BOOLEAN\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9623ab31-86ad-46da-b7f7-b164c5a38936",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"BOOLEAN\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "56c8d1ed-6e2c-49a8-8b0f-1b2822941ea1",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"BOOLEAN\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "57c053c4-828a-42b6-8a96-3961471acb36",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"BOOLEAN\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "54944748-710f-4df3-83cb-e23374513095",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"BOOLEAN\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c8482be9-d331-4b43-8eaf-50c0d93f239f",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"BOOLEAN\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "ba65e63b-b2e4-41ce-ace3-7cc119e27e44",
                    "name": "/services/dataloader/api/:tenantId/configuration/_limits/:id",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/configuration/_limits/:id",
                        "description": {
                            "content": "Retrieves the details of a limit",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "configuration",
                                "_limits",
                                ":id"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "id",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the existing limit for which the details must be retrieved",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "4f71675a-885f-46fa-be77-34ab7f862845",
                            "name": "Limit retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"BOOLEAN\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0ce6b0d4-0e9b-4aa8-b83a-19de59430620",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "32c10f63-b9c0-4fc9-a644-f59d86648c69",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d328c8b0-e93d-415f-8bdf-430da7b68636",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d8547033-91ee-43cf-a730-b2839839c75d",
                            "name": "Resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3d3dcb05-5345-4142-8852-81ec35c6fc6e",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "5ef47f00-3172-44a6-ae20-df2f1a8dae8c",
                    "name": "/services/dataloader/api/:tenantId/configuration/_limits/:id",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/configuration/_limits/:id",
                        "description": {
                            "content": "Updates the existing limit. The updated limits are used while creating the new job",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "configuration",
                                "_limits",
                                ":id"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "id",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the existing limit for which the details must be updated",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"BOOLEAN\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "971cb308-ee34-43b8-a4b9-26866082739d",
                            "name": "Limit updated successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"BOOLEAN\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"BOOLEAN\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "dd5a0559-e74f-44c6-ae3e-a4e81e4f83e8",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"BOOLEAN\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d264e352-9e22-4043-af5e-aff2ea9c3597",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"BOOLEAN\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c11e539c-ea40-4b1a-80b8-5deca3df12e1",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"BOOLEAN\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "383b27b7-96e0-45ca-946e-e9446a232fcb",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"BOOLEAN\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f9a8e299-8c46-4fb3-b1fa-ed02573f612c",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"BOOLEAN\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "9efab955-6b30-4c8b-bce9-97a9f952c3c2",
                    "name": "/services/dataloader/api/:tenantId/configuration/_limits/:id",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/configuration/_limits/:id",
                        "description": {
                            "content": "Delete an existing limit using the ID",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "configuration",
                                "_limits",
                                ":id"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "id",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the existing limit for which the details must be deleted",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "ce48c428-00dc-4a39-bf72-6d67991a1298",
                            "name": "Limit deleted successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "6b03c9da-aad6-4a53-b3b2-20fb5b74a094",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1d20ee47-5c17-4354-b184-1117366aa23b",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8f396573-d02d-4357-8ec5-106df3a7cf68",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7254504c-69a6-4ec4-8d17-c618286f9a52",
                            "name": "Resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "52246c96-130e-43e7-a64a-9cc2b84afaa9",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "9d854ff7-d02d-44f9-9077-0ce42ed1f825",
                    "name": "/services/dataloader/api/:tenantId/project",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project",
                        "description": {
                            "content": "Creates a new job definition by using existing mapping and storage details",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"SFTP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "c6b2290e-8716-44dd-832b-01f1261978fc",
                            "name": "Job definition is created successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"SFTP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"SFTP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1366e181-8396-46b1-a416-ae7fd596a394",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"SFTP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2afaa17d-2e63-40b6-97dd-def9367d7b05",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"SFTP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1b017e00-95e8-4029-9808-735147f64719",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"SFTP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "16940b84-9ec5-4e87-bbb7-153eab386a36",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"SFTP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "47ee075d-38f2-40c2-a20b-617346957402",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"SFTP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "f62cc0b2-a37a-4f9c-af9c-a28eefb4a2f0",
                    "name": "/services/dataloader/api/:tenantId/project/data/source",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/data/source",
                        "description": {
                            "content": "Retrieves existing source details for a tenant matching the filter criteria",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "data",
                                "source"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                        "type": "text/plain"
                                    },
                                    "key": "page",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Number of objects that need to be returned with a paged response",
                                        "type": "text/plain"
                                    },
                                    "key": "size",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=sourcePath' - sorts the source details in the ascending order of sourcePath, 'sort=sourcePath:desc' - sorts the source details in the descending order of sourcePath <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=sourcePath:desc,bucketName' - sorts the API response in the descending order of sourcePath and 'bucketName'",
                                        "type": "text/plain"
                                    },
                                    "key": "sort",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "534b2e53-361d-4b4f-a2ee-45d8513a7706",
                            "name": "Source details are returned successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=sourcePath' - sorts the source details in the ascending order of sourcePath, 'sort=sourcePath:desc' - sorts the source details in the descending order of sourcePath <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=sourcePath:desc,bucketName' - sorts the API response in the descending order of sourcePath and 'bucketName'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"AZURE\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"AZURE\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "357854c4-04c3-4665-8078-6a054788f91f",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=sourcePath' - sorts the source details in the ascending order of sourcePath, 'sort=sourcePath:desc' - sorts the source details in the descending order of sourcePath <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=sourcePath:desc,bucketName' - sorts the API response in the descending order of sourcePath and 'bucketName'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "917e110c-509d-4eda-9381-aa3e4d384caa",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=sourcePath' - sorts the source details in the ascending order of sourcePath, 'sort=sourcePath:desc' - sorts the source details in the descending order of sourcePath <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=sourcePath:desc,bucketName' - sorts the API response in the descending order of sourcePath and 'bucketName'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1a746419-7d72-4219-97e1-f6c3462ca953",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=sourcePath' - sorts the source details in the ascending order of sourcePath, 'sort=sourcePath:desc' - sorts the source details in the descending order of sourcePath <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=sourcePath:desc,bucketName' - sorts the API response in the descending order of sourcePath and 'bucketName'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "396d95fa-c6fd-482c-8526-ed92873cbf79",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=sourcePath' - sorts the source details in the ascending order of sourcePath, 'sort=sourcePath:desc' - sorts the source details in the descending order of sourcePath <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=sourcePath:desc,bucketName' - sorts the API response in the descending order of sourcePath and 'bucketName'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e0fac5fa-5e0d-4057-a736-863965d860ef",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=sourcePath' - sorts the source details in the ascending order of sourcePath, 'sort=sourcePath:desc' - sorts the source details in the descending order of sourcePath <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=sourcePath:desc,bucketName' - sorts the API response in the descending order of sourcePath and 'bucketName'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "3f9a0eb8-dd60-440c-aded-5b932a126412",
                    "name": "/services/dataloader/api/:tenantId/project/data/source",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/data/source",
                        "description": {
                            "content": "Checks whether a valid file exists for the provided source information before creating a new source. While creating a source, you must provide all the mandatory information",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "data",
                                "source"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "b278536b-1cea-4371-aaef-1d975ffc9aa5",
                            "name": "Source details are created successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "756bdd66-1e3e-42ce-8d92-e701d6e20b2e",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9a012971-41ba-4151-a316-c6e5142ff142",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a096dc74-630f-4e74-b9c0-4085e6738a9e",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "def9540a-3e47-4fdd-a98f-a8f9733bae68",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "94d233e0-6dac-4f9e-88c2-4e37e5b26325",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "e46710de-287e-4cd4-a707-6abe0709c9dd",
                    "name": "/services/dataloader/api/:tenantId/project/data/source/:sourceId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/data/source/:sourceId",
                        "description": {
                            "content": "Retrieves the existing source details using the ID",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "data",
                                "source",
                                ":sourceId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "sourceId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Source ID for which the details must be retrieved",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "b11fd41c-4b6e-4ff6-ad70-ac46489517bf",
                            "name": "Returns the existing source details",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "085483e7-c839-42ae-847f-67ddd9321b04",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0cc84260-ebf8-4f66-a7ef-277ddd99dc91",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "90e32e8f-40f3-4b3e-8243-3eed5a4e50e5",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "db47f22a-bdd2-4232-afb4-5835a7345cfd",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "379dfa36-5916-4b6b-9382-0f8a542e2438",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "67f8aef3-58ed-4bed-8241-ddcbbd3e9a15",
                    "name": "/services/dataloader/api/:tenantId/project/data/source/:sourceId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/data/source/:sourceId",
                        "description": {
                            "content": "Updates the existing source with the details added from the request",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "data",
                                "source",
                                ":sourceId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "sourceId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Source ID for which the details must be updated",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "1b361471-d619-45c5-9129-549d50e7910a",
                            "name": "Storage details are updated successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "825bbdd2-0c04-4c32-85d6-8c9b710ff68b",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b7889c53-ee7c-459d-a374-c449f5a7da81",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "326383b3-3c26-488e-bf42-379debe3daaf",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "fa7048a5-97c3-424b-acae-efaf3406acb7",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "66c32bd6-a960-4aa4-9347-5b16ef9f3e75",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "c8a7f9b4-0e42-419d-aca0-0d341f423a32",
                    "name": "/services/dataloader/api/:tenantId/project/data/source/:sourceId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/data/source/:sourceId",
                        "description": {
                            "content": "Deletes the source details using the specified ID if it is not already used by any job definitions",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "data",
                                "source",
                                ":sourceId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "sourceId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Source ID for which the source details must be deleted",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "1e16caf1-e634-44d1-875c-04af9aef1fec",
                            "name": "Returns the existing source details",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "bdc85e9e-bcb8-4487-ab55-30c9a090923f",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8b82774f-416e-4424-a6f2-74d7d5af7100",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "fffc8c45-8aec-4ec4-b944-aa1ee8a441b7",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "072d3dd6-2afd-4428-9b6a-eecf9af7bd30",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a7ab7e2c-1bb5-4017-ae13-e23b3f5abadf",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "60d81b54-d7a5-416d-94ee-549fd2b02a05",
                    "name": "/services/dataloader/api/:tenantId/project/job/:jobId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/job/:jobId",
                        "description": {
                            "content": "Retrieve the existing job detail using the ID",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "job",
                                ":jobId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "jobId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job ID to retrieve",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "6f31548e-bbe3-4b18-8c36-a1d553bfd22f",
                            "name": "Job retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"DATAFLOW_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"UPLOADED\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6a56f4f9-2702-4046-86b6-8c2ebbe7dc09",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e3bb0c3b-d22a-46d8-a611-daef5dea5f25",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7cb7681a-675b-49b0-9bbd-424c0db54098",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a088cb30-4372-43f5-9131-cfd4ef66d468",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2cd74830-8936-4d05-b29b-e50f54ff71e7",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "e18e02cf-9f86-43a6-bd25-2e2842b9f93d",
                    "name": "/services/dataloader/api/:tenantId/project/job/:jobId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/job/:jobId",
                        "description": {
                            "content": "Updates the existing job by merging the existing details with the updated information in the request body",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "job",
                                ":jobId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "jobId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job ID to update",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"DATAFLOW_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"UPLOADED\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "7be47a1e-2c16-4af6-85b5-041d35e7ec71",
                            "name": "Job updated successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"DATAFLOW_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"UPLOADED\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"DATAFLOW_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"UPLOADED\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e9738391-7f21-4b29-b8d5-0a7a12113b47",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"DATAFLOW_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"UPLOADED\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ee02e405-4100-4b63-becf-6971e495ac6a",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"DATAFLOW_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"UPLOADED\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f9fc4078-552e-4d72-994e-a924c6635142",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"DATAFLOW_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"UPLOADED\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f7ac4c39-a3b9-4978-8ee5-88046a241219",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"DATAFLOW_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"UPLOADED\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "28279e66-1da1-4cdb-88a0-04749b9755e1",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"DATAFLOW_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"UPLOADED\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "2b16f0d3-dce5-4c63-873a-c2a4b92780f8",
                    "name": "/services/dataloader/api/:tenantId/project/job/:jobId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/job/:jobId",
                        "description": {
                            "content": "Deletes the job with the status marked as completed",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "job",
                                ":jobId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "jobId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job ID to delete",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "d0255518-0536-4524-8c29-9d00b0ab3d3c",
                            "name": "Job deleted successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "02908f96-d13f-4a5e-8899-6d0f838cd9ae",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "cf9292df-3015-465e-930a-444bfb990a55",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5ac03687-5d51-4ed8-adde-1b7aa8a07803",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1a04e96e-caa5-416a-9ad7-99bac109fe94",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3933dd7d-ec83-49e9-b8b4-757cc6ecf879",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "a969e740-da83-403c-9988-ce546aa4f72e",
                    "name": "/services/dataloader/api/:tenantId/project/job/:jobId/_resume",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/job/:jobId/_resume",
                        "description": {
                            "content": "Resumes the job stuck with no progress",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "job",
                                ":jobId",
                                "_resume"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "jobId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job ID to resume",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "687e23da-029f-4fa5-bb72-38d0a7262bb5",
                            "name": "Request to resume the job is accepted",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_resume"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Accepted",
                            "code": 202,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "6dac58bd-e81d-4615-9417-1394b10f9454",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_resume"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "d47de680-dc79-48e4-98e7-45a856b1958e",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_resume"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"error\": \"access_denied\",\n    \"error_description\": \"Access is denied\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "648cbba2-346b-4f8b-ac76-040861c3479b",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_resume"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"severity\": \"Error\",\n    \"errorMessage\": \"Brief error message here\",\n    \"errorCode\": 123,\n    \"errorDetailMessage\": \"Detailed error message here\",\n    \"innerErrorData\": {\n      \"exception\": \"com.reltio.services.dataloader.common.exception.DataLoaderServiceException Details here\"\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "472c9c9e-dfed-4897-a6f5-7e797c1f049d",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_resume"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"timestamp\": 1634719769759,\n    \"status\": 500,\n    \"error\": \"Internal Server Error\",\n    \"message\": \"Brief error message here\",\n    \"path\": \"Api context path here\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "eff12258-11d0-4163-9bb2-33c72ca5a48e",
                    "name": "/services/dataloader/api/:tenantId/project/job/:jobId/_stop",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/job/:jobId/_stop",
                        "description": {
                            "content": "Stops the job in progress",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "job",
                                ":jobId",
                                "_stop"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "jobId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job ID to stop",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "ab461fe3-8311-48f3-a571-46028fcd2550",
                            "name": "Request to stop the job is accepted",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_stop"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Accepted",
                            "code": 202,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "89bded36-fa54-4198-8069-bb359d106581",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_stop"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"severity\": \"Error\",\n    \"errorMessage\": \"Operation can not be done as the job [xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx] is in COMPLETED state.\",\n    \"errorCode\": 1561,\n    \"errorDetailMessage\": \"Operation can not be done as the job [xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx] is in COMPLETED state.\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "492b87ad-832f-482b-afc7-beae514384ce",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_stop"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"error\": \"access_denied\",\n    \"error_description\": \"Access is denied\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8833142e-844d-45d1-a52b-28fcf3d458a9",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_stop"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"severity\": \"Error\",\n    \"errorMessage\": \"Brief error message here\",\n    \"errorCode\": 123,\n    \"errorDetailMessage\": \"Detailed error message here\",\n    \"innerErrorData\": {\n      \"exception\": \"com.reltio.services.dataloader.common.exception.DataLoaderServiceException Details here\"\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "58475c73-4465-44be-9b12-31e9fe38cd81",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_stop"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"timestamp\": 1634719769759,\n    \"status\": 500,\n    \"error\": \"Internal Server Error\",\n    \"message\": \"Brief error message here\",\n    \"path\": \"Api context path here\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "43dcd13c-1994-452b-aab7-aed387a665fb",
                    "name": "/services/dataloader/api/:tenantId/project/job/:jobId/errors",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/job/:jobId/errors",
                        "description": {
                            "content": "Download the error file as a zip file, if any exists",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "job",
                                ":jobId",
                                "errors"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Name of the error file to be retrieved",
                                        "type": "text/plain"
                                    },
                                    "key": "errorFile",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "jobId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job ID for which the error files are to be retrieved",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "9a0aa247-e1c1-472c-93d6-5a7453c45271",
                            "name": "Error details are retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "errors"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the error file to be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "errorFile",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "570a38fa-3537-462e-a812-a00b91f1af18",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "errors"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the error file to be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "errorFile",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2576ee7e-7808-465e-8fc9-0d69bb4ebd9b",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "errors"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the error file to be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "errorFile",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6870f913-674c-4229-bbc0-e04302ad2624",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "errors"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the error file to be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "errorFile",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "031aa69c-8d16-4cee-998e-7137cd55a0c4",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "errors"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the error file to be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "errorFile",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e8414f8a-1c2a-48c7-a338-8b044a784642",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "errors"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the error file to be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "errorFile",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "f5e3c881-ef23-41ae-83ba-450c393df8a0",
                    "name": "/services/dataloader/api/:tenantId/project/job/:jobId/source",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/job/:jobId/source",
                        "description": {
                            "content": "Download the source file(s) processed by dataload job",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "job",
                                ":jobId",
                                "source"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "jobId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job ID for which the source files are to be retrieved",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "7c689363-3506-439c-b5ef-6fa486d703ba",
                            "name": "Source details are retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "143c5480-bf62-47f9-afa4-2dc0a64266e3",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "69b5e981-eea4-4455-8ade-d808c141e61c",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f32bb32c-08da-445e-b84d-ed4cfc78dc7f",
                            "name": "User does not have permission to view the file or job information",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "74ffac2e-145e-4902-9098-72e85dc5368a",
                            "name": "All source files processed by job are deleted",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a0b967cc-2067-4382-9acb-f20b43fc9b1a",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "9766cdcc-7f5f-4b86-88c9-b10dc33aff3c",
                    "name": "/services/dataloader/api/:tenantId/project/jobs",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/jobs",
                        "description": {
                            "content": "Retrieve the details of existing jobs for a tenant matching the filter criteria",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "jobs"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "ID of the existing job definitions to get job details",
                                        "type": "text/plain"
                                    },
                                    "key": "projectId",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Job status used to filter the jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "status",
                                    "value": "JOB_EXECUTED"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Job status used to filter the jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "status",
                                    "value": "DATA_LOAD_TASK_EXECUTED"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to retrieve either inprogress or completed jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "inProgress",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                        "type": "text/plain"
                                    },
                                    "key": "creationDate",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                        "type": "text/plain"
                                    },
                                    "key": "page",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Number of objects that need to be returned with a paged response",
                                        "type": "text/plain"
                                    },
                                    "key": "size",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                        "type": "text/plain"
                                    },
                                    "key": "sort",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "7272e7a7-7d1e-4822-82a5-ec961d6a2a72",
                            "name": "Job retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "DATA_LOAD_TASK_EXECUTED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"isDeleted\": \"<boolean>\",\n    \"udl\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"jobStatus\": \"COMPLETED\",\n    \"dataProcessingJobId\": \"<string>\",\n    \"dataFlowId\": \"<string>\",\n    \"periodicTasks\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"errorDetails\": \"<string>\",\n    \"errorFileBucket\": \"<string>\",\n    \"errorFileLocation\": \"<string>\",\n    \"executedDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"totalRecords\": \"<integer>\",\n    \"processedRecordsCount\": \"<integer>\",\n    \"failedRecords\": \"<string>\",\n    \"failedRecordsCount\": \"<integer>\",\n    \"jobSummary\": \"<string>\",\n    \"ludicrousMode\": \"<boolean>\",\n    \"projectDetails\": {\n      \"environment\": \"<string>\",\n      \"loadType\": \"RELATIONS\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"projectStatus\": \"<string>\",\n      \"progressStatus\": \"<string>\",\n      \"tenantId\": \"<string>\",\n      \"updateType\": \"UPDATE_MERGED\",\n      \"errorFileLocation\": \"<string>\",\n      \"operationStatus\": \"<string>\",\n      \"additionalAttributes\": \"<string>\",\n      \"storageDetails\": {\n        \"sourcePath\": \"<string>\",\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"storageId\": \"<string>\",\n        \"shareSourceInfo\": \"<boolean>\",\n        \"bucketName\": \"<string>\",\n        \"bucketNameTemp\": \"<string>\",\n        \"bucketNameError\": \"<string>\",\n        \"bucketNameSummary\": \"<string>\",\n        \"fileMask\": \"<string>\",\n        \"delimiter\": \"<string>\",\n        \"storageAccount\": {\n          \"createdBy\": \"<string>\",\n          \"createdDate\": \"<dateTime>\",\n          \"updatedBy\": \"<string>\",\n          \"updatedDate\": \"<dateTime>\",\n          \"accountId\": \"<integer>\",\n          \"accountName\": \"<string>\",\n          \"accountType\": \"AZURE\",\n          \"credentials\": \"<string>\"\n        },\n        \"totalRecords\": \"<integer>\",\n        \"projectDetailsTO\": {\n          \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n        }\n      },\n      \"mappingDetails\": {\n        \"mappingForObjectType\": \"ENTITIES\",\n        \"mappingName\": \"<string>\",\n        \"mappingSummary\": \"<string>\",\n        \"objectTypeUri\": \"<string>\",\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"mappingId\": \"<integer>\",\n        \"tenantId\": \"<string>\",\n        \"shareMappingDetails\": \"<boolean>\",\n        \"projectIds\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"schedulingDetails\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"id\": \"<string>\",\n        \"scheduledJobId\": \"<string>\",\n        \"cronExpression\": \"<string>\",\n        \"startDate\": \"<long>\",\n        \"endDate\": \"<long>\"\n      }\n    }\n  },\n  {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"isDeleted\": \"<boolean>\",\n    \"udl\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"jobStatus\": \"DATA_LOAD_TASK_EXECUTED\",\n    \"dataProcessingJobId\": \"<string>\",\n    \"dataFlowId\": \"<string>\",\n    \"periodicTasks\": \"<string>\",\n    \"loadType\": \"RELATIONS\",\n    \"errorDetails\": \"<string>\",\n    \"errorFileBucket\": \"<string>\",\n    \"errorFileLocation\": \"<string>\",\n    \"executedDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"totalRecords\": \"<integer>\",\n    \"processedRecordsCount\": \"<integer>\",\n    \"failedRecords\": \"<string>\",\n    \"failedRecordsCount\": \"<integer>\",\n    \"jobSummary\": \"<string>\",\n    \"ludicrousMode\": \"<boolean>\",\n    \"projectDetails\": {\n      \"environment\": \"<string>\",\n      \"loadType\": \"RELATIONS\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"projectStatus\": \"<string>\",\n      \"progressStatus\": \"<string>\",\n      \"tenantId\": \"<string>\",\n      \"updateType\": \"FULL_UPDATE\",\n      \"errorFileLocation\": \"<string>\",\n      \"operationStatus\": \"<string>\",\n      \"additionalAttributes\": \"<string>\",\n      \"storageDetails\": {\n        \"sourcePath\": \"<string>\",\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"storageId\": \"<string>\",\n        \"shareSourceInfo\": \"<boolean>\",\n        \"bucketName\": \"<string>\",\n        \"bucketNameTemp\": \"<string>\",\n        \"bucketNameError\": \"<string>\",\n        \"bucketNameSummary\": \"<string>\",\n        \"fileMask\": \"<string>\",\n        \"delimiter\": \"<string>\",\n        \"storageAccount\": {\n          \"createdBy\": \"<string>\",\n          \"createdDate\": \"<dateTime>\",\n          \"updatedBy\": \"<string>\",\n          \"updatedDate\": \"<dateTime>\",\n          \"accountId\": \"<integer>\",\n          \"accountName\": \"<string>\",\n          \"accountType\": \"GCP\",\n          \"credentials\": \"<string>\"\n        },\n        \"totalRecords\": \"<integer>\",\n        \"projectDetailsTO\": {\n          \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n        }\n      },\n      \"mappingDetails\": {\n        \"mappingForObjectType\": \"ENTITIES\",\n        \"mappingName\": \"<string>\",\n        \"mappingSummary\": \"<string>\",\n        \"objectTypeUri\": \"<string>\",\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"mappingId\": \"<integer>\",\n        \"tenantId\": \"<string>\",\n        \"shareMappingDetails\": \"<boolean>\",\n        \"projectIds\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"schedulingDetails\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"id\": \"<string>\",\n        \"scheduledJobId\": \"<string>\",\n        \"cronExpression\": \"<string>\",\n        \"startDate\": \"<long>\",\n        \"endDate\": \"<long>\"\n      }\n    }\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "64af7315-86d7-435f-bec9-37bc9c021673",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "DATA_LOAD_TASK_EXECUTED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3f4621af-5321-4016-806b-292553359cd9",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "DATA_LOAD_TASK_EXECUTED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a991d244-292d-4df6-8830-4e088729c29d",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "DATA_LOAD_TASK_EXECUTED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "cb4cbc28-5a2c-4bb2-ba8c-ff144c43960e",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "DATA_LOAD_TASK_EXECUTED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e426c203-1875-44cc-be5d-528e97535b9b",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "DATA_LOAD_TASK_EXECUTED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "14d1430d-4f61-4943-a64f-7fe57bd9b6dc",
                    "name": "/services/dataloader/api/:tenantId/project/jobs/_facets",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/jobs/_facets",
                        "description": {
                            "content": "Retrieve requested fields from existing jobs for a tenant matching the filter criteria",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "jobs",
                                "_facets"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "ID of the existing job definitions to get job details",
                                        "type": "text/plain"
                                    },
                                    "key": "projectId",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Job status used to filter the jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "status",
                                    "value": "JOB_EXECUTED"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Job status used to filter the jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "status",
                                    "value": "DATA_LOAD_TASK_EXECUTED"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to retrieve either inprogress or completed jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "inProgress",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                        "type": "text/plain"
                                    },
                                    "key": "creationDate",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "list of fields to fetch",
                                        "type": "text/plain"
                                    },
                                    "key": "facet",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "list of fields to fetch",
                                        "type": "text/plain"
                                    },
                                    "key": "facet",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "ebeadc1a-7861-49a6-b2dd-97b9b13d5290",
                            "name": "Fields retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs",
                                        "_facets"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "DATA_LOAD_TASK_EXECUTED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "list of fields to fetch",
                                                "type": "text/plain"
                                            },
                                            "key": "facet",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"ad55\": {\n    \"Duis1\": \"<integer>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8eb836ff-1fce-4b4e-a8dd-85d570ad9773",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs",
                                        "_facets"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "DATA_LOAD_TASK_EXECUTED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "list of fields to fetch",
                                                "type": "text/plain"
                                            },
                                            "key": "facet",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "de55c62e-6684-42d1-a64f-d31a5f34184a",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs",
                                        "_facets"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "DATA_LOAD_TASK_EXECUTED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "list of fields to fetch",
                                                "type": "text/plain"
                                            },
                                            "key": "facet",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "68364ed1-9f87-4f8d-a59b-53de5a3648e2",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs",
                                        "_facets"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "DATA_LOAD_TASK_EXECUTED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "list of fields to fetch",
                                                "type": "text/plain"
                                            },
                                            "key": "facet",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a1d423da-5d1e-4ba5-8f84-f446b4ac2bf9",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs",
                                        "_facets"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "DATA_LOAD_TASK_EXECUTED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "list of fields to fetch",
                                                "type": "text/plain"
                                            },
                                            "key": "facet",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "bea37cf0-6224-4df3-ad17-1d29a9157e2b",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs",
                                        "_facets"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "DATA_LOAD_TASK_EXECUTED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "list of fields to fetch",
                                                "type": "text/plain"
                                            },
                                            "key": "facet",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "94505701-6cb3-4724-b158-923ed52407a7",
                    "name": "/services/dataloader/api/:tenantId/project/:projectId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/:projectId",
                        "description": {
                            "content": "Returns existing job definition with mapping, source, and scheduling details",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                ":projectId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "projectId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job definition ID for which the details must be retrieved",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "0eb5dcc3-16d7-484f-966f-20acb28d6127",
                            "name": "Job definition is retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"SFTP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8e36048f-eef1-4ba7-8d7e-d7fa5b9d3a07",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "60c4882b-fe2f-403a-bb98-e328fa40e10e",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "68406991-4637-4c02-b6fd-c0e9482202a0",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b52e5987-c4f9-4af8-9597-38a2c24f3735",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0ed82a09-5c1a-45d9-9d1f-8e8cdae105e7",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "e918a58d-1620-4e7e-8051-20fdad534f5f",
                    "name": "/services/dataloader/api/:tenantId/project/:projectId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/:projectId",
                        "description": {
                            "content": "Updates the existing job definitions by merging existing details for job definition with the updated information provided in the request body",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                ":projectId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "projectId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job definition ID for which the details must be updated",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"SFTP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "c19f226a-b4a2-4f84-a1b0-3c2b679c9853",
                            "name": "Job definition is successfully updated",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"SFTP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"SFTP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ca57b4d7-16bb-4cc0-83d7-ccb7475f9fe1",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"SFTP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b944b8b5-6dc2-4cd2-bba5-236474740484",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"SFTP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b8db23fb-ee43-45b9-9157-1d4e6b41916b",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"SFTP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a45e7652-8294-4ae6-b2cf-aa5cba974945",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"SFTP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0a70ccd0-9814-4747-aeae-d2f07d274b28",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"SFTP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "58f8cf9b-2e55-4cd1-abe9-ce33880cb8fa",
                    "name": "/services/dataloader/api/:tenantId/project/:projectId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/:projectId",
                        "description": {
                            "content": "Deletes the existing job definition when the related mapping, source, and scheduling details are not used by other job definitions",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                ":projectId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "projectId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job definition ID for which the details must be deleted",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "e48f930c-5a80-4c29-a277-713e5d804d53",
                            "name": "Job definition is deleted successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "cc2e9462-bb38-4d32-ad2d-0160b264a0b2",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6a38b7f2-8885-4d7e-9d93-ae5938fe95d2",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "06c02e50-2cbe-4a67-802d-734449904ccb",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "81335c97-bf7c-44e4-ad39-b355e584e7bb",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "459fc203-0374-4e6b-92f5-4766182c7919",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "9215fa49-29ce-4eee-bb24-3f84ed53b4bc",
                    "name": "/services/dataloader/api/:tenantId/project/:projectId/jobs",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/:projectId/jobs",
                        "description": {
                            "content": "Retrieves the details of existing jobs for a job definitions by matching the filter criteria",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                ":projectId",
                                "jobs"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Job status used to filter the jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "status",
                                    "value": "PROFILES_LOAD_IN_PROGRESS"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Job status used to filter the jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "status",
                                    "value": "MAPPING_PROCESSING_FINISHED"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to retrieve either inprogress or completed jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "inProgress",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                        "type": "text/plain"
                                    },
                                    "key": "creationDate",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                        "type": "text/plain"
                                    },
                                    "key": "page",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Number of objects that need to be returned with a paged response",
                                        "type": "text/plain"
                                    },
                                    "key": "size",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                        "type": "text/plain"
                                    },
                                    "key": "sort",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "projectId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the existing job definitions to get job details",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "c8349567-d84f-4f6e-b802-84ad8409eb30",
                            "name": "Job retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "MAPPING_PROCESSING_FINISHED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"isDeleted\": \"<boolean>\",\n    \"udl\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"jobStatus\": \"COMPLETED\",\n    \"dataProcessingJobId\": \"<string>\",\n    \"dataFlowId\": \"<string>\",\n    \"periodicTasks\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"errorDetails\": \"<string>\",\n    \"errorFileBucket\": \"<string>\",\n    \"errorFileLocation\": \"<string>\",\n    \"executedDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"totalRecords\": \"<integer>\",\n    \"processedRecordsCount\": \"<integer>\",\n    \"failedRecords\": \"<string>\",\n    \"failedRecordsCount\": \"<integer>\",\n    \"jobSummary\": \"<string>\",\n    \"ludicrousMode\": \"<boolean>\",\n    \"projectDetails\": {\n      \"environment\": \"<string>\",\n      \"loadType\": \"RELATIONS\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"projectStatus\": \"<string>\",\n      \"progressStatus\": \"<string>\",\n      \"tenantId\": \"<string>\",\n      \"updateType\": \"UPDATE_MERGED\",\n      \"errorFileLocation\": \"<string>\",\n      \"operationStatus\": \"<string>\",\n      \"additionalAttributes\": \"<string>\",\n      \"storageDetails\": {\n        \"sourcePath\": \"<string>\",\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"storageId\": \"<string>\",\n        \"shareSourceInfo\": \"<boolean>\",\n        \"bucketName\": \"<string>\",\n        \"bucketNameTemp\": \"<string>\",\n        \"bucketNameError\": \"<string>\",\n        \"bucketNameSummary\": \"<string>\",\n        \"fileMask\": \"<string>\",\n        \"delimiter\": \"<string>\",\n        \"storageAccount\": {\n          \"createdBy\": \"<string>\",\n          \"createdDate\": \"<dateTime>\",\n          \"updatedBy\": \"<string>\",\n          \"updatedDate\": \"<dateTime>\",\n          \"accountId\": \"<integer>\",\n          \"accountName\": \"<string>\",\n          \"accountType\": \"AZURE\",\n          \"credentials\": \"<string>\"\n        },\n        \"totalRecords\": \"<integer>\",\n        \"projectDetailsTO\": {\n          \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n        }\n      },\n      \"mappingDetails\": {\n        \"mappingForObjectType\": \"ENTITIES\",\n        \"mappingName\": \"<string>\",\n        \"mappingSummary\": \"<string>\",\n        \"objectTypeUri\": \"<string>\",\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"mappingId\": \"<integer>\",\n        \"tenantId\": \"<string>\",\n        \"shareMappingDetails\": \"<boolean>\",\n        \"projectIds\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"schedulingDetails\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"id\": \"<string>\",\n        \"scheduledJobId\": \"<string>\",\n        \"cronExpression\": \"<string>\",\n        \"startDate\": \"<long>\",\n        \"endDate\": \"<long>\"\n      }\n    }\n  },\n  {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"isDeleted\": \"<boolean>\",\n    \"udl\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"jobStatus\": \"DATA_LOAD_TASK_EXECUTED\",\n    \"dataProcessingJobId\": \"<string>\",\n    \"dataFlowId\": \"<string>\",\n    \"periodicTasks\": \"<string>\",\n    \"loadType\": \"RELATIONS\",\n    \"errorDetails\": \"<string>\",\n    \"errorFileBucket\": \"<string>\",\n    \"errorFileLocation\": \"<string>\",\n    \"executedDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"totalRecords\": \"<integer>\",\n    \"processedRecordsCount\": \"<integer>\",\n    \"failedRecords\": \"<string>\",\n    \"failedRecordsCount\": \"<integer>\",\n    \"jobSummary\": \"<string>\",\n    \"ludicrousMode\": \"<boolean>\",\n    \"projectDetails\": {\n      \"environment\": \"<string>\",\n      \"loadType\": \"RELATIONS\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"projectStatus\": \"<string>\",\n      \"progressStatus\": \"<string>\",\n      \"tenantId\": \"<string>\",\n      \"updateType\": \"FULL_UPDATE\",\n      \"errorFileLocation\": \"<string>\",\n      \"operationStatus\": \"<string>\",\n      \"additionalAttributes\": \"<string>\",\n      \"storageDetails\": {\n        \"sourcePath\": \"<string>\",\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"storageId\": \"<string>\",\n        \"shareSourceInfo\": \"<boolean>\",\n        \"bucketName\": \"<string>\",\n        \"bucketNameTemp\": \"<string>\",\n        \"bucketNameError\": \"<string>\",\n        \"bucketNameSummary\": \"<string>\",\n        \"fileMask\": \"<string>\",\n        \"delimiter\": \"<string>\",\n        \"storageAccount\": {\n          \"createdBy\": \"<string>\",\n          \"createdDate\": \"<dateTime>\",\n          \"updatedBy\": \"<string>\",\n          \"updatedDate\": \"<dateTime>\",\n          \"accountId\": \"<integer>\",\n          \"accountName\": \"<string>\",\n          \"accountType\": \"GCP\",\n          \"credentials\": \"<string>\"\n        },\n        \"totalRecords\": \"<integer>\",\n        \"projectDetailsTO\": {\n          \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n        }\n      },\n      \"mappingDetails\": {\n        \"mappingForObjectType\": \"ENTITIES\",\n        \"mappingName\": \"<string>\",\n        \"mappingSummary\": \"<string>\",\n        \"objectTypeUri\": \"<string>\",\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"mappingId\": \"<integer>\",\n        \"tenantId\": \"<string>\",\n        \"shareMappingDetails\": \"<boolean>\",\n        \"projectIds\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"schedulingDetails\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"id\": \"<string>\",\n        \"scheduledJobId\": \"<string>\",\n        \"cronExpression\": \"<string>\",\n        \"startDate\": \"<long>\",\n        \"endDate\": \"<long>\"\n      }\n    }\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "71c450cb-0f9b-4544-a22e-43e3f63123b8",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "MAPPING_PROCESSING_FINISHED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "cc954b14-c2bd-4cb3-91e2-73b811c3200f",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "MAPPING_PROCESSING_FINISHED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a8bf8c20-fa3f-4438-bb5e-d104c217c994",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "MAPPING_PROCESSING_FINISHED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a3328b11-c1d2-4311-a2d6-8230e3492f3f",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "MAPPING_PROCESSING_FINISHED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d6c7954f-7a7c-45d8-a05b-50de0f5c7ddc",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "MAPPING_PROCESSING_FINISHED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "51099607-51c8-4b79-99b2-81f65645a9da",
                    "name": "/services/dataloader/api/:tenantId/project/:projectId/jobs",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/:projectId/jobs",
                        "description": {
                            "content": "Creates a job to carry out the load operation using the configurations provided in the request payload. If the configuration details for a job are not provided in the request payload, the API creates a job based on the job definition",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                ":projectId",
                                "jobs"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "projectId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job definition ID used to create the job",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"DATAFLOW_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"UPLOADED\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "669cdc73-670a-4339-8555-dfbc76a256b9",
                            "name": "Job Created successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"DATAFLOW_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"UPLOADED\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"DATAFLOW_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"UPLOADED\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "eb287b70-7633-40fc-a684-1d691c1a9d4a",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"DATAFLOW_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"UPLOADED\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c2067cf7-38b0-49b1-b2fc-5f743b7920f1",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"DATAFLOW_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"UPLOADED\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4c9c632d-d6fa-49e9-bcc0-3d469ff9108e",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"DATAFLOW_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"UPLOADED\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3a038e9c-0a99-476b-85d6-4a9086421d32",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"DATAFLOW_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"UPLOADED\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4a7ee433-6766-4599-b280-2081639c14d6",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"DATAFLOW_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"UPLOADED\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "4254fbfd-e152-4d26-93d2-75758f7c698b",
                    "name": "/services/dataloader/api/:tenantId/project/:projectId/jobs/run",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/:projectId/jobs/run",
                        "description": {
                            "content": "Creates and runs a job to carry out the load operation using configurations provided in the request payload. If the configuration details for a job are not provided in the request payload, the API creates a job based on the job definition",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                ":projectId",
                                "jobs",
                                "run"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "projectId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job definition ID used to create the job",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"DATAFLOW_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"UPLOADED\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "a3c587e6-0f90-47ef-9ceb-85d0d35e42ba",
                            "name": "Job executed successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs",
                                        "run"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"DATAFLOW_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"UPLOADED\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"DATAFLOW_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"UPLOADED\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "47db128c-bd96-4590-b304-3374b03f0d78",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs",
                                        "run"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"DATAFLOW_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"UPLOADED\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "04c1d45c-011d-478f-9089-551c320291de",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs",
                                        "run"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"DATAFLOW_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"UPLOADED\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "81dafb07-1089-4180-9a4d-8abed81fb248",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs",
                                        "run"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"DATAFLOW_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"UPLOADED\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4b4b7d19-01e6-4504-a300-8fbc70af64f3",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs",
                                        "run"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"DATAFLOW_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"UPLOADED\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "62add12a-cbc1-49af-bf9f-bb73d465dabf",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs",
                                        "run"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"DATAFLOW_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"UPLOADED\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "c366ac97-64bf-4b00-8edb-397edb9e80f3",
                    "name": "/services/dataloader/api/:tenantId/projects",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/projects",
                        "description": {
                            "content": "Retrieves existing job definitions for a tenant matching filter criteria",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "projects"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Job definitions are filtered based on the status",
                                        "type": "text/plain"
                                    },
                                    "key": "projectStatus",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Filter job definitions by mapping used",
                                        "type": "text/plain"
                                    },
                                    "key": "mappingId",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Criteria to filter and get jobs which are created after provided long value of date",
                                        "type": "text/plain"
                                    },
                                    "key": "creationDate",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Filter criteria to list jobs based on progress status",
                                        "type": "text/plain"
                                    },
                                    "key": "progressStatus",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "If 'false', the jobs with completed status are displayed, else draft jobs are displayed",
                                        "type": "text/plain"
                                    },
                                    "key": "inProgress",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                        "type": "text/plain"
                                    },
                                    "key": "page",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Number of objects that need to be returned with a paged response",
                                        "type": "text/plain"
                                    },
                                    "key": "size",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                        "type": "text/plain"
                                    },
                                    "key": "sort",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "08294515-9c0b-4545-961e-2ebaa834b0c5",
                            "name": "Job definitions retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "projects"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job definitions are filtered based on the status",
                                                "type": "text/plain"
                                            },
                                            "key": "projectStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter job definitions by mapping used",
                                                "type": "text/plain"
                                            },
                                            "key": "mappingId",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created after provided long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter criteria to list jobs based on progress status",
                                                "type": "text/plain"
                                            },
                                            "key": "progressStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'false', the jobs with completed status are displayed, else draft jobs are displayed",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"environment\": \"<string>\",\n    \"loadType\": \"RELATIONS\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AWS_S3\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  },\n  {\n    \"environment\": \"<string>\",\n    \"loadType\": \"RELATIONS\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3dab2566-b3ac-48d1-8798-ddf6565053f7",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "projects"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job definitions are filtered based on the status",
                                                "type": "text/plain"
                                            },
                                            "key": "projectStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter job definitions by mapping used",
                                                "type": "text/plain"
                                            },
                                            "key": "mappingId",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created after provided long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter criteria to list jobs based on progress status",
                                                "type": "text/plain"
                                            },
                                            "key": "progressStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'false', the jobs with completed status are displayed, else draft jobs are displayed",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ac0dbbc1-d6eb-419f-a785-fb7a2c1d04da",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "projects"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job definitions are filtered based on the status",
                                                "type": "text/plain"
                                            },
                                            "key": "projectStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter job definitions by mapping used",
                                                "type": "text/plain"
                                            },
                                            "key": "mappingId",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created after provided long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter criteria to list jobs based on progress status",
                                                "type": "text/plain"
                                            },
                                            "key": "progressStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'false', the jobs with completed status are displayed, else draft jobs are displayed",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "caa77847-4918-4b4e-8597-b6b79eb52255",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "projects"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job definitions are filtered based on the status",
                                                "type": "text/plain"
                                            },
                                            "key": "projectStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter job definitions by mapping used",
                                                "type": "text/plain"
                                            },
                                            "key": "mappingId",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created after provided long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter criteria to list jobs based on progress status",
                                                "type": "text/plain"
                                            },
                                            "key": "progressStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'false', the jobs with completed status are displayed, else draft jobs are displayed",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "218bc3f4-f77c-4bd5-a54a-4eaa2c9f1c9c",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "projects"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job definitions are filtered based on the status",
                                                "type": "text/plain"
                                            },
                                            "key": "projectStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter job definitions by mapping used",
                                                "type": "text/plain"
                                            },
                                            "key": "mappingId",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created after provided long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter criteria to list jobs based on progress status",
                                                "type": "text/plain"
                                            },
                                            "key": "progressStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'false', the jobs with completed status are displayed, else draft jobs are displayed",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1f8d5281-97cb-4431-a347-fd231250d7fa",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "projects"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job definitions are filtered based on the status",
                                                "type": "text/plain"
                                            },
                                            "key": "projectStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter job definitions by mapping used",
                                                "type": "text/plain"
                                            },
                                            "key": "mappingId",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created after provided long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter criteria to list jobs based on progress status",
                                                "type": "text/plain"
                                            },
                                            "key": "progressStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'false', the jobs with completed status are displayed, else draft jobs are displayed",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "8b396be4-e9be-44d4-a33f-e24d241aad27",
                    "name": "/services/dataloader/api/:tenantId/storage/_account",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/storage/_account",
                        "description": {
                            "content": "Creates a storage account to be used while creating the source details. You must provide the account type and credential details for creating the storage account",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "storage",
                                "_account"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"AWS_S3\",\n  \"credentials\": \"<string>\"\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "900cc1da-4646-4315-9df3-3bb7e8228bbf",
                            "name": "Resource is created successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"AWS_S3\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"AWS_S3\",\n  \"credentials\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0ccb242d-99a6-41a1-b7f7-7b39980d2795",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"AWS_S3\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5285d797-4fea-4059-95dd-ec64c844954f",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"AWS_S3\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "bfa11c2b-4eab-41f6-bee8-f3db4e21c741",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"AWS_S3\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e33bbd17-700e-46c9-9d72-4c2ca827a5a6",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"AWS_S3\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e61068af-56e6-4e5c-b4e3-aa970ef87f42",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"AWS_S3\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "6e2a7545-563a-4979-bbc4-50611add3b76",
                    "name": "/services/dataloader/api/:tenantId/storage/_account/:accountId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/storage/_account/:accountId",
                        "description": {
                            "content": "You can get the existing storage account details using the ID",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "storage",
                                "_account",
                                ":accountId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "accountId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Existing storage account ID for which the details must be retrieved",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "8f82da6c-6478-493b-99f3-56dcbbbd5c8e",
                            "name": "Resource retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"AWS_S3\",\n  \"credentials\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5f9ff218-a767-4c3b-878a-35531ebb808d",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3e49690c-dddb-4c81-8c8a-e847a8449be6",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d47e7876-0cfa-43e3-aff0-2c3d9166710b",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "30c0c449-89dc-47c4-b809-06325f1267ba",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "41440d57-c2e3-4bef-9bc1-b51d10cbca35",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "0360b894-b050-4668-ae7b-4be3300bf4b0",
                    "name": "/services/dataloader/api/:tenantId/storage/_account/:accountId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/storage/_account/:accountId",
                        "description": {
                            "content": "Updates the existing storage account details",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "storage",
                                "_account",
                                ":accountId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "accountId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Existing storage account ID for which the details must be updated",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"AWS_S3\",\n  \"credentials\": \"<string>\"\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "28255074-680b-42a2-9ab1-15e8abca405f",
                            "name": "Resource is update successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"AWS_S3\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"AWS_S3\",\n  \"credentials\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "951d28fb-4267-4204-9897-dc2e4f7f02e1",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"AWS_S3\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0f43fb26-e424-4efc-8958-93633e33063b",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"AWS_S3\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7c716fed-387b-4764-a5d2-680275e5915e",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"AWS_S3\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a8eb0281-afcb-4db9-91c8-1464f0bb5dcd",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"AWS_S3\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0e72c023-b602-4cca-b104-7a613d0ff5c3",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"AWS_S3\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "ced65033-bd0e-45f2-bc5f-841c699632b9",
                    "name": "/services/dataloader/api/:tenantId/storage/_account/:accountId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/storage/_account/:accountId",
                        "description": {
                            "content": "Delete existing storage account details using the ID",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "storage",
                                "_account",
                                ":accountId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "accountId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Existing storage account ID for which the details must be deleted",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "47f57aa3-beae-4fce-8cbe-9a354ac9b8f8",
                            "name": "Resource deleted successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "9ed9e2f4-19c8-458b-a47c-08a19e8b1e1f",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "28d48d88-da16-46ea-b1ea-12e5e61ff89e",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ff5b49c8-478c-4761-b890-8c6ea3f0c17f",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a6f96a0c-0ef7-4134-adbb-cf1a28e6028d",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5436300a-045d-4006-a130-2ec1fc08b40a",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "bc735444-a735-46fc-90e5-0a017a45bc88",
                    "name": "/services/dataloader/api/:tenantId/storage/_accounts",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/storage/_accounts",
                        "description": {
                            "content": "Retrieves all storage account details for the accounts created by the logged-in user matching the filter criteria",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "storage",
                                "_accounts"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Type of the Storage account. <br><b>For example:</b> 'accountType=GCP'",
                                        "type": "text/plain"
                                    },
                                    "key": "accountType",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                        "type": "text/plain"
                                    },
                                    "key": "page",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Number of objects that need to be returned with a paged response",
                                        "type": "text/plain"
                                    },
                                    "key": "size",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=accountType' - sorts the storage accounts in the ascending order of accountType, 'sort=accountType:desc' - sorts the source details in the descending order of accountType. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=accountType:desc,name:desc' - sorts the API response in the descending order of accountType and 'name'",
                                        "type": "text/plain"
                                    },
                                    "key": "sort",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "223df2fb-8a28-49eb-82c8-96333c6338e8",
                            "name": "Resources retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_accounts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Type of the Storage account. <br><b>For example:</b> 'accountType=GCP'",
                                                "type": "text/plain"
                                            },
                                            "key": "accountType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=accountType' - sorts the storage accounts in the ascending order of accountType, 'sort=accountType:desc' - sorts the source details in the descending order of accountType. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=accountType:desc,name:desc' - sorts the API response in the descending order of accountType and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AZURE\",\n    \"credentials\": \"<string>\"\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c8afed89-0e7f-431d-ad4a-ed545c86ab1e",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_accounts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Type of the Storage account. <br><b>For example:</b> 'accountType=GCP'",
                                                "type": "text/plain"
                                            },
                                            "key": "accountType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=accountType' - sorts the storage accounts in the ascending order of accountType, 'sort=accountType:desc' - sorts the source details in the descending order of accountType. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=accountType:desc,name:desc' - sorts the API response in the descending order of accountType and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2ec95739-fb5d-468b-94d7-c5babc758989",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_accounts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Type of the Storage account. <br><b>For example:</b> 'accountType=GCP'",
                                                "type": "text/plain"
                                            },
                                            "key": "accountType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=accountType' - sorts the storage accounts in the ascending order of accountType, 'sort=accountType:desc' - sorts the source details in the descending order of accountType. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=accountType:desc,name:desc' - sorts the API response in the descending order of accountType and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4b6f1dbd-7313-4565-8acb-d2c452a3f2c0",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_accounts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Type of the Storage account. <br><b>For example:</b> 'accountType=GCP'",
                                                "type": "text/plain"
                                            },
                                            "key": "accountType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=accountType' - sorts the storage accounts in the ascending order of accountType, 'sort=accountType:desc' - sorts the source details in the descending order of accountType. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=accountType:desc,name:desc' - sorts the API response in the descending order of accountType and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "df756504-fe98-4ce9-8202-eb493d12bf1b",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_accounts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Type of the Storage account. <br><b>For example:</b> 'accountType=GCP'",
                                                "type": "text/plain"
                                            },
                                            "key": "accountType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=accountType' - sorts the storage accounts in the ascending order of accountType, 'sort=accountType:desc' - sorts the source details in the descending order of accountType. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=accountType:desc,name:desc' - sorts the API response in the descending order of accountType and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "763a8359-9095-4aed-aa31-90fa3e0f721e",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_accounts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Type of the Storage account. <br><b>For example:</b> 'accountType=GCP'",
                                                "type": "text/plain"
                                            },
                                            "key": "accountType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=accountType' - sorts the storage accounts in the ascending order of accountType, 'sort=accountType:desc' - sorts the source details in the descending order of accountType. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=accountType:desc,name:desc' - sorts the API response in the descending order of accountType and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "239ff9cd-2b69-467c-b629-4d4e4d3a503d",
                    "name": "/services/dataloader/api/:tenantId/storage/:directory/upload",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/storage/:directory/upload",
                        "description": {
                            "content": "Upload a file from your system to remote storage for carrying out load operation",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "storage",
                                ":directory",
                                "upload"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "If set to 'true', the existing file is overwritten with the new file",
                                        "type": "text/plain"
                                    },
                                    "key": "replace",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "When provided, the API uploads the file and updates the provided job definition and maps the storage ID to the uploaded file",
                                        "type": "text/plain"
                                    },
                                    "key": "projectId",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "CSV file delimiter character, supported values are , | || ; ",
                                        "type": "text/plain"
                                    },
                                    "key": "delimiter",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "directory",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) GCS path for uploading the file",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "multipart/form-data"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "description": {
                                        "content": "(Required) MIME file that must be uploaded",
                                        "type": "text/plain"
                                    },
                                    "key": "file",
                                    "value": "<string>",
                                    "type": "text"
                                }
                            ]
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "6c77c9af-4626-4a9a-a0b7-ef8b27386c72",
                            "name": "File uploaded",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":directory",
                                        "upload"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to 'true', the existing file is overwritten with the new file",
                                                "type": "text/plain"
                                            },
                                            "key": "replace",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "When provided, the API uploads the file and updates the provided job definition and maps the storage ID to the uploaded file",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "CSV file delimiter character, supported values are , | || ; ",
                                                "type": "text/plain"
                                            },
                                            "key": "delimiter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) MIME file that must be uploaded",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<string>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f2a9a651-ae69-4376-8073-a5c8bf974e5d",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":directory",
                                        "upload"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to 'true', the existing file is overwritten with the new file",
                                                "type": "text/plain"
                                            },
                                            "key": "replace",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "When provided, the API uploads the file and updates the provided job definition and maps the storage ID to the uploaded file",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "CSV file delimiter character, supported values are , | || ; ",
                                                "type": "text/plain"
                                            },
                                            "key": "delimiter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) MIME file that must be uploaded",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<string>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "799b04f3-8ad5-48df-81a9-f1ca905a8247",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":directory",
                                        "upload"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to 'true', the existing file is overwritten with the new file",
                                                "type": "text/plain"
                                            },
                                            "key": "replace",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "When provided, the API uploads the file and updates the provided job definition and maps the storage ID to the uploaded file",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "CSV file delimiter character, supported values are , | || ; ",
                                                "type": "text/plain"
                                            },
                                            "key": "delimiter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) MIME file that must be uploaded",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<string>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0b2cb8b4-2a87-4ea9-95b8-411fd5539eda",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":directory",
                                        "upload"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to 'true', the existing file is overwritten with the new file",
                                                "type": "text/plain"
                                            },
                                            "key": "replace",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "When provided, the API uploads the file and updates the provided job definition and maps the storage ID to the uploaded file",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "CSV file delimiter character, supported values are , | || ; ",
                                                "type": "text/plain"
                                            },
                                            "key": "delimiter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) MIME file that must be uploaded",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<string>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9b5648a1-83f5-48d6-832d-a3ba204db746",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":directory",
                                        "upload"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to 'true', the existing file is overwritten with the new file",
                                                "type": "text/plain"
                                            },
                                            "key": "replace",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "When provided, the API uploads the file and updates the provided job definition and maps the storage ID to the uploaded file",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "CSV file delimiter character, supported values are , | || ; ",
                                                "type": "text/plain"
                                            },
                                            "key": "delimiter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) MIME file that must be uploaded",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<string>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "112a4995-7278-48a1-aef0-c7be541a112c",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":directory",
                                        "upload"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to 'true', the existing file is overwritten with the new file",
                                                "type": "text/plain"
                                            },
                                            "key": "replace",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "When provided, the API uploads the file and updates the provided job definition and maps the storage ID to the uploaded file",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "CSV file delimiter character, supported values are , | || ; ",
                                                "type": "text/plain"
                                            },
                                            "key": "delimiter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) MIME file that must be uploaded",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<string>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "a9553a33-e477-4e78-b62e-15499f2f28bd",
                    "name": "/services/dataloader/api/:tenantId/storage/:sourceId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/storage/:sourceId",
                        "description": {
                            "content": "Removes the uploaded file from Cloud Storage",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "storage",
                                ":sourceId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "sourceId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Source details ID to delete",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "764fda39-b2d2-45fe-8a20-f5521df54cf4",
                            "name": "Source file deleted successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "e767d56f-9c8a-43f5-a043-fb516e88521e",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "60ca8fcd-4ba1-4817-ae09-756a228bc6ac",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f20b4c1f-685c-46e0-968a-720dfcd03375",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4944bcc5-56ab-4e95-a9dc-10468d2033f0",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4ec2fd63-8443-4e81-a897-f4600da0bef4",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "ee798da3-22a3-4660-9bde-4b2dd14a5efc",
                    "name": "/services/dataloader/api/:tenantId/storage/:sourceId/read",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/storage/:sourceId/read",
                        "description": {
                            "content": "Reads the specified number of lines from the existing source details and returns the information",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "storage",
                                ":sourceId",
                                "read"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Number of lines to be read from the source file for preview",
                                        "type": "text/plain"
                                    },
                                    "key": "linesToRead",
                                    "value": "10"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "sourceId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Existing Storage ID from which the files are to be read",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "f70f2949-c7c8-4699-8321-20d32d9142c6",
                            "name": "Source files are read successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId",
                                        "read"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of lines to be read from the source file for preview",
                                                "type": "text/plain"
                                            },
                                            "key": "linesToRead",
                                            "value": "10"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"ea_3c\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"dolore271\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "057e4ce7-1baf-41e8-9b1a-455cfb9d1377",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId",
                                        "read"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of lines to be read from the source file for preview",
                                                "type": "text/plain"
                                            },
                                            "key": "linesToRead",
                                            "value": "10"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1ebb294f-3ebb-4d66-b2a6-57cd873f94d4",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId",
                                        "read"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of lines to be read from the source file for preview",
                                                "type": "text/plain"
                                            },
                                            "key": "linesToRead",
                                            "value": "10"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "74b8854e-a469-41af-a8c3-0924924fcae3",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId",
                                        "read"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of lines to be read from the source file for preview",
                                                "type": "text/plain"
                                            },
                                            "key": "linesToRead",
                                            "value": "10"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1fe14bd4-3dd7-4175-986b-c73c26b0b166",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId",
                                        "read"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of lines to be read from the source file for preview",
                                                "type": "text/plain"
                                            },
                                            "key": "linesToRead",
                                            "value": "10"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "12d15a9c-d500-4fc4-9b52-6c333568e178",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId",
                                        "read"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of lines to be read from the source file for preview",
                                                "type": "text/plain"
                                            },
                                            "key": "linesToRead",
                                            "value": "10"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ]
        },
        {
            "name": "Reference Data Management",
            "description": "",
            "item": [
                {
                    "id": "1a6b2807-0e38-46da-a9bc-eedae2af20c2",
                    "name": "/services/lookups/:tenantId",
                    "request": {
                        "name": "/services/lookups/:tenantId",
                        "description": {
                            "content": "This API saves a collection of lookups in RDM tenant according to the JSON object definition. If you need to create just one lookup value then please specify one JSON object in the array. The same API should be used for create and update operations.<br/><br/>You can create a maximum of <b>100</b> lookup codes in a single request.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "lookups",
                                ":tenantId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the RDM tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "412a8008-f7da-4486-8071-110de63415b1",
                            "name": "Successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"uri\": \"<string>\",\n    \"value\": {},\n    \"error\": {\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"innerErrorData\": {\n        \"innerErrorData\": {\n          \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n        },\n        \"exception\": \"<string>\",\n        \"stack\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    \"warning\": {\n      \"warningMessage\": \"<string>\"\n    }\n  },\n  {\n    \"uri\": \"<string>\",\n    \"value\": {},\n    \"error\": {\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"innerErrorData\": {\n        \"innerErrorData\": {\n          \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n        },\n        \"exception\": \"<string>\",\n        \"stack\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    \"warning\": {\n      \"warningMessage\": \"<string>\"\n    }\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "56f4c8f5-e286-46b8-aae0-1ebcaf21050a",
                            "name": "The operation cannot be performed because user is unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "c8d679ca-c184-41e3-896a-67f788978dbe",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "b30f25dc-1b77-4758-9871-1b0107df83ce",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7f61b9b4-c3d7-4b7b-8e2c-f178873cca38",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "6c0694aa-9489-4427-b09f-1d0f1f2f2d0d",
                    "name": "/services/lookups/:tenantId/:type",
                    "request": {
                        "name": "/services/lookups/:tenantId/:type",
                        "description": {
                            "content": "This API saves a collection of lookups in RDM tenant according to the JSON object definition. If you need to create just one lookup value then please specify one JSON object in the array. The same API should be used for create and update operations.<br/><br/>You can create a maximum of <b>100</b> lookup codes in a single request.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "lookups",
                                ":tenantId",
                                ":type"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the RDM tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "type",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Lookup type for which values must be created",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "b6aebf44-c576-41ca-98f2-6ed0852e3354",
                            "name": "Successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"uri\": \"<string>\",\n  \"value\": {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  \"error\": {\n    \"errorMessage\": \"<string>\",\n    \"errorCode\": \"<integer>\",\n    \"innerErrorData\": {\n      \"innerErrorData\": {\n        \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n      },\n      \"exception\": \"<string>\",\n      \"stack\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  },\n  \"warning\": {\n    \"warningMessage\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9f450396-a881-4f71-a6e1-1fa304ff962d",
                            "name": "The operation cannot be performed because user is unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "444885df-e422-436a-9844-f7a90e6afd19",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "b043c72b-592f-42ef-b540-c1b6121811cf",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "32dfb761-5bbc-4cd4-8ca5-c8669efdc015",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "41ded583-83f2-4b23-bd95-221a8a1dcbc4",
                    "name": "/services/lookups/:tenantId/:type/:code",
                    "request": {
                        "name": "/services/lookups/:tenantId/:type/:code",
                        "description": {
                            "content": "This API updates a lookup value for the specified lookup type and lookup code. The response returns <b>Success</b> if the value is successfully updated.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "lookups",
                                ":tenantId",
                                ":type",
                                ":code"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the RDM tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "type",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Lookup type for which values must be created",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "E9aCwG.?",
                                    "key": "code",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"tenantId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"code\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"parents\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sourceMappings\": [\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    }\n  ],\n  \"localizations\": [\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"updatedBy\": \"<string>\",\n  \"updateDate\": \"<long>\",\n  \"version\": \"<long>\"\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "50df641c-2c2a-4217-b41d-a473b26af3d4",
                            "name": "Successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type",
                                        ":code"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"tenantId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"code\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"parents\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sourceMappings\": [\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    }\n  ],\n  \"localizations\": [\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"updatedBy\": \"<string>\",\n  \"updateDate\": \"<long>\",\n  \"version\": \"<long>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"tenantId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"code\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"parents\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sourceMappings\": [\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    }\n  ],\n  \"localizations\": [\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"updatedBy\": \"<string>\",\n  \"updateDate\": \"<long>\",\n  \"version\": \"<long>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "18dbcfc3-ff25-4e26-ac46-7267cbc74be9",
                            "name": "The operation cannot be performed because user is unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type",
                                        ":code"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"tenantId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"code\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"parents\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sourceMappings\": [\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    }\n  ],\n  \"localizations\": [\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"updatedBy\": \"<string>\",\n  \"updateDate\": \"<long>\",\n  \"version\": \"<long>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "aacfe23d-179c-4967-9476-ceef6ef43a02",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type",
                                        ":code"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"tenantId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"code\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"parents\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sourceMappings\": [\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    }\n  ],\n  \"localizations\": [\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"updatedBy\": \"<string>\",\n  \"updateDate\": \"<long>\",\n  \"version\": \"<long>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "c1cefad4-8c84-4156-bdc8-86e9072199bb",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type",
                                        ":code"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"tenantId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"code\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"parents\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sourceMappings\": [\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    }\n  ],\n  \"localizations\": [\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"updatedBy\": \"<string>\",\n  \"updateDate\": \"<long>\",\n  \"version\": \"<long>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "911fe865-1cf6-4f76-92a4-31aadc11bca2",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type",
                                        ":code"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"tenantId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"code\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"parents\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sourceMappings\": [\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    }\n  ],\n  \"localizations\": [\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"updatedBy\": \"<string>\",\n  \"updateDate\": \"<long>\",\n  \"version\": \"<long>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "8c0d00cd-4bc0-4a19-804f-be8c84ad15a8",
                    "name": "/services/unmapped/:tenantId",
                    "request": {
                        "name": "/services/unmapped/:tenantId",
                        "description": {
                            "content": "This API saves a collection of unmapped lookups in RDM tenant according to the JSON object definition. If you need to create just one unmapped lookup value then please specify one JSON object in the array. The same API should be used for create and update operations.<br/><br/>You should use this API when you have lookups from a source but still don't have the corresponding canonical value in the lookup type. Once the canonical value is defined for those unmapped lookups from a source, please use Save Lookup API with the details from unmapped mapping and then delete the unmapped value.<br/><br/>You can create a maximum of <b>100</b> unmapped values in a single request.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "unmapped",
                                ":tenantId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                        "type": "text/plain"
                                    },
                                    "key": "onlyIfNoMapping",
                                    "value": "false"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the RDM tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "b5927df3-b864-4f6a-a091-1f005a2f2b40",
                            "name": "Successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"uri\": \"<string>\",\n  \"value\": {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  \"error\": {\n    \"errorMessage\": \"<string>\",\n    \"errorCode\": \"<integer>\",\n    \"innerErrorData\": {\n      \"innerErrorData\": {\n        \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n      },\n      \"exception\": \"<string>\",\n      \"stack\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  },\n  \"warning\": {\n    \"warningMessage\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f9479704-7232-48a2-be09-b7c67a4ab793",
                            "name": "The operation cannot be performed because user is unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "846fa39c-fa85-4bd6-b909-1c4d76577c9d",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "48ca88e4-353b-4c48-a0ac-8a2211e493f8",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "19faaa79-b660-4414-9901-35b040e66194",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "ad2e89b7-0eaa-43dc-ab87-54cb5dd2b886",
                    "name": "/services/unmapped/:tenantId/:type",
                    "request": {
                        "name": "/services/unmapped/:tenantId/:type",
                        "description": {
                            "content": "This API saves a collection of unmapped lookups in RDM tenant according to the JSON object definition. If you need to create just one unmapped lookup value then please specify one JSON object in the array. The same API should be used for create and update operations.<br/><br/>You should use this API when you have lookups from a source but still don't have the corresponding canonical value in the lookup type. Once the canonical value is defined for those unmapped lookups from a source, please use Save Lookup API with the details from unmapped mapping and then delete the unmapped value.<br/><br/>You can create a maximum of <b>100</b> unmapped values in a single request.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "unmapped",
                                ":tenantId",
                                ":type"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                        "type": "text/plain"
                                    },
                                    "key": "onlyIfNoMapping",
                                    "value": "false"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the RDM tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "type",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Lookup type for which unmapped values must be created",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "ae3dbf77-eaf4-44b4-aefc-c049d3143382",
                            "name": "Successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"uri\": \"<string>\",\n    \"value\": {},\n    \"error\": {\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"innerErrorData\": {\n        \"innerErrorData\": {\n          \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n        },\n        \"exception\": \"<string>\",\n        \"stack\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    \"warning\": {\n      \"warningMessage\": \"<string>\"\n    }\n  },\n  {\n    \"uri\": \"<string>\",\n    \"value\": {},\n    \"error\": {\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"innerErrorData\": {\n        \"innerErrorData\": {\n          \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n        },\n        \"exception\": \"<string>\",\n        \"stack\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    \"warning\": {\n      \"warningMessage\": \"<string>\"\n    }\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b56bac4f-85bb-4834-9f6d-0c66e87cb4d6",
                            "name": "The operation cannot be performed because user is unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "c0dc601c-c813-4458-bd60-2c56401210ed",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "81a00607-4ce9-4a60-a091-79f99489fc1e",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "646a1fb9-c203-4fe4-ad58-612c001b8960",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ]
        }
    ],
    "event": [],
    "variable": [
        {
            "key": "baseUrl",
            "value": "/"
        }
    ],
    "info": {
        "_postman_id": "e7395022-fcc0-490f-b792-7e346abf503c",
        "name": "Ingest",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
        "description": {
            "content": "Load data into entities, relationships, interactions, crosswalks and reference data.\n\nContact Support:\n Name: Reltio\n Email: support@reltio.com",
            "type": "text/plain"
        }
    }
}