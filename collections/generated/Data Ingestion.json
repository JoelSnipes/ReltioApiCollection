{
    "item": [
        {
            "name": "Entities",
            "description": "",
            "item": [
                {
                    "id": "984198cb-37a7-496d-b7f3-5d9e48596efc",
                    "name": "/services/reltio/api/:tenantId/entities",
                    "request": {
                        "name": "/services/reltio/api/:tenantId/entities",
                        "description": {
                            "content": "This API saves a collection of entities in Reltio Platform according to JSON object definition. To create just one entity using this API, specify one JSON object in the array. <br /> If you post an entity with some crosswalks (for example, <b>crosswalk1</b> and <b>crosswalk2</b>), and that entity corresponds to some existing entities (<b>entity1</b> and <b>entity2</b>) in the Reltio Platform, then these entities are merged in one entity referred as the survivor (for example, <b>entity1</b> would be merged in <b>entity2</b>). After this, the resultant survivor entity (for example, <b>entity2</b>) is updated with the new information from a posted entity. If no entities are found or provided in the posted entity crosswalk or no crosswalks are provided, then a new entity is created. <br /><b>Note:</b> If you do not specify roles in the request, then all roles from the entity being overwritten remain unchanged. To remove all roles from the resultant entity specify an empty array of roles in the <b>POST /entities</b> request.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "reltio",
                                "api",
                                ":tenantId",
                                "entities"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Specifies if the response should contain created entities. Default is true.",
                                        "type": "text/plain"
                                    },
                                    "key": "returnObjects",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                        "type": "text/plain"
                                    },
                                    "key": "options",
                                    "value": "preserveHidden,ovOnly"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"aliqua_953\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"velitee3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"aliquip_83\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"mollite41\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nostrud_d\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in0\": \"<string>\",\n          \"eu63\": \"<string>\",\n          \"Lorem633\": \"<string>\",\n          \"dolore_5f0\": \"<string>\",\n          \"aliquip53\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"velita\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"labore_2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "3a4b6ebe-d5f5-458a-8b59-0113a498d394",
                            "name": "Entities are successfully saved",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "preserveHidden,ovOnly"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"aliqua_953\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"velitee3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"aliquip_83\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"mollite41\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nostrud_d\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in0\": \"<string>\",\n          \"eu63\": \"<string>\",\n          \"Lorem633\": \"<string>\",\n          \"dolore_5f0\": \"<string>\",\n          \"aliquip53\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"velita\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"labore_2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"index\": \"<integer>\",\n    \"errors\": {\n      \"severity\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorDetailMessage\": \"<string>\",\n      \"innerErrorData\": {\n        \"exception\": \"<string>\"\n      }\n    },\n    \"object\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"exercitation_0\": \"<string>\",\n            \"nulla2\": \"<string>\",\n            \"cupidatat_be4\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"tempor_8f\": \"<string>\",\n            \"officia_7f\": \"<string>\",\n            \"proident_32c\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<long>\",\n      \"updatedTime\": \"<long>\",\n      \"attributes\": {},\n      \"uri\": \"<string>\",\n      \"type\": \"<string>\",\n      \"analyticsAttributes\": {\n        \"culpa_de4\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"Duis_6\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"laboris3f\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ]\n      },\n      \"secondaryLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"refUpdatedBy\": \"<string>\",\n      \"refUpdatedTime\": \"<long>\",\n      \"refCommitTime\": \"<long>\",\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"successful\": \"<boolean>\"\n  },\n  {\n    \"index\": \"<integer>\",\n    \"errors\": {\n      \"severity\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorDetailMessage\": \"<string>\",\n      \"innerErrorData\": {\n        \"exception\": \"<string>\"\n      }\n    },\n    \"object\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"in_8ec\": \"<string>\",\n            \"adipisicing_9\": \"<string>\",\n            \"qui5db\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"do_c\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<long>\",\n      \"updatedTime\": \"<long>\",\n      \"attributes\": {},\n      \"uri\": \"<string>\",\n      \"type\": \"<string>\",\n      \"analyticsAttributes\": {\n        \"in_3\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ]\n      },\n      \"secondaryLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"refUpdatedBy\": \"<string>\",\n      \"refUpdatedTime\": \"<long>\",\n      \"refCommitTime\": \"<long>\",\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"successful\": \"<boolean>\"\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c4dce785-2778-4f5f-9cd1-5189fba129e8",
                            "name": "Entities aren't saved due to a reason provided in the error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "preserveHidden,ovOnly"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"aliqua_953\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"velitee3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"aliquip_83\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"mollite41\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nostrud_d\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in0\": \"<string>\",\n          \"eu63\": \"<string>\",\n          \"Lorem633\": \"<string>\",\n          \"dolore_5f0\": \"<string>\",\n          \"aliquip53\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"velita\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"labore_2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "89541f7e-36a0-4f6d-8992-50b8e6d0a0fc",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "preserveHidden,ovOnly"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"aliqua_953\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"velitee3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"aliquip_83\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"mollite41\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nostrud_d\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in0\": \"<string>\",\n          \"eu63\": \"<string>\",\n          \"Lorem633\": \"<string>\",\n          \"dolore_5f0\": \"<string>\",\n          \"aliquip53\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"velita\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"labore_2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c3fc1ffe-24e0-4dbc-9b7f-54c5faf866d2",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "preserveHidden,ovOnly"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"aliqua_953\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"velitee3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"aliquip_83\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"mollite41\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nostrud_d\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in0\": \"<string>\",\n          \"eu63\": \"<string>\",\n          \"Lorem633\": \"<string>\",\n          \"dolore_5f0\": \"<string>\",\n          \"aliquip53\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"velita\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"labore_2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ed03d044-0250-4356-8abd-75b85cf632b1",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "preserveHidden,ovOnly"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"aliqua_953\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"velitee3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"aliquip_83\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"mollite41\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nostrud_d\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in0\": \"<string>\",\n          \"eu63\": \"<string>\",\n          \"Lorem633\": \"<string>\",\n          \"dolore_5f0\": \"<string>\",\n          \"aliquip53\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"velita\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"labore_2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "09b01f13-5054-4f37-baf0-13b313bbb571",
                            "name": "Too many requests, please try later",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "preserveHidden,ovOnly"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"aliqua_953\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"velitee3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"aliquip_83\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"mollite41\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nostrud_d\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in0\": \"<string>\",\n          \"eu63\": \"<string>\",\n          \"Lorem633\": \"<string>\",\n          \"dolore_5f0\": \"<string>\",\n          \"aliquip53\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"velita\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"labore_2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Too Many Requests",
                            "code": 429,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "a53044f5-4093-49ff-ac4f-dadaced80637",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "preserveHidden,ovOnly"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"aliqua_953\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"velitee3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"aliquip_83\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"mollite41\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nostrud_d\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in0\": \"<string>\",\n          \"eu63\": \"<string>\",\n          \"Lorem633\": \"<string>\",\n          \"dolore_5f0\": \"<string>\",\n          \"aliquip53\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"velita\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"labore_2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "cf6c61dc-f2ec-4bc1-b03e-ab86b2c2a0a4",
                            "name": "This status code could represent 2 possible scenarios. First, the 'Service Unavailable' scenario. Second, this status code is used when too many requests are being sent in-parallel and API backpressure mechanism was used to protect the platform. In both scenarios, an exponential backoff mechanism should be used to control the rate of requests sent to the server. ",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "preserveHidden,ovOnly"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"aliqua_953\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"velitee3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"aliquip_83\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"mollite41\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nostrud_d\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in0\": \"<string>\",\n          \"eu63\": \"<string>\",\n          \"Lorem633\": \"<string>\",\n          \"dolore_5f0\": \"<string>\",\n          \"aliquip53\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"velita\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"labore_2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a303119c-eb62-4c6f-aeb6-d77d90d2e545",
                            "name": "The request consumes more resources than it is allowed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "preserveHidden,ovOnly"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"aliqua_953\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"velitee3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"aliquip_83\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"mollite41\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nostrud_d\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in0\": \"<string>\",\n          \"eu63\": \"<string>\",\n          \"Lorem633\": \"<string>\",\n          \"dolore_5f0\": \"<string>\",\n          \"aliquip53\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"velita\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"labore_2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Insufficient Storage (WebDAV) (RFC 4918)",
                            "code": 507,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "8780274c-7bf2-4527-83c0-9a70732806dc",
                    "name": "/services/reltio/api/:tenantId/entities/_conditional",
                    "request": {
                        "name": "/services/reltio/api/:tenantId/entities/_conditional",
                        "description": {
                            "content": "This API is an aggregate of Search and Save API.It retrieves the individual entities or searches for multiple entities and based on the search result, this API saves a collection of entities in Reltio Platform according to JSON object definition. ",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "reltio",
                                "api",
                                ":tenantId",
                                "entities",
                                "_conditional"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Enables entities filtering by a condition. Format for filter query parameter: filter=({Condition Type}[AND/OR {Condition Type}]*).\nFor more information, please visit https://docs.reltio.com",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Comma-separated list of properties from object structure that should be returned in a response. Allows you to return a partial object. List of object properties you can find at the response model. Additional system properties are:<ul><li>attributes._lookupCodes: return codes for lookup attributes.</li><li>attributes._lookupValues: return values for lookup attributes.</li></ul>",
                                        "type": "text/plain"
                                    },
                                    "key": "select",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Positive Integer value to identify maximum number of entities to return in a response. Can be used to organize pagination in combination with the \"offset\" parameter.",
                                        "type": "text/plain"
                                    },
                                    "key": "max",
                                    "value": "50"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Positive Integer value to identify starting what element in a result set should be returned in a response. Can be used to organize pagination in combination with the max parameter.",
                                        "type": "text/plain"
                                    },
                                    "key": "offset",
                                    "value": "0"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Entity objects property that should be used for sorting. Can be used in combination with the \"order\" parameter to have reverse order. If this parameter is not provided or if the value cannot be recognized, then no sorting is used.",
                                        "type": "text/plain"
                                    },
                                    "key": "sort",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Order of sorting. Applicable only in combination with the sort parameter. Possible values:\n<ul><li>asc - results are shown in ascending order.</li><li>desc - results are shown in descending order.</li></ul>",
                                        "type": "text/plain"
                                    },
                                    "key": "order",
                                    "value": "asc"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Specifies maximum number of values listed in attributes. This restriction is intended for more efficient responses in the case of very long lists of values in some attributes.",
                                        "type": "text/plain"
                                    },
                                    "key": "defaultMaxValues",
                                    "value": "<int>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "When set to true, documents with search hits in labels get more search relevance score.",
                                        "type": "text/plain"
                                    },
                                    "key": "scoreEnabled",
                                    "value": "false"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Defines whether to include active and expired entities into the results. By default, only active entities are included in the response. Possible values:\n<ul><li>all - include both active and expired entities</li><li>active - include only active entities</li><li>not_active - include only expired entities</li></ul>",
                                        "type": "text/plain"
                                    },
                                    "key": "activeness",
                                    "value": "active"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Specifies if the response should contain created entities. Default is true.",
                                        "type": "text/plain"
                                    },
                                    "key": "returnObjects",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                        "type": "text/plain"
                                    },
                                    "key": "options",
                                    "value": "preserveHidden,ovOnly"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Specifies if the system should apply the request body depending on search results. Default is true.",
                                        "type": "text/plain"
                                    },
                                    "key": "applyIfNoMatches",
                                    "value": "true"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Specifies if the system should return the search results in the response. Default is true.",
                                        "type": "text/plain"
                                    },
                                    "key": "returnMatches",
                                    "value": "true"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"aliqua_953\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"velitee3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"aliquip_83\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"mollite41\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nostrud_d\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in0\": \"<string>\",\n          \"eu63\": \"<string>\",\n          \"Lorem633\": \"<string>\",\n          \"dolore_5f0\": \"<string>\",\n          \"aliquip53\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"velita\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"labore_2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "2636c65e-c172-43fb-9889-e6fd5886dbd6",
                            "name": "successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities",
                                        "_conditional"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Enables entities filtering by a condition. Format for filter query parameter: filter=({Condition Type}[AND/OR {Condition Type}]*).\nFor more information, please visit https://docs.reltio.com",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of properties from object structure that should be returned in a response. Allows you to return a partial object. List of object properties you can find at the response model. Additional system properties are:<ul><li>attributes._lookupCodes: return codes for lookup attributes.</li><li>attributes._lookupValues: return values for lookup attributes.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "select",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Positive Integer value to identify maximum number of entities to return in a response. Can be used to organize pagination in combination with the \"offset\" parameter.",
                                                "type": "text/plain"
                                            },
                                            "key": "max",
                                            "value": "50"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Positive Integer value to identify starting what element in a result set should be returned in a response. Can be used to organize pagination in combination with the max parameter.",
                                                "type": "text/plain"
                                            },
                                            "key": "offset",
                                            "value": "0"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Entity objects property that should be used for sorting. Can be used in combination with the \"order\" parameter to have reverse order. If this parameter is not provided or if the value cannot be recognized, then no sorting is used.",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Order of sorting. Applicable only in combination with the sort parameter. Possible values:\n<ul><li>asc - results are shown in ascending order.</li><li>desc - results are shown in descending order.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "order",
                                            "value": "asc"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies maximum number of values listed in attributes. This restriction is intended for more efficient responses in the case of very long lists of values in some attributes.",
                                                "type": "text/plain"
                                            },
                                            "key": "defaultMaxValues",
                                            "value": "<int>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "When set to true, documents with search hits in labels get more search relevance score.",
                                                "type": "text/plain"
                                            },
                                            "key": "scoreEnabled",
                                            "value": "false"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines whether to include active and expired entities into the results. By default, only active entities are included in the response. Possible values:\n<ul><li>all - include both active and expired entities</li><li>active - include only active entities</li><li>not_active - include only expired entities</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "activeness",
                                            "value": "active"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "preserveHidden,ovOnly"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the system should apply the request body depending on search results. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "applyIfNoMatches",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the system should return the search results in the response. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnMatches",
                                            "value": "true"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"aliqua_953\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"velitee3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"aliquip_83\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"mollite41\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nostrud_d\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in0\": \"<string>\",\n          \"eu63\": \"<string>\",\n          \"Lorem633\": \"<string>\",\n          \"dolore_5f0\": \"<string>\",\n          \"aliquip53\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"velita\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"labore_2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"index\": \"<integer>\",\n    \"errors\": {\n      \"severity\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorDetailMessage\": \"<string>\",\n      \"innerErrorData\": {\n        \"exception\": \"<string>\"\n      }\n    },\n    \"object\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"exercitation_0\": \"<string>\",\n            \"nulla2\": \"<string>\",\n            \"cupidatat_be4\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"tempor_8f\": \"<string>\",\n            \"officia_7f\": \"<string>\",\n            \"proident_32c\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<long>\",\n      \"updatedTime\": \"<long>\",\n      \"attributes\": {},\n      \"uri\": \"<string>\",\n      \"type\": \"<string>\",\n      \"analyticsAttributes\": {\n        \"culpa_de4\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"Duis_6\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"laboris3f\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ]\n      },\n      \"secondaryLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"refUpdatedBy\": \"<string>\",\n      \"refUpdatedTime\": \"<long>\",\n      \"refCommitTime\": \"<long>\",\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"successful\": \"<boolean>\"\n  },\n  {\n    \"index\": \"<integer>\",\n    \"errors\": {\n      \"severity\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorDetailMessage\": \"<string>\",\n      \"innerErrorData\": {\n        \"exception\": \"<string>\"\n      }\n    },\n    \"object\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"in_8ec\": \"<string>\",\n            \"adipisicing_9\": \"<string>\",\n            \"qui5db\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"do_c\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<long>\",\n      \"updatedTime\": \"<long>\",\n      \"attributes\": {},\n      \"uri\": \"<string>\",\n      \"type\": \"<string>\",\n      \"analyticsAttributes\": {\n        \"in_3\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ]\n      },\n      \"secondaryLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"refUpdatedBy\": \"<string>\",\n      \"refUpdatedTime\": \"<long>\",\n      \"refCommitTime\": \"<long>\",\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"successful\": \"<boolean>\"\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ]
        },
        {
            "name": "Interactions",
            "description": "",
            "item": [
                {
                    "id": "1d362188-17a6-4f36-af1f-408523013ae8",
                    "name": "/services/reltio/api/:tenantId/interactions",
                    "request": {
                        "name": "/services/reltio/api/:tenantId/interactions",
                        "description": {
                            "content": "This API creates a collection of interactions in the Reltio Platform according to the JSON object definition. To create just one interaction using this API, specify one JSON object in the array.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "reltio",
                                "api",
                                ":tenantId",
                                "interactions"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "This parameter indicates the identifier of an interaction object in the source system",
                                        "type": "text/plain"
                                    },
                                    "key": "crosswalkValue",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "This parameter specifies if the response must contain the created objects",
                                        "type": "text/plain"
                                    },
                                    "key": "returnObjects",
                                    "value": "true"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                        "type": "text/plain"
                                    },
                                    "key": "options",
                                    "value": "sendHidden,sendHidden"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "disabled": false,
                                "description": {
                                    "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                    "type": "text/plain"
                                },
                                "key": "Source-System",
                                "value": "<string>"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"autebe\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"elit7cf\": \"<string>\",\n          \"dolor_48\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": -41769031,\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequatb\": \"<string>\",\n          \"adipisicing2f\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in_2b\": \"<string>\",\n          \"consecteture5a\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"dolor in ut do anim\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "3644dd1d-1528-4d11-ba8f-1f35bedf69b5",
                            "name": "Successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"autebe\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"elit7cf\": \"<string>\",\n          \"dolor_48\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": -41769031,\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequatb\": \"<string>\",\n          \"adipisicing2f\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in_2b\": \"<string>\",\n          \"consecteture5a\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"dolor in ut do anim\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"index\": \"<integer>\",\n    \"errors\": {\n      \"severity\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorDetailMessage\": \"<string>\",\n      \"innerErrorData\": {\n        \"exception\": \"<string>\"\n      }\n    },\n    \"object\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"dolore004\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"exercitation_9\": \"<string>\",\n            \"et_3a6\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<long>\",\n      \"updatedTime\": \"<long>\",\n      \"attributes\": {},\n      \"members\": {},\n      \"timestamp\": 37755204,\n      \"uri\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"successful\": \"<boolean>\"\n  },\n  {\n    \"index\": \"<integer>\",\n    \"errors\": {\n      \"severity\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorDetailMessage\": \"<string>\",\n      \"innerErrorData\": {\n        \"exception\": \"<string>\"\n      }\n    },\n    \"object\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"anim99\": \"<string>\",\n            \"proidentfd5\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"laborisac\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<long>\",\n      \"updatedTime\": \"<long>\",\n      \"attributes\": {},\n      \"members\": {},\n      \"timestamp\": \"occaecat deserunt aliqua ea in\",\n      \"uri\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"successful\": \"<boolean>\"\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "47994b5d-758a-4226-88cf-da19ef51a40f",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"autebe\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"elit7cf\": \"<string>\",\n          \"dolor_48\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": -41769031,\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequatb\": \"<string>\",\n          \"adipisicing2f\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in_2b\": \"<string>\",\n          \"consecteture5a\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"dolor in ut do anim\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5c390f68-404b-4afc-90f1-61f9ade08737",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"autebe\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"elit7cf\": \"<string>\",\n          \"dolor_48\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": -41769031,\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequatb\": \"<string>\",\n          \"adipisicing2f\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in_2b\": \"<string>\",\n          \"consecteture5a\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"dolor in ut do anim\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "13554184-d098-453c-a243-af84973ac590",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"autebe\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"elit7cf\": \"<string>\",\n          \"dolor_48\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": -41769031,\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequatb\": \"<string>\",\n          \"adipisicing2f\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in_2b\": \"<string>\",\n          \"consecteture5a\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"dolor in ut do anim\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c5946d6c-2f34-4311-a0fc-eccebf3a4f3a",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"autebe\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"elit7cf\": \"<string>\",\n          \"dolor_48\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": -41769031,\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequatb\": \"<string>\",\n          \"adipisicing2f\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in_2b\": \"<string>\",\n          \"consecteture5a\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"dolor in ut do anim\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9adf2554-4714-4f79-8b04-d9137ca3d899",
                            "name": "Too many requests, please try later",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"autebe\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"elit7cf\": \"<string>\",\n          \"dolor_48\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": -41769031,\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequatb\": \"<string>\",\n          \"adipisicing2f\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in_2b\": \"<string>\",\n          \"consecteture5a\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"dolor in ut do anim\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Too Many Requests",
                            "code": 429,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "1b397785-feb4-45d7-bdac-7da89d31198e",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"autebe\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"elit7cf\": \"<string>\",\n          \"dolor_48\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": -41769031,\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequatb\": \"<string>\",\n          \"adipisicing2f\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in_2b\": \"<string>\",\n          \"consecteture5a\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"dolor in ut do anim\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6b2d8937-7e8b-46b9-b817-5b35b6d28d7a",
                            "name": "This status code could represent 2 possible scenarios. First, the 'Service Unavailable' scenario. Second, this status code is used when too many requests are being sent in-parallel and API backpressure mechanism was used to protect the platform. In both scenarios, an exponential backoff mechanism should be used to control the rate of requests sent to the server. ",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"autebe\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"elit7cf\": \"<string>\",\n          \"dolor_48\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": -41769031,\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequatb\": \"<string>\",\n          \"adipisicing2f\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in_2b\": \"<string>\",\n          \"consecteture5a\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"dolor in ut do anim\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "31a8ed9e-758a-43c7-9fa6-6cb30454ee3d",
                            "name": "The request consumes more resources than it is allowed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"autebe\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"elit7cf\": \"<string>\",\n          \"dolor_48\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": -41769031,\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequatb\": \"<string>\",\n          \"adipisicing2f\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in_2b\": \"<string>\",\n          \"consecteture5a\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"dolor in ut do anim\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Insufficient Storage (WebDAV) (RFC 4918)",
                            "code": 507,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ]
        },
        {
            "name": "Relationships",
            "description": "",
            "item": [
                {
                    "id": "9876b84a-b890-4c7b-8286-984a07f247fd",
                    "name": "/services/reltio/api/:tenantId/relations",
                    "request": {
                        "name": "/services/reltio/api/:tenantId/relations",
                        "description": {
                            "content": "This API saves a collection of relations in the Reltio Platform according to the JSON object definition or to create just one relation using this API, specify one JSON object in the array. You can use the referenced <b>entityURI</b> or referenced entity crosswalk to describe the <b>startObject</b> and/or the <b>endObject</b>. <br>When a new relation is created with URIs for start and end objects, inconsistencies may appear if the relation is created with empty crosswalks inside the <b>startObject</b> and <b>endObject</b> sections. If the <b>connectRelationsToDefaultCrosswalk</b> property available in the physical configuration is enabled and then you create a relation, the <b>startObject</b> and <b>endObject</b> sections are filled with the default crosswalks automatically.</br> <br><b>Note:</b> A crosswalk with the source, which is equal to the value of the default crosswalk in the physical configuration (default value is <b>Reltio</b>), and <b>value=<entity_id></b> is considered as the default crosswalk.</br><br>If the <b>connectRelationsToDefaultCrosswalk</b> property is set to <b>true</b> when a relation is created with empty crosswalks for the start and end objects of the relation, the following rules are applied:<ul><li>If the start entity has a Reltio crosswalk with the same value as its ID, this crosswalk is used as the crosswalk for the start object in the relation. Else, a new Reltio crosswalk with the value equal to the entity ID is created. This new crosswalk is added to the winner contributor of the start entity and the start object of the relation is connected to this new Reltio crosswalk.</li><li>The behavior is the same for the end entity. If the end entity has a Reltio crosswalk with the same value as its ID, this crosswalk is used as the crosswalk for the end object in the relation. Else, a new Reltio crosswalk with the value equal to the entity ID is created. This new crosswalk is added to the winner contributor of the end entity and the end object of the relation is connected to this new Reltio crosswalk.</li></ul></br>",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "reltio",
                                "api",
                                ":tenantId",
                                "relations"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Specifies if the response should contain created relations. Default is true.",
                                        "type": "text/plain"
                                    },
                                    "key": "returnObjects",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                        "type": "text/plain"
                                    },
                                    "key": "options",
                                    "value": "partialOverride,rejectRelationsToInactiveObjects"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"tempor_f87\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ex_362\": \"<string>\",\n          \"Excepteur_cb\": \"<string>\",\n          \"eiusmod_c07\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"laborum96\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"adipisicing_c3\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"reprehenderit_\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"deseruntfcd\": \"<string>\",\n            \"aliquipc94\": \"<string>\",\n            \"non11\": \"<string>\",\n            \"dolor64f\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"dolore_6\": \"<string>\",\n            \"incididunt_8\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"laborum_3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consectetur_d\": \"<string>\",\n          \"sedece\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"sit_cb\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"occaecat1d5\": \"<string>\",\n            \"ide1\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"magna746\": \"<string>\",\n            \"amet_75\": \"<string>\",\n            \"Ut_c9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"fugiat_46\": \"<string>\",\n            \"dolor_b5b\": \"<string>\",\n            \"non9\": \"<string>\",\n            \"veniam8\": \"<string>\",\n            \"officiaac\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"minim_e\": \"<string>\",\n            \"anim3d\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "3540c778-e9a8-48af-9039-55477f8d40d0",
                            "name": "Relationships are successfully saved",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "partialOverride,rejectRelationsToInactiveObjects"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"tempor_f87\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ex_362\": \"<string>\",\n          \"Excepteur_cb\": \"<string>\",\n          \"eiusmod_c07\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"laborum96\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"adipisicing_c3\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"reprehenderit_\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"deseruntfcd\": \"<string>\",\n            \"aliquipc94\": \"<string>\",\n            \"non11\": \"<string>\",\n            \"dolor64f\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"dolore_6\": \"<string>\",\n            \"incididunt_8\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"laborum_3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consectetur_d\": \"<string>\",\n          \"sedece\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"sit_cb\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"occaecat1d5\": \"<string>\",\n            \"ide1\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"magna746\": \"<string>\",\n            \"amet_75\": \"<string>\",\n            \"Ut_c9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"fugiat_46\": \"<string>\",\n            \"dolor_b5b\": \"<string>\",\n            \"non9\": \"<string>\",\n            \"veniam8\": \"<string>\",\n            \"officiaac\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"minim_e\": \"<string>\",\n            \"anim3d\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"index\": \"<integer>\",\n    \"errors\": {\n      \"severity\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorDetailMessage\": \"<string>\",\n      \"innerErrorData\": {\n        \"exception\": \"<string>\"\n      }\n    },\n    \"object\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"ex_1\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"ut_050\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<long>\",\n      \"updatedTime\": \"<long>\",\n      \"startEntityTO\": {},\n      \"endEntityTO\": {},\n      \"attributes\": {},\n      \"uri\": \"<string>\",\n      \"type\": \"<string>\",\n      \"startRefPinned\": \"<boolean>\",\n      \"analyticsAttributes\": {\n        \"reprehenderit_1\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"ullamco1\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"adipisicing_19f\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"in_ef\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ]\n      },\n      \"endRefPinned\": \"<boolean>\",\n      \"endRefIgnored\": \"<boolean>\",\n      \"startRefIgnored\": \"<boolean>\",\n      \"refUpdatedBy\": \"<string>\",\n      \"refUpdatedTime\": \"<long>\",\n      \"refCommitTime\": \"<long>\",\n      \"startObject\": {\n        \"crosswalks\": [\n          {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"sourceTable\": \"<string>\",\n            \"url\": \"<string>\",\n            \"createDate\": \"<dateTime>\",\n            \"updateDate\": \"<dateTime>\",\n            \"reltioLoadDate\": \"<dateTime>\",\n            \"deleteDate\": \"<string>\",\n            \"crosswalkExternalInfo\": {\n              \"dtssInfo\": {\n                \"tenantId\": \"<string>\",\n                \"operationId\": \"<string>\",\n                \"matchReasons\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"updatedBy\": \"<string>\",\n                \"updatedTime\": \"<long>\",\n                \"status\": \"<string>\",\n                \"matchRuleUris\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              }\n            },\n            \"singleAttributeUpdateDates\": {\n              \"dolorf\": \"<string>\",\n              \"ad_1b1\": \"<string>\"\n            },\n            \"attributes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dataProvider\": \"<boolean>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"sourceTable\": \"<string>\",\n            \"url\": \"<string>\",\n            \"createDate\": \"<dateTime>\",\n            \"updateDate\": \"<dateTime>\",\n            \"reltioLoadDate\": \"<dateTime>\",\n            \"deleteDate\": \"<string>\",\n            \"crosswalkExternalInfo\": {\n              \"dtssInfo\": {\n                \"tenantId\": \"<string>\",\n                \"operationId\": \"<string>\",\n                \"matchReasons\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"updatedBy\": \"<string>\",\n                \"updatedTime\": \"<long>\",\n                \"status\": \"<string>\",\n                \"matchRuleUris\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              }\n            },\n            \"singleAttributeUpdateDates\": {\n              \"in_b0\": \"<string>\",\n              \"fugiat_2b5\": \"<string>\"\n            },\n            \"attributes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dataProvider\": \"<boolean>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"directionalLabel\": \"<string>\",\n        \"label\": \"<string>\",\n        \"objectURI\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      \"endObject\": {\n        \"crosswalks\": [\n          {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"sourceTable\": \"<string>\",\n            \"url\": \"<string>\",\n            \"createDate\": \"<dateTime>\",\n            \"updateDate\": \"<dateTime>\",\n            \"reltioLoadDate\": \"<dateTime>\",\n            \"deleteDate\": \"<string>\",\n            \"crosswalkExternalInfo\": {\n              \"dtssInfo\": {\n                \"tenantId\": \"<string>\",\n                \"operationId\": \"<string>\",\n                \"matchReasons\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"updatedBy\": \"<string>\",\n                \"updatedTime\": \"<long>\",\n                \"status\": \"<string>\",\n                \"matchRuleUris\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              }\n            },\n            \"singleAttributeUpdateDates\": {\n              \"qui_0\": \"<string>\",\n              \"cupidatat9ca\": \"<string>\",\n              \"in7\": \"<string>\",\n              \"in406\": \"<string>\",\n              \"dolore_c5\": \"<string>\"\n            },\n            \"attributes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dataProvider\": \"<boolean>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"sourceTable\": \"<string>\",\n            \"url\": \"<string>\",\n            \"createDate\": \"<dateTime>\",\n            \"updateDate\": \"<dateTime>\",\n            \"reltioLoadDate\": \"<dateTime>\",\n            \"deleteDate\": \"<string>\",\n            \"crosswalkExternalInfo\": {\n              \"dtssInfo\": {\n                \"tenantId\": \"<string>\",\n                \"operationId\": \"<string>\",\n                \"matchReasons\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"updatedBy\": \"<string>\",\n                \"updatedTime\": \"<long>\",\n                \"status\": \"<string>\",\n                \"matchRuleUris\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              }\n            },\n            \"singleAttributeUpdateDates\": {\n              \"id_75d\": \"<string>\",\n              \"eta4f\": \"<string>\",\n              \"sinta_\": \"<string>\"\n            },\n            \"attributes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dataProvider\": \"<boolean>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"directionalLabel\": \"<string>\",\n        \"label\": \"<string>\",\n        \"objectURI\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    \"successful\": \"<boolean>\"\n  },\n  {\n    \"index\": \"<integer>\",\n    \"errors\": {\n      \"severity\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorDetailMessage\": \"<string>\",\n      \"innerErrorData\": {\n        \"exception\": \"<string>\"\n      }\n    },\n    \"object\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"cillumb1\": \"<string>\",\n            \"minimfcd\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"incididunt_b\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<long>\",\n      \"updatedTime\": \"<long>\",\n      \"startEntityTO\": {},\n      \"endEntityTO\": {},\n      \"attributes\": {},\n      \"uri\": \"<string>\",\n      \"type\": \"<string>\",\n      \"startRefPinned\": \"<boolean>\",\n      \"analyticsAttributes\": {\n        \"enim_89\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"sit_6\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ]\n      },\n      \"endRefPinned\": \"<boolean>\",\n      \"endRefIgnored\": \"<boolean>\",\n      \"startRefIgnored\": \"<boolean>\",\n      \"refUpdatedBy\": \"<string>\",\n      \"refUpdatedTime\": \"<long>\",\n      \"refCommitTime\": \"<long>\",\n      \"startObject\": {\n        \"crosswalks\": [\n          {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"sourceTable\": \"<string>\",\n            \"url\": \"<string>\",\n            \"createDate\": \"<dateTime>\",\n            \"updateDate\": \"<dateTime>\",\n            \"reltioLoadDate\": \"<dateTime>\",\n            \"deleteDate\": \"<string>\",\n            \"crosswalkExternalInfo\": {\n              \"dtssInfo\": {\n                \"tenantId\": \"<string>\",\n                \"operationId\": \"<string>\",\n                \"matchReasons\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"updatedBy\": \"<string>\",\n                \"updatedTime\": \"<long>\",\n                \"status\": \"<string>\",\n                \"matchRuleUris\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              }\n            },\n            \"singleAttributeUpdateDates\": {\n              \"sunt9\": \"<string>\",\n              \"est_df1\": \"<string>\"\n            },\n            \"attributes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dataProvider\": \"<boolean>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"sourceTable\": \"<string>\",\n            \"url\": \"<string>\",\n            \"createDate\": \"<dateTime>\",\n            \"updateDate\": \"<dateTime>\",\n            \"reltioLoadDate\": \"<dateTime>\",\n            \"deleteDate\": \"<string>\",\n            \"crosswalkExternalInfo\": {\n              \"dtssInfo\": {\n                \"tenantId\": \"<string>\",\n                \"operationId\": \"<string>\",\n                \"matchReasons\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"updatedBy\": \"<string>\",\n                \"updatedTime\": \"<long>\",\n                \"status\": \"<string>\",\n                \"matchRuleUris\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              }\n            },\n            \"singleAttributeUpdateDates\": {\n              \"aute_5\": \"<string>\",\n              \"ut_4\": \"<string>\"\n            },\n            \"attributes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dataProvider\": \"<boolean>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"directionalLabel\": \"<string>\",\n        \"label\": \"<string>\",\n        \"objectURI\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      \"endObject\": {\n        \"crosswalks\": [\n          {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"sourceTable\": \"<string>\",\n            \"url\": \"<string>\",\n            \"createDate\": \"<dateTime>\",\n            \"updateDate\": \"<dateTime>\",\n            \"reltioLoadDate\": \"<dateTime>\",\n            \"deleteDate\": \"<string>\",\n            \"crosswalkExternalInfo\": {\n              \"dtssInfo\": {\n                \"tenantId\": \"<string>\",\n                \"operationId\": \"<string>\",\n                \"matchReasons\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"updatedBy\": \"<string>\",\n                \"updatedTime\": \"<long>\",\n                \"status\": \"<string>\",\n                \"matchRuleUris\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              }\n            },\n            \"singleAttributeUpdateDates\": {\n              \"cillum_6a\": \"<string>\"\n            },\n            \"attributes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dataProvider\": \"<boolean>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"sourceTable\": \"<string>\",\n            \"url\": \"<string>\",\n            \"createDate\": \"<dateTime>\",\n            \"updateDate\": \"<dateTime>\",\n            \"reltioLoadDate\": \"<dateTime>\",\n            \"deleteDate\": \"<string>\",\n            \"crosswalkExternalInfo\": {\n              \"dtssInfo\": {\n                \"tenantId\": \"<string>\",\n                \"operationId\": \"<string>\",\n                \"matchReasons\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"updatedBy\": \"<string>\",\n                \"updatedTime\": \"<long>\",\n                \"status\": \"<string>\",\n                \"matchRuleUris\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              }\n            },\n            \"singleAttributeUpdateDates\": {\n              \"Ut54d\": \"<string>\",\n              \"magna_9\": \"<string>\"\n            },\n            \"attributes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dataProvider\": \"<boolean>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"directionalLabel\": \"<string>\",\n        \"label\": \"<string>\",\n        \"objectURI\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    \"successful\": \"<boolean>\"\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "56a4dca2-864c-4a4e-8706-f2c635297bbc",
                            "name": "Relationships aren't saved due to a reason provided in the error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "partialOverride,rejectRelationsToInactiveObjects"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"tempor_f87\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ex_362\": \"<string>\",\n          \"Excepteur_cb\": \"<string>\",\n          \"eiusmod_c07\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"laborum96\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"adipisicing_c3\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"reprehenderit_\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"deseruntfcd\": \"<string>\",\n            \"aliquipc94\": \"<string>\",\n            \"non11\": \"<string>\",\n            \"dolor64f\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"dolore_6\": \"<string>\",\n            \"incididunt_8\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"laborum_3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consectetur_d\": \"<string>\",\n          \"sedece\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"sit_cb\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"occaecat1d5\": \"<string>\",\n            \"ide1\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"magna746\": \"<string>\",\n            \"amet_75\": \"<string>\",\n            \"Ut_c9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"fugiat_46\": \"<string>\",\n            \"dolor_b5b\": \"<string>\",\n            \"non9\": \"<string>\",\n            \"veniam8\": \"<string>\",\n            \"officiaac\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"minim_e\": \"<string>\",\n            \"anim3d\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "71cd68ef-a827-40e5-9ddf-c066a930b538",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "partialOverride,rejectRelationsToInactiveObjects"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"tempor_f87\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ex_362\": \"<string>\",\n          \"Excepteur_cb\": \"<string>\",\n          \"eiusmod_c07\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"laborum96\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"adipisicing_c3\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"reprehenderit_\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"deseruntfcd\": \"<string>\",\n            \"aliquipc94\": \"<string>\",\n            \"non11\": \"<string>\",\n            \"dolor64f\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"dolore_6\": \"<string>\",\n            \"incididunt_8\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"laborum_3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consectetur_d\": \"<string>\",\n          \"sedece\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"sit_cb\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"occaecat1d5\": \"<string>\",\n            \"ide1\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"magna746\": \"<string>\",\n            \"amet_75\": \"<string>\",\n            \"Ut_c9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"fugiat_46\": \"<string>\",\n            \"dolor_b5b\": \"<string>\",\n            \"non9\": \"<string>\",\n            \"veniam8\": \"<string>\",\n            \"officiaac\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"minim_e\": \"<string>\",\n            \"anim3d\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ba1e4df3-6a42-46f7-bb74-ec05989f2ef7",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "partialOverride,rejectRelationsToInactiveObjects"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"tempor_f87\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ex_362\": \"<string>\",\n          \"Excepteur_cb\": \"<string>\",\n          \"eiusmod_c07\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"laborum96\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"adipisicing_c3\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"reprehenderit_\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"deseruntfcd\": \"<string>\",\n            \"aliquipc94\": \"<string>\",\n            \"non11\": \"<string>\",\n            \"dolor64f\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"dolore_6\": \"<string>\",\n            \"incididunt_8\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"laborum_3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consectetur_d\": \"<string>\",\n          \"sedece\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"sit_cb\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"occaecat1d5\": \"<string>\",\n            \"ide1\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"magna746\": \"<string>\",\n            \"amet_75\": \"<string>\",\n            \"Ut_c9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"fugiat_46\": \"<string>\",\n            \"dolor_b5b\": \"<string>\",\n            \"non9\": \"<string>\",\n            \"veniam8\": \"<string>\",\n            \"officiaac\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"minim_e\": \"<string>\",\n            \"anim3d\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "32312ed8-2f53-4130-a0f6-850218f9659d",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "partialOverride,rejectRelationsToInactiveObjects"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"tempor_f87\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ex_362\": \"<string>\",\n          \"Excepteur_cb\": \"<string>\",\n          \"eiusmod_c07\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"laborum96\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"adipisicing_c3\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"reprehenderit_\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"deseruntfcd\": \"<string>\",\n            \"aliquipc94\": \"<string>\",\n            \"non11\": \"<string>\",\n            \"dolor64f\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"dolore_6\": \"<string>\",\n            \"incididunt_8\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"laborum_3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consectetur_d\": \"<string>\",\n          \"sedece\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"sit_cb\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"occaecat1d5\": \"<string>\",\n            \"ide1\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"magna746\": \"<string>\",\n            \"amet_75\": \"<string>\",\n            \"Ut_c9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"fugiat_46\": \"<string>\",\n            \"dolor_b5b\": \"<string>\",\n            \"non9\": \"<string>\",\n            \"veniam8\": \"<string>\",\n            \"officiaac\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"minim_e\": \"<string>\",\n            \"anim3d\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b072fc70-d324-494f-a610-ef802b06286c",
                            "name": "Too many requests, please try later",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "partialOverride,rejectRelationsToInactiveObjects"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"tempor_f87\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ex_362\": \"<string>\",\n          \"Excepteur_cb\": \"<string>\",\n          \"eiusmod_c07\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"laborum96\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"adipisicing_c3\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"reprehenderit_\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"deseruntfcd\": \"<string>\",\n            \"aliquipc94\": \"<string>\",\n            \"non11\": \"<string>\",\n            \"dolor64f\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"dolore_6\": \"<string>\",\n            \"incididunt_8\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"laborum_3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consectetur_d\": \"<string>\",\n          \"sedece\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"sit_cb\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"occaecat1d5\": \"<string>\",\n            \"ide1\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"magna746\": \"<string>\",\n            \"amet_75\": \"<string>\",\n            \"Ut_c9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"fugiat_46\": \"<string>\",\n            \"dolor_b5b\": \"<string>\",\n            \"non9\": \"<string>\",\n            \"veniam8\": \"<string>\",\n            \"officiaac\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"minim_e\": \"<string>\",\n            \"anim3d\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Too Many Requests",
                            "code": 429,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "21e8212a-6aa9-4c7a-a498-a26490628be1",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "partialOverride,rejectRelationsToInactiveObjects"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"tempor_f87\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ex_362\": \"<string>\",\n          \"Excepteur_cb\": \"<string>\",\n          \"eiusmod_c07\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"laborum96\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"adipisicing_c3\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"reprehenderit_\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"deseruntfcd\": \"<string>\",\n            \"aliquipc94\": \"<string>\",\n            \"non11\": \"<string>\",\n            \"dolor64f\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"dolore_6\": \"<string>\",\n            \"incididunt_8\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"laborum_3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consectetur_d\": \"<string>\",\n          \"sedece\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"sit_cb\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"occaecat1d5\": \"<string>\",\n            \"ide1\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"magna746\": \"<string>\",\n            \"amet_75\": \"<string>\",\n            \"Ut_c9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"fugiat_46\": \"<string>\",\n            \"dolor_b5b\": \"<string>\",\n            \"non9\": \"<string>\",\n            \"veniam8\": \"<string>\",\n            \"officiaac\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"minim_e\": \"<string>\",\n            \"anim3d\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "cdbab7c1-72d5-4b8d-bae3-ce9995c99b0f",
                            "name": "This status code could represent 2 possible scenarios. First, the 'Service Unavailable' scenario. Second, this status code is used when too many requests are being sent in-parallel and API backpressure mechanism was used to protect the platform. In both scenarios, an exponential backoff mechanism should be used to control the rate of requests sent to the server. ",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "partialOverride,rejectRelationsToInactiveObjects"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"tempor_f87\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ex_362\": \"<string>\",\n          \"Excepteur_cb\": \"<string>\",\n          \"eiusmod_c07\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"laborum96\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"adipisicing_c3\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"reprehenderit_\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"deseruntfcd\": \"<string>\",\n            \"aliquipc94\": \"<string>\",\n            \"non11\": \"<string>\",\n            \"dolor64f\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"dolore_6\": \"<string>\",\n            \"incididunt_8\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"laborum_3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consectetur_d\": \"<string>\",\n          \"sedece\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"sit_cb\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"occaecat1d5\": \"<string>\",\n            \"ide1\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"magna746\": \"<string>\",\n            \"amet_75\": \"<string>\",\n            \"Ut_c9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"fugiat_46\": \"<string>\",\n            \"dolor_b5b\": \"<string>\",\n            \"non9\": \"<string>\",\n            \"veniam8\": \"<string>\",\n            \"officiaac\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"minim_e\": \"<string>\",\n            \"anim3d\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "923603eb-1246-4a6f-8cd2-27cdc47f1a7f",
                            "name": "The request consumes more resources than it is allowed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "partialOverride,rejectRelationsToInactiveObjects"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"tempor_f87\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ex_362\": \"<string>\",\n          \"Excepteur_cb\": \"<string>\",\n          \"eiusmod_c07\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"laborum96\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"adipisicing_c3\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"reprehenderit_\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"deseruntfcd\": \"<string>\",\n            \"aliquipc94\": \"<string>\",\n            \"non11\": \"<string>\",\n            \"dolor64f\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"dolore_6\": \"<string>\",\n            \"incididunt_8\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"laborum_3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consectetur_d\": \"<string>\",\n          \"sedece\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"sit_cb\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"occaecat1d5\": \"<string>\",\n            \"ide1\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"magna746\": \"<string>\",\n            \"amet_75\": \"<string>\",\n            \"Ut_c9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"fugiat_46\": \"<string>\",\n            \"dolor_b5b\": \"<string>\",\n            \"non9\": \"<string>\",\n            \"veniam8\": \"<string>\",\n            \"officiaac\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"minim_e\": \"<string>\",\n            \"anim3d\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Insufficient Storage (WebDAV) (RFC 4918)",
                            "code": 507,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ]
        },
        {
            "name": "Data Load Job",
            "description": "",
            "item": [
                {
                    "id": "b883fc11-57c0-4039-82ec-68b23238adbe",
                    "name": "/services/dataloader/api/:tenantId/_mapping",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/_mapping",
                        "description": {
                            "content": "Creates a new mapping for an object type. For creating the mapping, you must provide details for 'object type', 'summary', 'name', and 'object type URI'",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "_mapping"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "0a2e6fee-8d01-4eb4-98f9-3bf7bd161e3c",
                            "name": "Mapping is created successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "860c15ea-41c6-41bd-9632-da73c5eb8839",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6f14ca35-040a-4da8-b715-3aec69aeb659",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "aea9ba42-e200-45d8-9df1-c4d6c1e5a2cf",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "68873397-5c28-4744-a9fb-2ad893609e8e",
                            "name": "The resource requested was not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a0011b89-9bcd-47e9-9f7d-bf7444575d42",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "4be27fed-1209-4940-a08e-1c9b73e15997",
                    "name": "/services/dataloader/api/:tenantId/_mapping/:mappingId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/_mapping/:mappingId",
                        "description": {
                            "content": "Retrieves the existing mapping details using an ID",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "_mapping",
                                ":mappingId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "If true, API response includes the job definition IDs associated with the mapping",
                                        "type": "text/plain"
                                    },
                                    "key": "includeProjects",
                                    "value": "<boolean>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "mappingId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Defines the ID of the mapping for which details are to be retrieved",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "0d2453d4-91e7-467d-8c6b-6b349108b339",
                            "name": "The details for mapping are retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If true, API response includes the job definition IDs associated with the mapping",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "35fb7748-71bd-4726-afc9-05a18b8bea2f",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If true, API response includes the job definition IDs associated with the mapping",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1d86d17f-ceb7-4af2-ba3a-f91f54d27611",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If true, API response includes the job definition IDs associated with the mapping",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "961d6abc-fd60-4370-ba63-3e1717675dea",
                            "name": "Check your privileges to do this operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If true, API response includes the job definition IDs associated with the mapping",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "75019c1e-1be8-4f3e-8972-c43133a86278",
                            "name": "Resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If true, API response includes the job definition IDs associated with the mapping",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "807324e8-943a-45f9-aec4-b33fed79ad4b",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If true, API response includes the job definition IDs associated with the mapping",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "cb880b91-3042-4755-ad74-381095a92c5b",
                    "name": "/services/dataloader/api/:tenantId/_mapping/:mappingId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/_mapping/:mappingId",
                        "description": {
                            "content": "Updates an existing mapping. You can add new values for a field or modify the existing values. Before saving the updates, the mapping details are validated based on the business rules",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "_mapping",
                                ":mappingId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "mappingId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the mapping for which the details are to be updated",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "0dbc606d-7af8-448c-8f42-12fc95445328",
                            "name": "Mapping is updated successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "09a6e617-68ad-4f27-9b21-312bf213ea61",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "718397cc-25dd-4cb2-a12c-0a73f74693a7",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ef18d5b5-d9f0-4e2a-b9dd-1d62181d5819",
                            "name": "Check your privileges to do this operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "79d6e305-d4ef-44fc-b06b-c3d87c504ac5",
                            "name": "Resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a562ecd0-8318-44f9-bb76-2864973a358f",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "d7a90deb-8da9-4997-b031-d81e6adc50e0",
                    "name": "/services/dataloader/api/:tenantId/_mapping/:mappingId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/_mapping/:mappingId",
                        "description": {
                            "content": "Deletes an existing mapping if all the business rules are met. The mapping cannot be deleted if it is being used by any job definition",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "_mapping",
                                ":mappingId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "mappingId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the mapping that must be deleted",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "cb041c22-3a47-4b49-ada9-99fa5177f979",
                            "name": "Mapping is deleted successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "6a47dcb3-52e2-4f87-8db3-7527e9320635",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0b9d259e-5d4e-40ce-b29a-f4ce0984698c",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "869a5f39-ab72-4164-bf4b-a9de8c01bcfd",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9ba425e8-9a35-47e6-9029-744dedd14dbb",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3a499707-066f-44de-8349-a7dca6d73d05",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "26649777-7454-4c43-bc82-350e57c14279",
                            "name": "Service Unavailable",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "b71b7ca0-fdfc-4965-9c0a-04397e628952",
                    "name": "/services/dataloader/api/:tenantId/_mappings",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/_mappings",
                        "description": {
                            "content": "Retrieve the details of all mappings for a tenant matching the filter criteria",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "_mappings"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Object type URL for which mappings must be retrieved",
                                        "type": "text/plain"
                                    },
                                    "key": "entityType",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Specify the user name that must be included in the 'equals' and 'not equals' operations while retrieving the mapping details.<br> <b>For example</b>: <li>'createdBy=username@reltio.com' - returns the list of mappings created by the specified user for the tenant</li> <li>'createdBy=username@reltio.com:notequals' - returns the list of mappings which are not created by the specified user for the tenant</li>",
                                        "type": "text/plain"
                                    },
                                    "key": "createdBy",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Long value of date. API returns all the mappings created on or after the specified date",
                                        "type": "text/plain"
                                    },
                                    "key": "creationDate",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                        "type": "text/plain"
                                    },
                                    "key": "page",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Number of objects that need to be returned with a paged response",
                                        "type": "text/plain"
                                    },
                                    "key": "size",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the mappings in the ascending order of Tenant ID, 'sort=tenantId:desc' - sorts the mapping in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,objectTypeUri' - sorts the API response in the descending order of Tenant ID and 'objectTypeUris' are used for second order sorting",
                                        "type": "text/plain"
                                    },
                                    "key": "sort",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "If 'true', API response includes the job definitions IDs",
                                        "type": "text/plain"
                                    },
                                    "key": "includeProjects",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "3cb00ec4-4545-40ed-b013-7cddef043cc9",
                            "name": "Mapping details matching criteria are retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mappings"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Object type URL for which mappings must be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "entityType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specify the user name that must be included in the 'equals' and 'not equals' operations while retrieving the mapping details.<br> <b>For example</b>: <li>'createdBy=username@reltio.com' - returns the list of mappings created by the specified user for the tenant</li> <li>'createdBy=username@reltio.com:notequals' - returns the list of mappings which are not created by the specified user for the tenant</li>",
                                                "type": "text/plain"
                                            },
                                            "key": "createdBy",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Long value of date. API returns all the mappings created on or after the specified date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the mappings in the ascending order of Tenant ID, 'sort=tenantId:desc' - sorts the mapping in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,objectTypeUri' - sorts the API response in the descending order of Tenant ID and 'objectTypeUris' are used for second order sorting",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'true', API response includes the job definitions IDs",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"mappingForObjectType\": \"RELATIONS\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6b552cdd-e4bc-4a80-bf07-1d86be3965c8",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mappings"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Object type URL for which mappings must be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "entityType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specify the user name that must be included in the 'equals' and 'not equals' operations while retrieving the mapping details.<br> <b>For example</b>: <li>'createdBy=username@reltio.com' - returns the list of mappings created by the specified user for the tenant</li> <li>'createdBy=username@reltio.com:notequals' - returns the list of mappings which are not created by the specified user for the tenant</li>",
                                                "type": "text/plain"
                                            },
                                            "key": "createdBy",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Long value of date. API returns all the mappings created on or after the specified date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the mappings in the ascending order of Tenant ID, 'sort=tenantId:desc' - sorts the mapping in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,objectTypeUri' - sorts the API response in the descending order of Tenant ID and 'objectTypeUris' are used for second order sorting",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'true', API response includes the job definitions IDs",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b4940edc-3fb6-4e87-aa22-f4cd3ebcf220",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mappings"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Object type URL for which mappings must be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "entityType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specify the user name that must be included in the 'equals' and 'not equals' operations while retrieving the mapping details.<br> <b>For example</b>: <li>'createdBy=username@reltio.com' - returns the list of mappings created by the specified user for the tenant</li> <li>'createdBy=username@reltio.com:notequals' - returns the list of mappings which are not created by the specified user for the tenant</li>",
                                                "type": "text/plain"
                                            },
                                            "key": "createdBy",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Long value of date. API returns all the mappings created on or after the specified date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the mappings in the ascending order of Tenant ID, 'sort=tenantId:desc' - sorts the mapping in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,objectTypeUri' - sorts the API response in the descending order of Tenant ID and 'objectTypeUris' are used for second order sorting",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'true', API response includes the job definitions IDs",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2b9e2350-f287-49fd-bdaa-cebd9f2e68ad",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mappings"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Object type URL for which mappings must be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "entityType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specify the user name that must be included in the 'equals' and 'not equals' operations while retrieving the mapping details.<br> <b>For example</b>: <li>'createdBy=username@reltio.com' - returns the list of mappings created by the specified user for the tenant</li> <li>'createdBy=username@reltio.com:notequals' - returns the list of mappings which are not created by the specified user for the tenant</li>",
                                                "type": "text/plain"
                                            },
                                            "key": "createdBy",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Long value of date. API returns all the mappings created on or after the specified date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the mappings in the ascending order of Tenant ID, 'sort=tenantId:desc' - sorts the mapping in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,objectTypeUri' - sorts the API response in the descending order of Tenant ID and 'objectTypeUris' are used for second order sorting",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'true', API response includes the job definitions IDs",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "726e10e6-534d-4fcc-884e-e4331d6d611f",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mappings"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Object type URL for which mappings must be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "entityType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specify the user name that must be included in the 'equals' and 'not equals' operations while retrieving the mapping details.<br> <b>For example</b>: <li>'createdBy=username@reltio.com' - returns the list of mappings created by the specified user for the tenant</li> <li>'createdBy=username@reltio.com:notequals' - returns the list of mappings which are not created by the specified user for the tenant</li>",
                                                "type": "text/plain"
                                            },
                                            "key": "createdBy",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Long value of date. API returns all the mappings created on or after the specified date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the mappings in the ascending order of Tenant ID, 'sort=tenantId:desc' - sorts the mapping in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,objectTypeUri' - sorts the API response in the descending order of Tenant ID and 'objectTypeUris' are used for second order sorting",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'true', API response includes the job definitions IDs",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "408c14b7-a330-4ba8-9490-ef61f94ee4f2",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mappings"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Object type URL for which mappings must be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "entityType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specify the user name that must be included in the 'equals' and 'not equals' operations while retrieving the mapping details.<br> <b>For example</b>: <li>'createdBy=username@reltio.com' - returns the list of mappings created by the specified user for the tenant</li> <li>'createdBy=username@reltio.com:notequals' - returns the list of mappings which are not created by the specified user for the tenant</li>",
                                                "type": "text/plain"
                                            },
                                            "key": "createdBy",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Long value of date. API returns all the mappings created on or after the specified date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the mappings in the ascending order of Tenant ID, 'sort=tenantId:desc' - sorts the mapping in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,objectTypeUri' - sorts the API response in the descending order of Tenant ID and 'objectTypeUris' are used for second order sorting",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'true', API response includes the job definitions IDs",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "43b0d668-549a-425b-9ddf-15b366515984",
                    "name": "/services/dataloader/api/:tenantId/configuration/_limits",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/configuration/_limits",
                        "description": {
                            "content": "Retrieves all the existing limits for a tenant matching the filter criteria",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "configuration",
                                "_limits"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Name of the environment used to filter and get limits. ",
                                        "type": "text/plain"
                                    },
                                    "key": "environment",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                        "type": "text/plain"
                                    },
                                    "key": "page",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Number of objects that need to be returned with a paged response",
                                        "type": "text/plain"
                                    },
                                    "key": "size",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the source details in the ascending order of tenantId, 'sort=tenantId:desc' - sorts the source details in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,environment:desc' - sorts the API response in the descending order of tenantId and 'environment'",
                                        "type": "text/plain"
                                    },
                                    "key": "sort",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "9a13e29f-20f7-4178-837e-4e87119ed68a",
                            "name": "All existing limits are retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the environment used to filter and get limits. ",
                                                "type": "text/plain"
                                            },
                                            "key": "environment",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the source details in the ascending order of tenantId, 'sort=tenantId:desc' - sorts the source details in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,environment:desc' - sorts the API response in the descending order of tenantId and 'environment'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"environment\": \"<string>\",\n    \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n    \"limitType\": \"STRING\",\n    \"value\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<integer>\",\n    \"tenantId\": \"<string>\"\n  },\n  {\n    \"environment\": \"<string>\",\n    \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n    \"limitType\": \"STRING\",\n    \"value\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<integer>\",\n    \"tenantId\": \"<string>\"\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "46c2cca9-279a-4a37-9469-d974b582c9a1",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the environment used to filter and get limits. ",
                                                "type": "text/plain"
                                            },
                                            "key": "environment",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the source details in the ascending order of tenantId, 'sort=tenantId:desc' - sorts the source details in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,environment:desc' - sorts the API response in the descending order of tenantId and 'environment'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "694630d6-0474-46e9-b6c5-5e227986674d",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the environment used to filter and get limits. ",
                                                "type": "text/plain"
                                            },
                                            "key": "environment",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the source details in the ascending order of tenantId, 'sort=tenantId:desc' - sorts the source details in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,environment:desc' - sorts the API response in the descending order of tenantId and 'environment'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e279fbc8-3489-40dc-8fe0-1ec9c4cdd301",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the environment used to filter and get limits. ",
                                                "type": "text/plain"
                                            },
                                            "key": "environment",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the source details in the ascending order of tenantId, 'sort=tenantId:desc' - sorts the source details in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,environment:desc' - sorts the API response in the descending order of tenantId and 'environment'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "72aef21c-3b30-41e4-9fee-c8f403688d78",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the environment used to filter and get limits. ",
                                                "type": "text/plain"
                                            },
                                            "key": "environment",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the source details in the ascending order of tenantId, 'sort=tenantId:desc' - sorts the source details in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,environment:desc' - sorts the API response in the descending order of tenantId and 'environment'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "57fb6043-297b-4393-afc5-5bc05edb5503",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the environment used to filter and get limits. ",
                                                "type": "text/plain"
                                            },
                                            "key": "environment",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the source details in the ascending order of tenantId, 'sort=tenantId:desc' - sorts the source details in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,environment:desc' - sorts the API response in the descending order of tenantId and 'environment'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "102794f8-8377-49a5-869f-f58486e47a56",
                    "name": "/services/dataloader/api/:tenantId/configuration/_limits",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/configuration/_limits",
                        "description": {
                            "content": "Creates limits. While creating limits, you must provide the limit name, value, and datatype",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "configuration",
                                "_limits"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "eb91ea2c-9050-4132-ac22-2f1e15373a9d",
                            "name": "Resource is created successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5aef0a1e-cdf2-4920-b288-96a936a37909",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "50a0cec0-ffb5-42b1-8855-cf4df121e759",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a4f2c626-7203-4d25-8a41-c1b413d6ee17",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9211d906-098b-4423-a6b8-08ff43b02f01",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "efe3119f-0b25-4087-b41b-cd22079e8718",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "d250a273-ea43-4658-9e54-f33e7400a8c2",
                    "name": "/services/dataloader/api/:tenantId/configuration/_limits/:id",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/configuration/_limits/:id",
                        "description": {
                            "content": "Retrieves the details of a limit",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "configuration",
                                "_limits",
                                ":id"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "id",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the existing limit for which the details must be retrieved",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "a03059ad-5672-48eb-b4a0-6d47b462678f",
                            "name": "Limit retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "663d0d45-4334-4fd0-b7d2-7ef31394148e",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ade71419-9de1-4e5e-b33a-44f365c0f429",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "21e26492-2077-4ddc-a2d0-0e2107a06d19",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ba7aae47-af23-46e2-9d79-aeb181a6a2fc",
                            "name": "Resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "be1009ca-193e-4cd5-a8a7-19c1d0d82a57",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "ae2c9891-4f50-4061-b5b0-e93a0e320874",
                    "name": "/services/dataloader/api/:tenantId/configuration/_limits/:id",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/configuration/_limits/:id",
                        "description": {
                            "content": "Updates the existing limit. The updated limits are used while creating the new job",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "configuration",
                                "_limits",
                                ":id"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "id",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the existing limit for which the details must be updated",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "97a4bce3-9c6f-4f2d-8ade-6dd01553bc0d",
                            "name": "Limit updated successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8bb92e47-05c4-42ff-bdc0-7e7d410b6703",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ea4ffef8-d556-41ce-87ff-b7086be10ea0",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "cdfe6f01-86f7-4e36-bbd9-69bc81fb9f41",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e3683968-ee3a-4d33-80b4-859059ffd564",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "261b08d0-3191-4169-8c45-74f02454270d",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "52ab5c6a-14ff-4ccc-8905-18e39fb054e7",
                    "name": "/services/dataloader/api/:tenantId/configuration/_limits/:id",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/configuration/_limits/:id",
                        "description": {
                            "content": "Delete an existing limit using the ID",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "configuration",
                                "_limits",
                                ":id"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "id",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the existing limit for which the details must be deleted",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "325b78e5-9039-4caf-8f5a-8b9b7afde08c",
                            "name": "Limit deleted successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "f2092011-e6bb-4c4a-bdab-cdb1a8802445",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4d124ca2-9d03-422b-b55d-a0608f52a40f",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8cad0aff-b084-4d1d-96a4-e8ed46e863dd",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "61d75266-4423-4bb7-b74b-6c502d53755c",
                            "name": "Resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5994e49d-56e5-4152-a378-b8c9e3e22da2",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "9bbf1a4b-8593-4089-80d9-b338d9d2a0ab",
                    "name": "/services/dataloader/api/:tenantId/project",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project",
                        "description": {
                            "content": "Creates a new job definition by using existing mapping and storage details",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"UPLOADED\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "e1f9a45f-b416-4850-b56a-583e47c9432e",
                            "name": "Job definition is created successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"UPLOADED\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"UPLOADED\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "bdb901b8-d7b9-4065-a84b-bc35075540b5",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"UPLOADED\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a522e04e-cedc-4e93-97aa-f50e1025dbb8",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"UPLOADED\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8d93a609-6a56-47ab-9ab4-802373d5d91f",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"UPLOADED\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e8cb13f2-73e7-40d0-98dc-73e0fdb6a983",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"UPLOADED\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3d61293d-8d5f-4d06-84e5-6148c9e9d735",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"UPLOADED\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "0e432df8-b114-44b6-b69d-109b93dacdc2",
                    "name": "/services/dataloader/api/:tenantId/project/data/source",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/data/source",
                        "description": {
                            "content": "Retrieves existing source details for a tenant matching the filter criteria",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "data",
                                "source"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                        "type": "text/plain"
                                    },
                                    "key": "page",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Number of objects that need to be returned with a paged response",
                                        "type": "text/plain"
                                    },
                                    "key": "size",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=sourcePath' - sorts the source details in the ascending order of sourcePath, 'sort=sourcePath:desc' - sorts the source details in the descending order of sourcePath <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=sourcePath:desc,bucketName' - sorts the API response in the descending order of sourcePath and 'bucketName'",
                                        "type": "text/plain"
                                    },
                                    "key": "sort",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "6ce1cef1-a9e1-4efa-8317-eeb6eff5e337",
                            "name": "Source details are returned successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=sourcePath' - sorts the source details in the ascending order of sourcePath, 'sort=sourcePath:desc' - sorts the source details in the descending order of sourcePath <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=sourcePath:desc,bucketName' - sorts the API response in the descending order of sourcePath and 'bucketName'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"AWS_S3\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"AWS_S3\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "eb435162-b70b-416d-85d8-4d6e10b8169b",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=sourcePath' - sorts the source details in the ascending order of sourcePath, 'sort=sourcePath:desc' - sorts the source details in the descending order of sourcePath <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=sourcePath:desc,bucketName' - sorts the API response in the descending order of sourcePath and 'bucketName'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0f412c61-b7cc-424f-8229-c35f0d59961d",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=sourcePath' - sorts the source details in the ascending order of sourcePath, 'sort=sourcePath:desc' - sorts the source details in the descending order of sourcePath <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=sourcePath:desc,bucketName' - sorts the API response in the descending order of sourcePath and 'bucketName'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8f54cee6-7ff0-4b82-99dd-b5f4da25b8f5",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=sourcePath' - sorts the source details in the ascending order of sourcePath, 'sort=sourcePath:desc' - sorts the source details in the descending order of sourcePath <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=sourcePath:desc,bucketName' - sorts the API response in the descending order of sourcePath and 'bucketName'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "26e51c49-8cf8-4440-9262-80779002cc7d",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=sourcePath' - sorts the source details in the ascending order of sourcePath, 'sort=sourcePath:desc' - sorts the source details in the descending order of sourcePath <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=sourcePath:desc,bucketName' - sorts the API response in the descending order of sourcePath and 'bucketName'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6ebf1fc3-7d18-4797-99c8-7dded8941883",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=sourcePath' - sorts the source details in the ascending order of sourcePath, 'sort=sourcePath:desc' - sorts the source details in the descending order of sourcePath <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=sourcePath:desc,bucketName' - sorts the API response in the descending order of sourcePath and 'bucketName'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "ec4d9344-af81-4994-8ec3-a16c951d83f9",
                    "name": "/services/dataloader/api/:tenantId/project/data/source",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/data/source",
                        "description": {
                            "content": "Checks whether a valid file exists for the provided source information before creating a new source. While creating a source, you must provide all the mandatory information",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "data",
                                "source"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AZURE\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "fd118692-2715-44f2-9dba-5630857b3f0c",
                            "name": "Source details are created successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AZURE\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AZURE\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a58b86f8-9507-44ba-9c2a-9349ee7973a9",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AZURE\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "48cff91b-e5bf-443c-91c1-b7f321e8ac39",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AZURE\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "adc6cfe2-f71b-442d-abe9-292bb152def4",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AZURE\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4e4cd542-2fb1-4fed-b029-af47ca4e59bc",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AZURE\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8ce6cd28-bafc-4a66-b32c-450a838cdde7",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AZURE\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "ae8ff8c0-b50f-4c20-88f5-16034e2c969d",
                    "name": "/services/dataloader/api/:tenantId/project/data/source/:sourceId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/data/source/:sourceId",
                        "description": {
                            "content": "Retrieves the existing source details using the ID",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "data",
                                "source",
                                ":sourceId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "sourceId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Source ID for which the details must be retrieved",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "d8e2f87e-b057-4f44-b57b-60037d681435",
                            "name": "Returns the existing source details",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AZURE\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d86a6b98-9bec-4966-8227-829a2e0b9b9b",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "afdff35d-a4a0-464d-87aa-041aa288ebac",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5c5b4a1b-eac6-4d95-be77-0d10646f029c",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d1aec8e5-ee7d-42da-9c93-b1056b82c26c",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "885a6887-7382-4e3b-87f5-47cd1e6398b3",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "573850b7-08a1-46e6-a327-890bed252005",
                    "name": "/services/dataloader/api/:tenantId/project/data/source/:sourceId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/data/source/:sourceId",
                        "description": {
                            "content": "Updates the existing source with the details added from the request",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "data",
                                "source",
                                ":sourceId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "sourceId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Source ID for which the details must be updated",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AZURE\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "bd6212f7-dc16-4392-ab10-7c5d5d5930d1",
                            "name": "Storage details are updated successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AZURE\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AZURE\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "45f1394f-97ef-4b14-a761-d62286e556b5",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AZURE\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f1224d21-c103-4788-bc85-8be27fd8c55c",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AZURE\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7d73a979-6bc5-4884-8b7b-165c52d5d8fa",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AZURE\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b015bcde-c658-4b9b-8d25-2ffe033db9ee",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AZURE\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3498f3a0-cbb4-4b43-a039-2044ef5f6ae8",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AZURE\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "605ece5c-c2e9-404d-bc99-6856dd7a4ab3",
                    "name": "/services/dataloader/api/:tenantId/project/data/source/:sourceId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/data/source/:sourceId",
                        "description": {
                            "content": "Deletes the source details using the specified ID if it is not already used by any job definitions",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "data",
                                "source",
                                ":sourceId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "sourceId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Source ID for which the source details must be deleted",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "8d53274d-b351-449e-935d-ad2bcd451711",
                            "name": "Returns the existing source details",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "b27ed106-9949-4fd1-8d59-8345faa0d92b",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "57d3682d-2606-4495-bb64-7d0a014f2f54",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "06c77bc7-0f43-44dc-b3e3-85d1cfe2bc86",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2d19887e-6dd9-410a-9212-a11353d86bf9",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1339e649-728f-4ced-82c3-3573d3a9fa98",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "c0950f01-8895-49ef-beee-2967685ab72b",
                    "name": "/services/dataloader/api/:tenantId/project/job/:jobId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/job/:jobId",
                        "description": {
                            "content": "Retrieve the existing job detail using the ID",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "job",
                                ":jobId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "jobId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job ID to retrieve",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "71a50d50-53e6-4b1d-98bb-5388d40e913b",
                            "name": "Job retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"SAVED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "cadf0e02-aa93-4afc-a827-c219486b4307",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ae3feb40-acef-42a3-afbf-782ef1677f1e",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "45cf7c3c-7029-4b3e-83b7-888eebfd9d66",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "471bfc34-c9e9-4d16-a2f3-375563bd7b26",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a03e480b-fdca-4f65-8d21-cba77eb8663f",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "f4dc4a15-563a-4e15-9866-142087b8dd47",
                    "name": "/services/dataloader/api/:tenantId/project/job/:jobId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/job/:jobId",
                        "description": {
                            "content": "Updates the existing job by merging the existing details with the updated information in the request body",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "job",
                                ":jobId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "jobId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job ID to update",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"SAVED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "7d9fecf0-1ead-4448-9fe6-a6d4eec525ff",
                            "name": "Job updated successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"SAVED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"SAVED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b6ff0ac0-8f08-488b-9f55-98f9979b390b",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"SAVED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b0f91c3f-1c51-4840-a349-75754cd1000d",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"SAVED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e3626e85-4f60-4427-849a-f5f55dbe89d2",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"SAVED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "eb82139b-da32-4606-9d61-76c93c288ed5",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"SAVED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "634bdb59-7b18-4195-8eaa-e44af578670e",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"SAVED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "b5071dee-16ad-4fce-afbe-d3b46f74d2e3",
                    "name": "/services/dataloader/api/:tenantId/project/job/:jobId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/job/:jobId",
                        "description": {
                            "content": "Deletes the job with the status marked as completed",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "job",
                                ":jobId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "jobId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job ID to delete",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "78e926d3-8508-4608-aa19-6543f453d101",
                            "name": "Job deleted successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "a3889c73-9669-4305-88f3-175014edd1c9",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "410fdd0f-bfa0-4edc-b1e2-8b33c4a6ac0e",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7076d2e1-9bd2-45ee-8621-69dbebf95865",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "17a90181-ba45-4488-8e1b-2dbd72a97f2e",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b24032a5-8ba8-43d6-93a4-0641a15c0ea2",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "fb6c0763-a162-4fac-b329-01a4e57fbc49",
                    "name": "/services/dataloader/api/:tenantId/project/job/:jobId/_resume",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/job/:jobId/_resume",
                        "description": {
                            "content": "Resumes the job stuck with no progress",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "job",
                                ":jobId",
                                "_resume"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "jobId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job ID to resume",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "9095b746-5456-40eb-8cd1-96f0caa7080b",
                            "name": "Request to resume the job is accepted",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_resume"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Accepted",
                            "code": 202,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "a472fdd5-3b94-468a-9ef8-c60f62757086",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_resume"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "793d2767-9672-4cc3-82ba-1971b4727b26",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_resume"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"error\": \"access_denied\",\n    \"error_description\": \"Access is denied\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ced27d33-c2b5-40d7-a17c-be5554fa7ba5",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_resume"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"severity\": \"Error\",\n    \"errorMessage\": \"Brief error message here\",\n    \"errorCode\": 123,\n    \"errorDetailMessage\": \"Detailed error message here\",\n    \"innerErrorData\": {\n      \"exception\": \"com.reltio.services.dataloader.common.exception.DataLoaderServiceException Details here\"\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "fa8f4a79-2a8d-47c7-989e-27dac8e124af",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_resume"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"timestamp\": 1634719769759,\n    \"status\": 500,\n    \"error\": \"Internal Server Error\",\n    \"message\": \"Brief error message here\",\n    \"path\": \"Api context path here\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "b4be7368-d668-4545-9d67-0aa7f60540ff",
                    "name": "/services/dataloader/api/:tenantId/project/job/:jobId/_stop",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/job/:jobId/_stop",
                        "description": {
                            "content": "Stops the job in progress",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "job",
                                ":jobId",
                                "_stop"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "jobId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job ID to stop",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "2b6bd76d-e7d1-4030-b4ac-26ad209b5d8a",
                            "name": "Request to stop the job is accepted",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_stop"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Accepted",
                            "code": 202,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "740ccc20-d735-4932-a425-e4d9c7ff671a",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_stop"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"severity\": \"Error\",\n    \"errorMessage\": \"Operation can not be done as the job [xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx] is in COMPLETED state.\",\n    \"errorCode\": 1561,\n    \"errorDetailMessage\": \"Operation can not be done as the job [xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx] is in COMPLETED state.\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ae5f5849-1efe-4de0-9556-6c32956c8ab0",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_stop"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"error\": \"access_denied\",\n    \"error_description\": \"Access is denied\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9971c284-78ef-4a19-adcb-089390ab8ba8",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_stop"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"severity\": \"Error\",\n    \"errorMessage\": \"Brief error message here\",\n    \"errorCode\": 123,\n    \"errorDetailMessage\": \"Detailed error message here\",\n    \"innerErrorData\": {\n      \"exception\": \"com.reltio.services.dataloader.common.exception.DataLoaderServiceException Details here\"\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8f48ed87-3784-474d-abfd-0f023aa22e70",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_stop"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"timestamp\": 1634719769759,\n    \"status\": 500,\n    \"error\": \"Internal Server Error\",\n    \"message\": \"Brief error message here\",\n    \"path\": \"Api context path here\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "bbf9742c-757a-400c-913e-9e59c355472c",
                    "name": "/services/dataloader/api/:tenantId/project/job/:jobId/errors",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/job/:jobId/errors",
                        "description": {
                            "content": "Download the error file as a zip file, if any exists",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "job",
                                ":jobId",
                                "errors"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Name of the error file to be retrieved",
                                        "type": "text/plain"
                                    },
                                    "key": "errorFile",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "jobId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job ID for which the error files are to be retrieved",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "6c49ef26-24af-45e8-aedd-a6e4353e06fd",
                            "name": "Error details are retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "errors"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the error file to be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "errorFile",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "f4a3f9f5-69ae-4f16-93fc-637a8cabeefa",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "errors"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the error file to be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "errorFile",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "13e1d386-db78-4402-93a0-b84a852d6d55",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "errors"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the error file to be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "errorFile",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0f577d8c-1260-4281-900d-1dd8370f9900",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "errors"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the error file to be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "errorFile",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "848c2b40-ce02-4701-a645-69c62e32a92b",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "errors"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the error file to be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "errorFile",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "99b3254c-1a13-4e3e-89ed-2c2059801825",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "errors"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the error file to be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "errorFile",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "3f8f7851-d89a-48d2-8749-769febfe716d",
                    "name": "/services/dataloader/api/:tenantId/project/job/:jobId/source",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/job/:jobId/source",
                        "description": {
                            "content": "Download the source file(s) processed by dataload job",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "job",
                                ":jobId",
                                "source"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "jobId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job ID for which the source files are to be retrieved",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "a3fb04b6-0a58-4202-bd12-379be58f45b9",
                            "name": "Source details are retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "67558df3-5601-4bd4-b3c2-470bae85c47e",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5ed4b8aa-3391-4a5c-9c1f-1a7fb08b1493",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "82bd05f5-bf6d-474f-ad70-2088bef491d3",
                            "name": "User does not have permission to view the file or job information",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "513dcd38-b631-47a2-9750-c5c38347e359",
                            "name": "All source files processed by job are deleted",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0359f618-1240-41f5-9f76-23234820e77a",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "e7eca665-75c6-4288-88c8-0e570d2b0e71",
                    "name": "/services/dataloader/api/:tenantId/project/jobs",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/jobs",
                        "description": {
                            "content": "Retrieve the details of existing jobs for a tenant matching the filter criteria",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "jobs"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "ID of the existing job definitions to get job details",
                                        "type": "text/plain"
                                    },
                                    "key": "projectId",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Job status used to filter the jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "status",
                                    "value": "@DeprecatedDATA_LOAD_TASK_CANCELED"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Job status used to filter the jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "status",
                                    "value": "UPLOAD_TO_S3_FINISHED"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to retrieve either inprogress or completed jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "inProgress",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                        "type": "text/plain"
                                    },
                                    "key": "creationDate",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                        "type": "text/plain"
                                    },
                                    "key": "page",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Number of objects that need to be returned with a paged response",
                                        "type": "text/plain"
                                    },
                                    "key": "size",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                        "type": "text/plain"
                                    },
                                    "key": "sort",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "5420650f-7313-429b-9158-e547a072a400",
                            "name": "Job retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "UPLOAD_TO_S3_FINISHED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"isDeleted\": \"<boolean>\",\n    \"udl\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"jobStatus\": \"DATALOAD_COMPLETED_WITH_ERRORS\",\n    \"dataProcessingJobId\": \"<string>\",\n    \"dataFlowId\": \"<string>\",\n    \"periodicTasks\": \"<string>\",\n    \"loadType\": \"RELATIONS\",\n    \"errorDetails\": \"<string>\",\n    \"errorFileBucket\": \"<string>\",\n    \"errorFileLocation\": \"<string>\",\n    \"executedDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"totalRecords\": \"<integer>\",\n    \"processedRecordsCount\": \"<integer>\",\n    \"failedRecords\": \"<string>\",\n    \"failedRecordsCount\": \"<integer>\",\n    \"jobSummary\": \"<string>\",\n    \"ludicrousMode\": \"<boolean>\",\n    \"projectDetails\": {\n      \"environment\": \"<string>\",\n      \"loadType\": \"RELATIONS\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"projectStatus\": \"<string>\",\n      \"progressStatus\": \"<string>\",\n      \"tenantId\": \"<string>\",\n      \"updateType\": \"UPDATE_MERGED\",\n      \"errorFileLocation\": \"<string>\",\n      \"operationStatus\": \"<string>\",\n      \"additionalAttributes\": \"<string>\",\n      \"storageDetails\": {\n        \"sourcePath\": \"<string>\",\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"storageId\": \"<string>\",\n        \"shareSourceInfo\": \"<boolean>\",\n        \"bucketName\": \"<string>\",\n        \"bucketNameTemp\": \"<string>\",\n        \"bucketNameError\": \"<string>\",\n        \"bucketNameSummary\": \"<string>\",\n        \"fileMask\": \"<string>\",\n        \"delimiter\": \"<string>\",\n        \"storageAccount\": {\n          \"createdBy\": \"<string>\",\n          \"createdDate\": \"<dateTime>\",\n          \"updatedBy\": \"<string>\",\n          \"updatedDate\": \"<dateTime>\",\n          \"accountId\": \"<integer>\",\n          \"accountName\": \"<string>\",\n          \"accountType\": \"UPLOADED\",\n          \"credentials\": \"<string>\"\n        },\n        \"totalRecords\": \"<integer>\",\n        \"projectDetailsTO\": {\n          \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n        }\n      },\n      \"mappingDetails\": {\n        \"mappingForObjectType\": \"RELATIONS\",\n        \"mappingName\": \"<string>\",\n        \"mappingSummary\": \"<string>\",\n        \"objectTypeUri\": \"<string>\",\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"mappingId\": \"<integer>\",\n        \"tenantId\": \"<string>\",\n        \"shareMappingDetails\": \"<boolean>\",\n        \"projectIds\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"schedulingDetails\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"id\": \"<string>\",\n        \"scheduledJobId\": \"<string>\",\n        \"cronExpression\": \"<string>\",\n        \"startDate\": \"<long>\",\n        \"endDate\": \"<long>\"\n      }\n    }\n  },\n  {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"isDeleted\": \"<boolean>\",\n    \"udl\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"jobStatus\": \"UPLOAD_TO_S3_FINISHED\",\n    \"dataProcessingJobId\": \"<string>\",\n    \"dataFlowId\": \"<string>\",\n    \"periodicTasks\": \"<string>\",\n    \"loadType\": \"RELATIONS\",\n    \"errorDetails\": \"<string>\",\n    \"errorFileBucket\": \"<string>\",\n    \"errorFileLocation\": \"<string>\",\n    \"executedDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"totalRecords\": \"<integer>\",\n    \"processedRecordsCount\": \"<integer>\",\n    \"failedRecords\": \"<string>\",\n    \"failedRecordsCount\": \"<integer>\",\n    \"jobSummary\": \"<string>\",\n    \"ludicrousMode\": \"<boolean>\",\n    \"projectDetails\": {\n      \"environment\": \"<string>\",\n      \"loadType\": \"ENTITIES\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"projectStatus\": \"<string>\",\n      \"progressStatus\": \"<string>\",\n      \"tenantId\": \"<string>\",\n      \"updateType\": \"FULL_UPDATE\",\n      \"errorFileLocation\": \"<string>\",\n      \"operationStatus\": \"<string>\",\n      \"additionalAttributes\": \"<string>\",\n      \"storageDetails\": {\n        \"sourcePath\": \"<string>\",\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"storageId\": \"<string>\",\n        \"shareSourceInfo\": \"<boolean>\",\n        \"bucketName\": \"<string>\",\n        \"bucketNameTemp\": \"<string>\",\n        \"bucketNameError\": \"<string>\",\n        \"bucketNameSummary\": \"<string>\",\n        \"fileMask\": \"<string>\",\n        \"delimiter\": \"<string>\",\n        \"storageAccount\": {\n          \"createdBy\": \"<string>\",\n          \"createdDate\": \"<dateTime>\",\n          \"updatedBy\": \"<string>\",\n          \"updatedDate\": \"<dateTime>\",\n          \"accountId\": \"<integer>\",\n          \"accountName\": \"<string>\",\n          \"accountType\": \"SFTP\",\n          \"credentials\": \"<string>\"\n        },\n        \"totalRecords\": \"<integer>\",\n        \"projectDetailsTO\": {\n          \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n        }\n      },\n      \"mappingDetails\": {\n        \"mappingForObjectType\": \"ENTITIES\",\n        \"mappingName\": \"<string>\",\n        \"mappingSummary\": \"<string>\",\n        \"objectTypeUri\": \"<string>\",\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"mappingId\": \"<integer>\",\n        \"tenantId\": \"<string>\",\n        \"shareMappingDetails\": \"<boolean>\",\n        \"projectIds\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"schedulingDetails\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"id\": \"<string>\",\n        \"scheduledJobId\": \"<string>\",\n        \"cronExpression\": \"<string>\",\n        \"startDate\": \"<long>\",\n        \"endDate\": \"<long>\"\n      }\n    }\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b4b29f2f-182a-47a6-b5c2-bb16ea41a3c0",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "UPLOAD_TO_S3_FINISHED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "65e937d1-e3d5-46d9-890d-22741fe8f63b",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "UPLOAD_TO_S3_FINISHED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f5e3a7fd-879c-4fa5-81ae-e11992aeba92",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "UPLOAD_TO_S3_FINISHED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "836e4f08-f14e-45e3-9681-ab9f9c868da1",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "UPLOAD_TO_S3_FINISHED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7b3a8d24-f2ad-44a9-85b6-e60d36f7a497",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "UPLOAD_TO_S3_FINISHED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "9e2d8a07-98ae-4683-b5c4-63b6a562a072",
                    "name": "/services/dataloader/api/:tenantId/project/jobs/_facets",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/jobs/_facets",
                        "description": {
                            "content": "Retrieve requested fields from existing jobs for a tenant matching the filter criteria",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "jobs",
                                "_facets"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "ID of the existing job definitions to get job details",
                                        "type": "text/plain"
                                    },
                                    "key": "projectId",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Job status used to filter the jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "status",
                                    "value": "@DeprecatedDATA_LOAD_TASK_CANCELED"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Job status used to filter the jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "status",
                                    "value": "UPLOAD_TO_S3_FINISHED"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to retrieve either inprogress or completed jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "inProgress",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                        "type": "text/plain"
                                    },
                                    "key": "creationDate",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "list of fields to fetch",
                                        "type": "text/plain"
                                    },
                                    "key": "facet",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "list of fields to fetch",
                                        "type": "text/plain"
                                    },
                                    "key": "facet",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "04b9bb85-957b-459c-a7b5-22a3f6e2eeff",
                            "name": "Fields retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs",
                                        "_facets"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "UPLOAD_TO_S3_FINISHED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "list of fields to fetch",
                                                "type": "text/plain"
                                            },
                                            "key": "facet",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"ad1\": {\n    \"deseruntb\": \"<integer>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d23a1ee9-e639-40b2-b2c1-85b72b971c8e",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs",
                                        "_facets"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "UPLOAD_TO_S3_FINISHED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "list of fields to fetch",
                                                "type": "text/plain"
                                            },
                                            "key": "facet",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9f02ebf6-e820-4eaa-a962-8a85588104ac",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs",
                                        "_facets"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "UPLOAD_TO_S3_FINISHED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "list of fields to fetch",
                                                "type": "text/plain"
                                            },
                                            "key": "facet",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4aaf05ed-6487-45c5-ba49-280680485c7f",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs",
                                        "_facets"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "UPLOAD_TO_S3_FINISHED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "list of fields to fetch",
                                                "type": "text/plain"
                                            },
                                            "key": "facet",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9d351b16-1228-4ea5-85c7-6bd5cec846c6",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs",
                                        "_facets"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "UPLOAD_TO_S3_FINISHED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "list of fields to fetch",
                                                "type": "text/plain"
                                            },
                                            "key": "facet",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "dc3d3180-0774-4203-9497-5db2d373d24f",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs",
                                        "_facets"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "UPLOAD_TO_S3_FINISHED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "list of fields to fetch",
                                                "type": "text/plain"
                                            },
                                            "key": "facet",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "23d4f3bc-c7db-4474-959e-c2281603c1d2",
                    "name": "/services/dataloader/api/:tenantId/project/:projectId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/:projectId",
                        "description": {
                            "content": "Returns existing job definition with mapping, source, and scheduling details",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                ":projectId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "projectId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job definition ID for which the details must be retrieved",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "e1ef5a10-e105-41e9-842e-6e7dd2dc8a8c",
                            "name": "Job definition is retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"UPLOADED\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b77cef90-92e3-4481-9fbe-fd55543486eb",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7502da7a-b61e-47d5-8c11-76ea8ad8a7aa",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ead5a93a-1495-493b-8b65-cc499cbe026a",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "fc4f8a37-613e-4644-a7ce-99d7cf653114",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "98d7181f-7f05-418c-9d1a-e7bf0617ecc7",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "10a279dc-a12c-407f-a0b0-950b1543a4c4",
                    "name": "/services/dataloader/api/:tenantId/project/:projectId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/:projectId",
                        "description": {
                            "content": "Updates the existing job definitions by merging existing details for job definition with the updated information provided in the request body",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                ":projectId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "projectId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job definition ID for which the details must be updated",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"UPLOADED\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "49545d41-0316-4afe-ac08-591f2ec53741",
                            "name": "Job definition is successfully updated",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"UPLOADED\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"UPLOADED\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "13df55d4-2381-4930-9d0d-209a771a4e7f",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"UPLOADED\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a8ce2367-1e51-4fea-84bc-165d364d4852",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"UPLOADED\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "aa8d4069-0dea-4cea-9bb7-3fd1f905c427",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"UPLOADED\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d7ab60bd-ed5f-4bf6-8452-b0e4fd629528",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"UPLOADED\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "589c59fa-efc4-4a7b-bf73-3554c3a8a08c",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"UPLOADED\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "af20b5f3-2483-4c2d-a3f0-25b416dc38be",
                    "name": "/services/dataloader/api/:tenantId/project/:projectId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/:projectId",
                        "description": {
                            "content": "Deletes the existing job definition when the related mapping, source, and scheduling details are not used by other job definitions",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                ":projectId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "projectId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job definition ID for which the details must be deleted",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "e6081ca1-9d24-42a3-8c2c-d8e272838f5d",
                            "name": "Job definition is deleted successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "37222505-dd3a-48e4-923f-0a47712c5c4e",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2c3c05bc-8c32-4f7a-97ad-16e213d48929",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0dbfd205-306a-41b2-953b-63ad29d4f198",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2974d0e6-cdb8-4d02-bc3a-16c71e075498",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2c931442-c76d-4ecd-9c92-c615669e45ff",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "2eab3d5b-4d5c-4452-9df5-1dfa7d613366",
                    "name": "/services/dataloader/api/:tenantId/project/:projectId/jobs",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/:projectId/jobs",
                        "description": {
                            "content": "Retrieves the details of existing jobs for a job definitions by matching the filter criteria",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                ":projectId",
                                "jobs"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Job status used to filter the jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "status",
                                    "value": "DELETED"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Job status used to filter the jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "status",
                                    "value": "MAPPING_PROCESSING_FINISHED"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to retrieve either inprogress or completed jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "inProgress",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                        "type": "text/plain"
                                    },
                                    "key": "creationDate",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                        "type": "text/plain"
                                    },
                                    "key": "page",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Number of objects that need to be returned with a paged response",
                                        "type": "text/plain"
                                    },
                                    "key": "size",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                        "type": "text/plain"
                                    },
                                    "key": "sort",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "projectId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the existing job definitions to get job details",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "0b4e293a-325d-44ac-8f0a-c4bffd74bdd7",
                            "name": "Job retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "MAPPING_PROCESSING_FINISHED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"isDeleted\": \"<boolean>\",\n    \"udl\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"jobStatus\": \"DATALOAD_COMPLETED_WITH_ERRORS\",\n    \"dataProcessingJobId\": \"<string>\",\n    \"dataFlowId\": \"<string>\",\n    \"periodicTasks\": \"<string>\",\n    \"loadType\": \"RELATIONS\",\n    \"errorDetails\": \"<string>\",\n    \"errorFileBucket\": \"<string>\",\n    \"errorFileLocation\": \"<string>\",\n    \"executedDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"totalRecords\": \"<integer>\",\n    \"processedRecordsCount\": \"<integer>\",\n    \"failedRecords\": \"<string>\",\n    \"failedRecordsCount\": \"<integer>\",\n    \"jobSummary\": \"<string>\",\n    \"ludicrousMode\": \"<boolean>\",\n    \"projectDetails\": {\n      \"environment\": \"<string>\",\n      \"loadType\": \"RELATIONS\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"projectStatus\": \"<string>\",\n      \"progressStatus\": \"<string>\",\n      \"tenantId\": \"<string>\",\n      \"updateType\": \"UPDATE_MERGED\",\n      \"errorFileLocation\": \"<string>\",\n      \"operationStatus\": \"<string>\",\n      \"additionalAttributes\": \"<string>\",\n      \"storageDetails\": {\n        \"sourcePath\": \"<string>\",\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"storageId\": \"<string>\",\n        \"shareSourceInfo\": \"<boolean>\",\n        \"bucketName\": \"<string>\",\n        \"bucketNameTemp\": \"<string>\",\n        \"bucketNameError\": \"<string>\",\n        \"bucketNameSummary\": \"<string>\",\n        \"fileMask\": \"<string>\",\n        \"delimiter\": \"<string>\",\n        \"storageAccount\": {\n          \"createdBy\": \"<string>\",\n          \"createdDate\": \"<dateTime>\",\n          \"updatedBy\": \"<string>\",\n          \"updatedDate\": \"<dateTime>\",\n          \"accountId\": \"<integer>\",\n          \"accountName\": \"<string>\",\n          \"accountType\": \"UPLOADED\",\n          \"credentials\": \"<string>\"\n        },\n        \"totalRecords\": \"<integer>\",\n        \"projectDetailsTO\": {\n          \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n        }\n      },\n      \"mappingDetails\": {\n        \"mappingForObjectType\": \"RELATIONS\",\n        \"mappingName\": \"<string>\",\n        \"mappingSummary\": \"<string>\",\n        \"objectTypeUri\": \"<string>\",\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"mappingId\": \"<integer>\",\n        \"tenantId\": \"<string>\",\n        \"shareMappingDetails\": \"<boolean>\",\n        \"projectIds\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"schedulingDetails\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"id\": \"<string>\",\n        \"scheduledJobId\": \"<string>\",\n        \"cronExpression\": \"<string>\",\n        \"startDate\": \"<long>\",\n        \"endDate\": \"<long>\"\n      }\n    }\n  },\n  {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"isDeleted\": \"<boolean>\",\n    \"udl\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"jobStatus\": \"UPLOAD_TO_S3_FINISHED\",\n    \"dataProcessingJobId\": \"<string>\",\n    \"dataFlowId\": \"<string>\",\n    \"periodicTasks\": \"<string>\",\n    \"loadType\": \"RELATIONS\",\n    \"errorDetails\": \"<string>\",\n    \"errorFileBucket\": \"<string>\",\n    \"errorFileLocation\": \"<string>\",\n    \"executedDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"totalRecords\": \"<integer>\",\n    \"processedRecordsCount\": \"<integer>\",\n    \"failedRecords\": \"<string>\",\n    \"failedRecordsCount\": \"<integer>\",\n    \"jobSummary\": \"<string>\",\n    \"ludicrousMode\": \"<boolean>\",\n    \"projectDetails\": {\n      \"environment\": \"<string>\",\n      \"loadType\": \"ENTITIES\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"projectStatus\": \"<string>\",\n      \"progressStatus\": \"<string>\",\n      \"tenantId\": \"<string>\",\n      \"updateType\": \"FULL_UPDATE\",\n      \"errorFileLocation\": \"<string>\",\n      \"operationStatus\": \"<string>\",\n      \"additionalAttributes\": \"<string>\",\n      \"storageDetails\": {\n        \"sourcePath\": \"<string>\",\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"storageId\": \"<string>\",\n        \"shareSourceInfo\": \"<boolean>\",\n        \"bucketName\": \"<string>\",\n        \"bucketNameTemp\": \"<string>\",\n        \"bucketNameError\": \"<string>\",\n        \"bucketNameSummary\": \"<string>\",\n        \"fileMask\": \"<string>\",\n        \"delimiter\": \"<string>\",\n        \"storageAccount\": {\n          \"createdBy\": \"<string>\",\n          \"createdDate\": \"<dateTime>\",\n          \"updatedBy\": \"<string>\",\n          \"updatedDate\": \"<dateTime>\",\n          \"accountId\": \"<integer>\",\n          \"accountName\": \"<string>\",\n          \"accountType\": \"SFTP\",\n          \"credentials\": \"<string>\"\n        },\n        \"totalRecords\": \"<integer>\",\n        \"projectDetailsTO\": {\n          \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n        }\n      },\n      \"mappingDetails\": {\n        \"mappingForObjectType\": \"ENTITIES\",\n        \"mappingName\": \"<string>\",\n        \"mappingSummary\": \"<string>\",\n        \"objectTypeUri\": \"<string>\",\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"mappingId\": \"<integer>\",\n        \"tenantId\": \"<string>\",\n        \"shareMappingDetails\": \"<boolean>\",\n        \"projectIds\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"schedulingDetails\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"id\": \"<string>\",\n        \"scheduledJobId\": \"<string>\",\n        \"cronExpression\": \"<string>\",\n        \"startDate\": \"<long>\",\n        \"endDate\": \"<long>\"\n      }\n    }\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "36ecf9a9-8f15-4717-9af2-18553943e673",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "MAPPING_PROCESSING_FINISHED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ccffd0cd-98c9-40d5-8035-974bfb83a6b6",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "MAPPING_PROCESSING_FINISHED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "eec9aff8-846c-453f-a577-b38f4cefbe8e",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "MAPPING_PROCESSING_FINISHED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d5706196-bbb4-4618-b5cc-421b010f74cc",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "MAPPING_PROCESSING_FINISHED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0a7ff8db-5f84-464d-85d3-893f7edf185b",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "MAPPING_PROCESSING_FINISHED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "7d408a71-3a75-42e4-af7a-e676ea8c3e2c",
                    "name": "/services/dataloader/api/:tenantId/project/:projectId/jobs",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/:projectId/jobs",
                        "description": {
                            "content": "Creates a job to carry out the load operation using the configurations provided in the request payload. If the configuration details for a job are not provided in the request payload, the API creates a job based on the job definition",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                ":projectId",
                                "jobs"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "projectId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job definition ID used to create the job",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"SAVED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "3e7afc89-b61b-4c9d-9103-07dcbdb50f4e",
                            "name": "Job Created successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"SAVED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"SAVED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5bde598d-2b5f-4520-b500-aafce313f822",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"SAVED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ec0700a8-93d7-4538-b450-15dacfe54196",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"SAVED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a1b2c116-5979-4622-a6ff-daa03f0af0bf",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"SAVED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3dae9e27-c759-4aae-9b97-6cc119782bd6",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"SAVED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0f792f2a-0925-43ca-a9bc-0bc70585282d",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"SAVED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "faf6c1a0-f885-4bf1-8082-6551c5c714e7",
                    "name": "/services/dataloader/api/:tenantId/project/:projectId/jobs/run",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/:projectId/jobs/run",
                        "description": {
                            "content": "Creates and runs a job to carry out the load operation using configurations provided in the request payload. If the configuration details for a job are not provided in the request payload, the API creates a job based on the job definition",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                ":projectId",
                                "jobs",
                                "run"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "projectId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job definition ID used to create the job",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"SAVED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "4a07c64c-42fe-4c57-aa4f-71049fad85e4",
                            "name": "Job executed successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs",
                                        "run"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"SAVED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"SAVED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "73ef9f40-6b16-4124-b035-46363659501f",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs",
                                        "run"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"SAVED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d86106ce-9382-4430-830a-364466dae7d4",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs",
                                        "run"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"SAVED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "600e2786-51fa-4006-971f-17c9f059a4a1",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs",
                                        "run"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"SAVED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e03eeaf2-19b8-4608-844a-d961f2605749",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs",
                                        "run"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"SAVED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3b998a4e-1995-4d90-9175-a2c36b2555f2",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs",
                                        "run"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"SAVED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "10902a90-9689-43be-9e1a-fc42dbeed308",
                    "name": "/services/dataloader/api/:tenantId/projects",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/projects",
                        "description": {
                            "content": "Retrieves existing job definitions for a tenant matching filter criteria",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "projects"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Job definitions are filtered based on the status",
                                        "type": "text/plain"
                                    },
                                    "key": "projectStatus",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Filter job definitions by mapping used",
                                        "type": "text/plain"
                                    },
                                    "key": "mappingId",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Criteria to filter and get jobs which are created after provided long value of date",
                                        "type": "text/plain"
                                    },
                                    "key": "creationDate",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Filter criteria to list jobs based on progress status",
                                        "type": "text/plain"
                                    },
                                    "key": "progressStatus",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "If 'false', the jobs with completed status are displayed, else draft jobs are displayed",
                                        "type": "text/plain"
                                    },
                                    "key": "inProgress",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                        "type": "text/plain"
                                    },
                                    "key": "page",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Number of objects that need to be returned with a paged response",
                                        "type": "text/plain"
                                    },
                                    "key": "size",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                        "type": "text/plain"
                                    },
                                    "key": "sort",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "ce566dbf-f3fd-4ad0-8c8f-8823667eb9bc",
                            "name": "Job definitions retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "projects"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job definitions are filtered based on the status",
                                                "type": "text/plain"
                                            },
                                            "key": "projectStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter job definitions by mapping used",
                                                "type": "text/plain"
                                            },
                                            "key": "mappingId",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created after provided long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter criteria to list jobs based on progress status",
                                                "type": "text/plain"
                                            },
                                            "key": "progressStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'false', the jobs with completed status are displayed, else draft jobs are displayed",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  },\n  {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"GCP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2a01cd80-2ca8-4a05-bd46-30b3903ad168",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "projects"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job definitions are filtered based on the status",
                                                "type": "text/plain"
                                            },
                                            "key": "projectStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter job definitions by mapping used",
                                                "type": "text/plain"
                                            },
                                            "key": "mappingId",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created after provided long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter criteria to list jobs based on progress status",
                                                "type": "text/plain"
                                            },
                                            "key": "progressStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'false', the jobs with completed status are displayed, else draft jobs are displayed",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7a4cab90-0666-42c4-81e0-c3737a3fad77",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "projects"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job definitions are filtered based on the status",
                                                "type": "text/plain"
                                            },
                                            "key": "projectStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter job definitions by mapping used",
                                                "type": "text/plain"
                                            },
                                            "key": "mappingId",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created after provided long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter criteria to list jobs based on progress status",
                                                "type": "text/plain"
                                            },
                                            "key": "progressStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'false', the jobs with completed status are displayed, else draft jobs are displayed",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b1a99290-fbed-460e-be02-8efc6a2a670d",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "projects"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job definitions are filtered based on the status",
                                                "type": "text/plain"
                                            },
                                            "key": "projectStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter job definitions by mapping used",
                                                "type": "text/plain"
                                            },
                                            "key": "mappingId",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created after provided long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter criteria to list jobs based on progress status",
                                                "type": "text/plain"
                                            },
                                            "key": "progressStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'false', the jobs with completed status are displayed, else draft jobs are displayed",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e36db295-0847-43dc-8487-0ecf10dd51c3",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "projects"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job definitions are filtered based on the status",
                                                "type": "text/plain"
                                            },
                                            "key": "projectStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter job definitions by mapping used",
                                                "type": "text/plain"
                                            },
                                            "key": "mappingId",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created after provided long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter criteria to list jobs based on progress status",
                                                "type": "text/plain"
                                            },
                                            "key": "progressStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'false', the jobs with completed status are displayed, else draft jobs are displayed",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "15c6f969-1068-4ed6-9aec-6bea31005767",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "projects"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job definitions are filtered based on the status",
                                                "type": "text/plain"
                                            },
                                            "key": "projectStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter job definitions by mapping used",
                                                "type": "text/plain"
                                            },
                                            "key": "mappingId",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created after provided long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter criteria to list jobs based on progress status",
                                                "type": "text/plain"
                                            },
                                            "key": "progressStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'false', the jobs with completed status are displayed, else draft jobs are displayed",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "150862b4-57dc-48c7-b682-db33956196af",
                    "name": "/services/dataloader/api/:tenantId/storage/_account",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/storage/_account",
                        "description": {
                            "content": "Creates a storage account to be used while creating the source details. You must provide the account type and credential details for creating the storage account",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "storage",
                                "_account"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"UPLOADED\",\n  \"credentials\": \"<string>\"\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "bbb86906-b69f-4401-9400-a0f29d3e1301",
                            "name": "Resource is created successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"UPLOADED\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"UPLOADED\",\n  \"credentials\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8b322fec-f7c5-4ef8-8db3-b1db3984a6e4",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"UPLOADED\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "43911b44-481f-414b-9db6-c9fd972c6f0e",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"UPLOADED\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "296f6c32-034b-4939-bb8f-dde8beeee6a8",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"UPLOADED\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "51726731-531b-4ddb-ba08-7fde1d81d97f",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"UPLOADED\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2f5d9cae-7077-4f60-9a7b-10ee4c6a5794",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"UPLOADED\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "2b9dac32-094f-4941-8819-a038ffa477a0",
                    "name": "/services/dataloader/api/:tenantId/storage/_account/:accountId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/storage/_account/:accountId",
                        "description": {
                            "content": "You can get the existing storage account details using the ID",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "storage",
                                "_account",
                                ":accountId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "accountId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Existing storage account ID for which the details must be retrieved",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "49174d17-2d1e-4062-9940-f6b27ff2a30a",
                            "name": "Resource retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"UPLOADED\",\n  \"credentials\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "79ccc33a-b318-4cca-9d54-38697fce109a",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1ff3e0da-b411-44c1-9dba-e7521a9ddec7",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "af614862-4bb9-4b87-b9e5-16313478ebaa",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "abaccba6-51d1-4207-8b97-d4e8eb0f6ecc",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5488e8c2-0155-41db-84f3-36c84f01cafb",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "b9882a87-10ba-4195-98ec-6ac30f30d9c2",
                    "name": "/services/dataloader/api/:tenantId/storage/_account/:accountId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/storage/_account/:accountId",
                        "description": {
                            "content": "Updates the existing storage account details",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "storage",
                                "_account",
                                ":accountId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "accountId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Existing storage account ID for which the details must be updated",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"UPLOADED\",\n  \"credentials\": \"<string>\"\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "1dab8358-a870-4017-890d-4acf25ff45b4",
                            "name": "Resource is update successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"UPLOADED\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"UPLOADED\",\n  \"credentials\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9c26432f-86db-46d3-ba04-d7e38ea4e9ea",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"UPLOADED\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1dc7f953-0aee-49ac-b56c-1a2848a639fe",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"UPLOADED\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "338a74a8-23c8-4b1b-b844-86a9611170e8",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"UPLOADED\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2fb8dccc-2b45-4a98-bc14-11cb862a5784",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"UPLOADED\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "32e1e78e-ee8f-4b6e-9cfb-40c46b577b36",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"UPLOADED\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "6c975c74-69d9-46ed-afd9-59199df4d56e",
                    "name": "/services/dataloader/api/:tenantId/storage/_account/:accountId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/storage/_account/:accountId",
                        "description": {
                            "content": "Delete existing storage account details using the ID",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "storage",
                                "_account",
                                ":accountId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "accountId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Existing storage account ID for which the details must be deleted",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "8407a203-a117-4887-a501-432460fcea75",
                            "name": "Resource deleted successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "7d9e60aa-1d28-4864-8593-3d00962aea5c",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a1e4d1c1-0d28-4f54-b9b6-3532de110faf",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "72de87f3-6146-410a-8435-65786e932fe0",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5bb6a28a-878d-4990-b2cc-e48edbe5fe93",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c16422eb-8053-4697-90a4-755399ac53a8",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "76d631e1-af4a-46a5-886b-4f952b63961d",
                    "name": "/services/dataloader/api/:tenantId/storage/_accounts",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/storage/_accounts",
                        "description": {
                            "content": "Retrieves all storage account details for the accounts created by the logged-in user matching the filter criteria",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "storage",
                                "_accounts"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Type of the Storage account. <br><b>For example:</b> 'accountType=GCP'",
                                        "type": "text/plain"
                                    },
                                    "key": "accountType",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                        "type": "text/plain"
                                    },
                                    "key": "page",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Number of objects that need to be returned with a paged response",
                                        "type": "text/plain"
                                    },
                                    "key": "size",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=accountType' - sorts the storage accounts in the ascending order of accountType, 'sort=accountType:desc' - sorts the source details in the descending order of accountType. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=accountType:desc,name:desc' - sorts the API response in the descending order of accountType and 'name'",
                                        "type": "text/plain"
                                    },
                                    "key": "sort",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "030259aa-8cf1-4821-996a-dd93ae586a4c",
                            "name": "Resources retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_accounts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Type of the Storage account. <br><b>For example:</b> 'accountType=GCP'",
                                                "type": "text/plain"
                                            },
                                            "key": "accountType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=accountType' - sorts the storage accounts in the ascending order of accountType, 'sort=accountType:desc' - sorts the source details in the descending order of accountType. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=accountType:desc,name:desc' - sorts the API response in the descending order of accountType and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"SFTP\",\n    \"credentials\": \"<string>\"\n  },\n  {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"GCP\",\n    \"credentials\": \"<string>\"\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b0360df9-05b8-496d-87a9-ce6fd682e9ba",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_accounts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Type of the Storage account. <br><b>For example:</b> 'accountType=GCP'",
                                                "type": "text/plain"
                                            },
                                            "key": "accountType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=accountType' - sorts the storage accounts in the ascending order of accountType, 'sort=accountType:desc' - sorts the source details in the descending order of accountType. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=accountType:desc,name:desc' - sorts the API response in the descending order of accountType and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "09eb29be-7379-4745-9a7f-3ebcb6cb85b1",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_accounts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Type of the Storage account. <br><b>For example:</b> 'accountType=GCP'",
                                                "type": "text/plain"
                                            },
                                            "key": "accountType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=accountType' - sorts the storage accounts in the ascending order of accountType, 'sort=accountType:desc' - sorts the source details in the descending order of accountType. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=accountType:desc,name:desc' - sorts the API response in the descending order of accountType and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8dd660b9-9896-4368-a189-ef840bc11c05",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_accounts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Type of the Storage account. <br><b>For example:</b> 'accountType=GCP'",
                                                "type": "text/plain"
                                            },
                                            "key": "accountType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=accountType' - sorts the storage accounts in the ascending order of accountType, 'sort=accountType:desc' - sorts the source details in the descending order of accountType. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=accountType:desc,name:desc' - sorts the API response in the descending order of accountType and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "99e372d9-4ae2-4ac4-ae42-46f70f3b4e5b",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_accounts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Type of the Storage account. <br><b>For example:</b> 'accountType=GCP'",
                                                "type": "text/plain"
                                            },
                                            "key": "accountType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=accountType' - sorts the storage accounts in the ascending order of accountType, 'sort=accountType:desc' - sorts the source details in the descending order of accountType. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=accountType:desc,name:desc' - sorts the API response in the descending order of accountType and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a1e83513-1246-4b7f-ac28-57badb09c7be",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_accounts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Type of the Storage account. <br><b>For example:</b> 'accountType=GCP'",
                                                "type": "text/plain"
                                            },
                                            "key": "accountType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=accountType' - sorts the storage accounts in the ascending order of accountType, 'sort=accountType:desc' - sorts the source details in the descending order of accountType. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=accountType:desc,name:desc' - sorts the API response in the descending order of accountType and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "d4814638-b08c-4833-93a8-82fc9dd4b1e5",
                    "name": "/services/dataloader/api/:tenantId/storage/:directory/upload",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/storage/:directory/upload",
                        "description": {
                            "content": "Upload a file from your system to remote storage for carrying out load operation",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "storage",
                                ":directory",
                                "upload"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "If set to 'true', the existing file is overwritten with the new file",
                                        "type": "text/plain"
                                    },
                                    "key": "replace",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "When provided, the API uploads the file and updates the provided job definition and maps the storage ID to the uploaded file",
                                        "type": "text/plain"
                                    },
                                    "key": "projectId",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "CSV file delimiter character, supported values are , | || ; ",
                                        "type": "text/plain"
                                    },
                                    "key": "delimiter",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "directory",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) GCS path for uploading the file",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "multipart/form-data"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "description": {
                                        "content": "(Required) MIME file that must be uploaded",
                                        "type": "text/plain"
                                    },
                                    "key": "file",
                                    "value": "<string>",
                                    "type": "text"
                                }
                            ]
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "9ee768ac-4156-436f-8d7d-a1b1dda9e091",
                            "name": "File uploaded",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":directory",
                                        "upload"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to 'true', the existing file is overwritten with the new file",
                                                "type": "text/plain"
                                            },
                                            "key": "replace",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "When provided, the API uploads the file and updates the provided job definition and maps the storage ID to the uploaded file",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "CSV file delimiter character, supported values are , | || ; ",
                                                "type": "text/plain"
                                            },
                                            "key": "delimiter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) MIME file that must be uploaded",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<string>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AZURE\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "19e33928-0337-4e6d-9857-e5e878090129",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":directory",
                                        "upload"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to 'true', the existing file is overwritten with the new file",
                                                "type": "text/plain"
                                            },
                                            "key": "replace",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "When provided, the API uploads the file and updates the provided job definition and maps the storage ID to the uploaded file",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "CSV file delimiter character, supported values are , | || ; ",
                                                "type": "text/plain"
                                            },
                                            "key": "delimiter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) MIME file that must be uploaded",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<string>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7715f84c-f894-4afc-a39c-45a7d569dc7a",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":directory",
                                        "upload"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to 'true', the existing file is overwritten with the new file",
                                                "type": "text/plain"
                                            },
                                            "key": "replace",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "When provided, the API uploads the file and updates the provided job definition and maps the storage ID to the uploaded file",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "CSV file delimiter character, supported values are , | || ; ",
                                                "type": "text/plain"
                                            },
                                            "key": "delimiter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) MIME file that must be uploaded",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<string>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "bcbd13b3-e54c-49be-88e0-6f41e6bd64ea",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":directory",
                                        "upload"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to 'true', the existing file is overwritten with the new file",
                                                "type": "text/plain"
                                            },
                                            "key": "replace",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "When provided, the API uploads the file and updates the provided job definition and maps the storage ID to the uploaded file",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "CSV file delimiter character, supported values are , | || ; ",
                                                "type": "text/plain"
                                            },
                                            "key": "delimiter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) MIME file that must be uploaded",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<string>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "be310061-dad8-49ce-9589-da3f65ce24b5",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":directory",
                                        "upload"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to 'true', the existing file is overwritten with the new file",
                                                "type": "text/plain"
                                            },
                                            "key": "replace",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "When provided, the API uploads the file and updates the provided job definition and maps the storage ID to the uploaded file",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "CSV file delimiter character, supported values are , | || ; ",
                                                "type": "text/plain"
                                            },
                                            "key": "delimiter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) MIME file that must be uploaded",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<string>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "66294290-3eec-4c36-abdb-8e967a2b79f8",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":directory",
                                        "upload"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to 'true', the existing file is overwritten with the new file",
                                                "type": "text/plain"
                                            },
                                            "key": "replace",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "When provided, the API uploads the file and updates the provided job definition and maps the storage ID to the uploaded file",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "CSV file delimiter character, supported values are , | || ; ",
                                                "type": "text/plain"
                                            },
                                            "key": "delimiter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) MIME file that must be uploaded",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<string>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "055e44ff-d969-4e01-b561-5738f57f5150",
                    "name": "/services/dataloader/api/:tenantId/storage/:sourceId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/storage/:sourceId",
                        "description": {
                            "content": "Removes the uploaded file from Cloud Storage",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "storage",
                                ":sourceId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "sourceId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Source details ID to delete",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "c8c0e32a-bfda-49a4-97b8-1364d70c85f0",
                            "name": "Source file deleted successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "625d1313-b6a1-4ca2-8dcf-44552fa19db4",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a9fe0363-697a-48ab-8cde-138fcd886039",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "13948d43-ab00-4825-bf9e-40299a988d1b",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "579f36b9-31c8-477c-8120-986f91e136c7",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "48328dd6-adfb-4e45-a7f2-50b857aadc8f",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "436f5e6e-9846-42f2-a707-91350bd64815",
                    "name": "/services/dataloader/api/:tenantId/storage/:sourceId/read",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/storage/:sourceId/read",
                        "description": {
                            "content": "Reads the specified number of lines from the existing source details and returns the information",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "storage",
                                ":sourceId",
                                "read"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Number of lines to be read from the source file for preview",
                                        "type": "text/plain"
                                    },
                                    "key": "linesToRead",
                                    "value": "10"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "sourceId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Existing Storage ID from which the files are to be read",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "19104905-69b2-4d6d-9258-3e53bedc63ca",
                            "name": "Source files are read successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId",
                                        "read"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of lines to be read from the source file for preview",
                                                "type": "text/plain"
                                            },
                                            "key": "linesToRead",
                                            "value": "10"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"adipisicing_79d\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"Ut972\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1d1a8686-91db-4790-b5c5-2a3889811bc1",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId",
                                        "read"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of lines to be read from the source file for preview",
                                                "type": "text/plain"
                                            },
                                            "key": "linesToRead",
                                            "value": "10"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "fad2696e-aed6-43c1-91e3-dd080b64e1b8",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId",
                                        "read"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of lines to be read from the source file for preview",
                                                "type": "text/plain"
                                            },
                                            "key": "linesToRead",
                                            "value": "10"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c6e4e0ff-aa69-446b-99e0-dac42b50a6dd",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId",
                                        "read"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of lines to be read from the source file for preview",
                                                "type": "text/plain"
                                            },
                                            "key": "linesToRead",
                                            "value": "10"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "bebeb699-7b25-40fd-927a-84b347a7bb43",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId",
                                        "read"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of lines to be read from the source file for preview",
                                                "type": "text/plain"
                                            },
                                            "key": "linesToRead",
                                            "value": "10"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c4b4e990-8fd4-4202-96e0-d722b4098ad2",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId",
                                        "read"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of lines to be read from the source file for preview",
                                                "type": "text/plain"
                                            },
                                            "key": "linesToRead",
                                            "value": "10"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ]
        },
        {
            "name": "Reference Data Management",
            "description": "",
            "item": [
                {
                    "id": "4e041304-152d-4815-b65c-1a901346b154",
                    "name": "/services/lookups/:tenantId",
                    "request": {
                        "name": "/services/lookups/:tenantId",
                        "description": {
                            "content": "This API saves a collection of lookups in RDM tenant according to the JSON object definition. If you need to create just one lookup value then please specify one JSON object in the array. The same API should be used for create and update operations.<br/><br/>You can create a maximum of <b>100</b> lookup codes in a single request.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "lookups",
                                ":tenantId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the RDM tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "4ef5dba6-4623-460a-a4bf-c4957f9b59b0",
                            "name": "Successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"uri\": \"<string>\",\n    \"value\": {},\n    \"error\": {\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"innerErrorData\": {\n        \"innerErrorData\": {\n          \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n        },\n        \"exception\": \"<string>\",\n        \"stack\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    \"warning\": {\n      \"warningMessage\": \"<string>\"\n    }\n  },\n  {\n    \"uri\": \"<string>\",\n    \"value\": {},\n    \"error\": {\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"innerErrorData\": {\n        \"innerErrorData\": {\n          \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n        },\n        \"exception\": \"<string>\",\n        \"stack\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    \"warning\": {\n      \"warningMessage\": \"<string>\"\n    }\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "dd6ac30b-0207-40cf-8671-aa14c01d4d44",
                            "name": "The operation cannot be performed because user is unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "2b79fa98-224c-4834-b358-928321d3140b",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "ff63b72e-eee9-4983-9fa9-c986ec0336ae",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d32c91b3-beeb-49ef-a581-c5c7de27e472",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "538726e8-fab5-4d1d-9d98-44ddf7557b0c",
                    "name": "/services/lookups/:tenantId/:type",
                    "request": {
                        "name": "/services/lookups/:tenantId/:type",
                        "description": {
                            "content": "This API saves a collection of lookups in RDM tenant according to the JSON object definition. If you need to create just one lookup value then please specify one JSON object in the array. The same API should be used for create and update operations.<br/><br/>You can create a maximum of <b>100</b> lookup codes in a single request.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "lookups",
                                ":tenantId",
                                ":type"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the RDM tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "type",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Lookup type for which values must be created",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "752aee5e-0ceb-464b-a791-c939366bc48c",
                            "name": "Successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"uri\": \"<string>\",\n  \"value\": {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  \"error\": {\n    \"errorMessage\": \"<string>\",\n    \"errorCode\": \"<integer>\",\n    \"innerErrorData\": {\n      \"innerErrorData\": {\n        \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n      },\n      \"exception\": \"<string>\",\n      \"stack\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  },\n  \"warning\": {\n    \"warningMessage\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "79f43ee2-1452-4955-9e12-5e4fa230a3bd",
                            "name": "The operation cannot be performed because user is unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "4ae23d23-f68d-43bf-ac30-fc11f79f48e0",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "ee26cfc1-e0dc-4930-ad54-4f444b1f8c58",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4a6d96c6-9622-477e-a8ef-ad98f86d049f",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "d90ebb63-ecf8-4eae-8b28-86944f5e9fbb",
                    "name": "/services/lookups/:tenantId/:type/:code",
                    "request": {
                        "name": "/services/lookups/:tenantId/:type/:code",
                        "description": {
                            "content": "This API updates a lookup value for the specified lookup type and lookup code. The response returns <b>Success</b> if the value is successfully updated.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "lookups",
                                ":tenantId",
                                ":type",
                                ":code"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the RDM tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "type",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Lookup type for which values must be created",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": ".)L",
                                    "key": "code",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"tenantId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"code\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"parents\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sourceMappings\": [\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    }\n  ],\n  \"localizations\": [\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"updatedBy\": \"<string>\",\n  \"updateDate\": \"<long>\",\n  \"version\": \"<long>\"\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "ee4f9d44-2717-41e2-90f1-8d71d272ee14",
                            "name": "Successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type",
                                        ":code"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"tenantId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"code\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"parents\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sourceMappings\": [\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    }\n  ],\n  \"localizations\": [\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"updatedBy\": \"<string>\",\n  \"updateDate\": \"<long>\",\n  \"version\": \"<long>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"tenantId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"code\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"parents\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sourceMappings\": [\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    }\n  ],\n  \"localizations\": [\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"updatedBy\": \"<string>\",\n  \"updateDate\": \"<long>\",\n  \"version\": \"<long>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ff9644d7-a5bd-49d2-8546-b3eaac0378a6",
                            "name": "The operation cannot be performed because user is unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type",
                                        ":code"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"tenantId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"code\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"parents\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sourceMappings\": [\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    }\n  ],\n  \"localizations\": [\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"updatedBy\": \"<string>\",\n  \"updateDate\": \"<long>\",\n  \"version\": \"<long>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "4001b591-bc62-4f8c-890e-4920886e55de",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type",
                                        ":code"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"tenantId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"code\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"parents\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sourceMappings\": [\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    }\n  ],\n  \"localizations\": [\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"updatedBy\": \"<string>\",\n  \"updateDate\": \"<long>\",\n  \"version\": \"<long>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "59cb2dcc-65f2-4dc2-a26b-e09c4dc8296b",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type",
                                        ":code"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"tenantId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"code\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"parents\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sourceMappings\": [\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    }\n  ],\n  \"localizations\": [\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"updatedBy\": \"<string>\",\n  \"updateDate\": \"<long>\",\n  \"version\": \"<long>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4e77d46c-9691-49da-8386-dee0d849b6a6",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type",
                                        ":code"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"tenantId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"code\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"parents\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sourceMappings\": [\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    }\n  ],\n  \"localizations\": [\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"updatedBy\": \"<string>\",\n  \"updateDate\": \"<long>\",\n  \"version\": \"<long>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "6c3efafb-2cae-45b4-b127-11eb333dcf5e",
                    "name": "/services/unmapped/:tenantId",
                    "request": {
                        "name": "/services/unmapped/:tenantId",
                        "description": {
                            "content": "This API saves a collection of unmapped lookups in RDM tenant according to the JSON object definition. If you need to create just one unmapped lookup value then please specify one JSON object in the array. The same API should be used for create and update operations.<br/><br/>You should use this API when you have lookups from a source but still don't have the corresponding canonical value in the lookup type. Once the canonical value is defined for those unmapped lookups from a source, please use Save Lookup API with the details from unmapped mapping and then delete the unmapped value.<br/><br/>You can create a maximum of <b>100</b> unmapped values in a single request.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "unmapped",
                                ":tenantId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                        "type": "text/plain"
                                    },
                                    "key": "onlyIfNoMapping",
                                    "value": "false"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the RDM tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "d6cded1c-20e5-44af-80b1-06a1b29c3400",
                            "name": "Successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"uri\": \"<string>\",\n  \"value\": {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  \"error\": {\n    \"errorMessage\": \"<string>\",\n    \"errorCode\": \"<integer>\",\n    \"innerErrorData\": {\n      \"innerErrorData\": {\n        \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n      },\n      \"exception\": \"<string>\",\n      \"stack\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  },\n  \"warning\": {\n    \"warningMessage\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9a88652c-fda0-4df9-80ed-db37e695b60b",
                            "name": "The operation cannot be performed because user is unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "eeb93f6d-20bf-4d07-b290-41f07c1f3742",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "d2570d9e-dfbc-4069-87f9-e96925d7c1ac",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "81557fa5-751e-479e-9e56-6c8fe2dbf85b",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "60500686-121a-403a-bfa8-89de6ddc3f31",
                    "name": "/services/unmapped/:tenantId/:type",
                    "request": {
                        "name": "/services/unmapped/:tenantId/:type",
                        "description": {
                            "content": "This API saves a collection of unmapped lookups in RDM tenant according to the JSON object definition. If you need to create just one unmapped lookup value then please specify one JSON object in the array. The same API should be used for create and update operations.<br/><br/>You should use this API when you have lookups from a source but still don't have the corresponding canonical value in the lookup type. Once the canonical value is defined for those unmapped lookups from a source, please use Save Lookup API with the details from unmapped mapping and then delete the unmapped value.<br/><br/>You can create a maximum of <b>100</b> unmapped values in a single request.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "unmapped",
                                ":tenantId",
                                ":type"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                        "type": "text/plain"
                                    },
                                    "key": "onlyIfNoMapping",
                                    "value": "false"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the RDM tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "type",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Lookup type for which unmapped values must be created",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "bafd5439-a69b-4158-a8cc-766d97842942",
                            "name": "Successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"uri\": \"<string>\",\n    \"value\": {},\n    \"error\": {\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"innerErrorData\": {\n        \"innerErrorData\": {\n          \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n        },\n        \"exception\": \"<string>\",\n        \"stack\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    \"warning\": {\n      \"warningMessage\": \"<string>\"\n    }\n  },\n  {\n    \"uri\": \"<string>\",\n    \"value\": {},\n    \"error\": {\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"innerErrorData\": {\n        \"innerErrorData\": {\n          \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n        },\n        \"exception\": \"<string>\",\n        \"stack\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    \"warning\": {\n      \"warningMessage\": \"<string>\"\n    }\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5a003aee-f761-4ac0-8587-3f6fee43aeac",
                            "name": "The operation cannot be performed because user is unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "4cc0141c-53ed-4a58-b687-652cc6987cdf",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "0ed73436-1aa4-4257-8109-7cd1f98dfba0",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ecdcc469-a12f-4b25-946c-00d88740c1af",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ]
        }
    ],
    "event": [],
    "variable": [
        {
            "key": "baseUrl",
            "value": "/"
        }
    ],
    "info": {
        "_postman_id": "884153c2-9226-45f1-96ae-03345d3e76ac",
        "name": "Ingest",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
        "description": {
            "content": "Load data into entities, relationships, interactions, crosswalks and reference data.\n\nContact Support:\n Name: Reltio\n Email: support@reltio.com",
            "type": "text/plain"
        }
    }
}