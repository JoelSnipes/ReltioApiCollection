{
    "item": [
        {
            "name": "Entities",
            "description": "",
            "item": [
                {
                    "id": "94644c10-bfc5-42a9-8baa-17f9e0938ab6",
                    "name": "/services/reltio/api/:tenantId/entities",
                    "request": {
                        "name": "/services/reltio/api/:tenantId/entities",
                        "description": {
                            "content": "This API saves a collection of entities in Reltio Platform according to JSON object definition. To create just one entity using this API, specify one JSON object in the array. <br /> If you post an entity with some crosswalks (for example, <b>crosswalk1</b> and <b>crosswalk2</b>), and that entity corresponds to some existing entities (<b>entity1</b> and <b>entity2</b>) in the Reltio Platform, then these entities are merged in one entity referred as the survivor (for example, <b>entity1</b> would be merged in <b>entity2</b>). After this, the resultant survivor entity (for example, <b>entity2</b>) is updated with the new information from a posted entity. If no entities are found or provided in the posted entity crosswalk or no crosswalks are provided, then a new entity is created. <br /><b>Note:</b> If you do not specify roles in the request, then all roles from the entity being overwritten remain unchanged. To remove all roles from the resultant entity specify an empty array of roles in the <b>POST /entities</b> request.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "reltio",
                                "api",
                                ":tenantId",
                                "entities"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Specifies if the response should contain created entities. Default is true.",
                                        "type": "text/plain"
                                    },
                                    "key": "returnObjects",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                        "type": "text/plain"
                                    },
                                    "key": "options",
                                    "value": "partialOverrideForReference,ovOnly"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nisi_622\": \"<string>\",\n          \"est_893\": \"<string>\",\n          \"fugiat0a\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"amet_8\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"velit_887\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"reprehenderit__e2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"eiusmod__a1\": \"<string>\",\n          \"nisi_e\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"cupidatat_dc\": \"<string>\",\n          \"sintb94\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"in99d\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "bf96bddd-f82d-48a7-982d-f2b1fccf8cd8",
                            "name": "Entities are successfully saved",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "partialOverrideForReference,ovOnly"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nisi_622\": \"<string>\",\n          \"est_893\": \"<string>\",\n          \"fugiat0a\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"amet_8\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"velit_887\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"reprehenderit__e2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"eiusmod__a1\": \"<string>\",\n          \"nisi_e\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"cupidatat_dc\": \"<string>\",\n          \"sintb94\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"in99d\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"index\": \"<integer>\",\n    \"errors\": {\n      \"severity\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorDetailMessage\": \"<string>\",\n      \"innerErrorData\": {\n        \"exception\": \"<string>\"\n      }\n    },\n    \"object\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"proidentfe\": \"<string>\",\n            \"officia__3\": \"<string>\",\n            \"dolorcd\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"Loremce6\": \"<string>\",\n            \"eiusmodf50\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<long>\",\n      \"updatedTime\": \"<long>\",\n      \"attributes\": {},\n      \"uri\": \"<string>\",\n      \"type\": \"<string>\",\n      \"analyticsAttributes\": {\n        \"ea___\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"qui_417\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ]\n      },\n      \"secondaryLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"refUpdatedBy\": \"<string>\",\n      \"refUpdatedTime\": \"<long>\",\n      \"refCommitTime\": \"<long>\",\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"successful\": \"<boolean>\"\n  },\n  {\n    \"index\": \"<integer>\",\n    \"errors\": {\n      \"severity\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorDetailMessage\": \"<string>\",\n      \"innerErrorData\": {\n        \"exception\": \"<string>\"\n      }\n    },\n    \"object\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"laborum_e1\": \"<string>\",\n            \"site3\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"do_80\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<long>\",\n      \"updatedTime\": \"<long>\",\n      \"attributes\": {},\n      \"uri\": \"<string>\",\n      \"type\": \"<string>\",\n      \"analyticsAttributes\": {\n        \"dolor_d\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ]\n      },\n      \"secondaryLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"refUpdatedBy\": \"<string>\",\n      \"refUpdatedTime\": \"<long>\",\n      \"refCommitTime\": \"<long>\",\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"successful\": \"<boolean>\"\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "fbb0e9f5-91e7-4c45-a39b-54a4ee565391",
                            "name": "Entities aren't saved due to a reason provided in the error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "partialOverrideForReference,ovOnly"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nisi_622\": \"<string>\",\n          \"est_893\": \"<string>\",\n          \"fugiat0a\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"amet_8\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"velit_887\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"reprehenderit__e2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"eiusmod__a1\": \"<string>\",\n          \"nisi_e\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"cupidatat_dc\": \"<string>\",\n          \"sintb94\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"in99d\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "26777e80-b749-4b31-bfa4-8e8a634d34d4",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "partialOverrideForReference,ovOnly"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nisi_622\": \"<string>\",\n          \"est_893\": \"<string>\",\n          \"fugiat0a\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"amet_8\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"velit_887\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"reprehenderit__e2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"eiusmod__a1\": \"<string>\",\n          \"nisi_e\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"cupidatat_dc\": \"<string>\",\n          \"sintb94\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"in99d\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "39ebb3c7-cdfa-4632-b145-fb0928a6ee33",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "partialOverrideForReference,ovOnly"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nisi_622\": \"<string>\",\n          \"est_893\": \"<string>\",\n          \"fugiat0a\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"amet_8\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"velit_887\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"reprehenderit__e2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"eiusmod__a1\": \"<string>\",\n          \"nisi_e\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"cupidatat_dc\": \"<string>\",\n          \"sintb94\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"in99d\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6b212776-1137-4ccb-becc-d1bcbca9d935",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "partialOverrideForReference,ovOnly"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nisi_622\": \"<string>\",\n          \"est_893\": \"<string>\",\n          \"fugiat0a\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"amet_8\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"velit_887\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"reprehenderit__e2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"eiusmod__a1\": \"<string>\",\n          \"nisi_e\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"cupidatat_dc\": \"<string>\",\n          \"sintb94\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"in99d\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d88854c5-f02f-40f5-afdb-ccaaa24732d1",
                            "name": "Too many requests, please try later",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "partialOverrideForReference,ovOnly"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nisi_622\": \"<string>\",\n          \"est_893\": \"<string>\",\n          \"fugiat0a\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"amet_8\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"velit_887\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"reprehenderit__e2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"eiusmod__a1\": \"<string>\",\n          \"nisi_e\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"cupidatat_dc\": \"<string>\",\n          \"sintb94\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"in99d\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Too Many Requests",
                            "code": 429,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "c0cf28ab-c4e9-408c-b2ad-f07674a5db07",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "partialOverrideForReference,ovOnly"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nisi_622\": \"<string>\",\n          \"est_893\": \"<string>\",\n          \"fugiat0a\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"amet_8\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"velit_887\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"reprehenderit__e2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"eiusmod__a1\": \"<string>\",\n          \"nisi_e\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"cupidatat_dc\": \"<string>\",\n          \"sintb94\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"in99d\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "40cb3dc0-471d-4e8e-907c-7188b23bcc45",
                            "name": "This status code could represent 2 possible scenarios. First, the 'Service Unavailable' scenario. Second, this status code is used when too many requests are being sent in-parallel and API backpressure mechanism was used to protect the platform. In both scenarios, an exponential backoff mechanism should be used to control the rate of requests sent to the server. ",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "partialOverrideForReference,ovOnly"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nisi_622\": \"<string>\",\n          \"est_893\": \"<string>\",\n          \"fugiat0a\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"amet_8\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"velit_887\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"reprehenderit__e2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"eiusmod__a1\": \"<string>\",\n          \"nisi_e\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"cupidatat_dc\": \"<string>\",\n          \"sintb94\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"in99d\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e700ea07-c86d-4a1c-bd7e-ff1b23f17564",
                            "name": "The request consumes more resources than it is allowed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "partialOverrideForReference,ovOnly"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nisi_622\": \"<string>\",\n          \"est_893\": \"<string>\",\n          \"fugiat0a\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"amet_8\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"velit_887\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"reprehenderit__e2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"eiusmod__a1\": \"<string>\",\n          \"nisi_e\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"cupidatat_dc\": \"<string>\",\n          \"sintb94\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"in99d\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Insufficient Storage (WebDAV) (RFC 4918)",
                            "code": 507,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "663487c6-0934-4a2e-afb2-9d978fdcf5cf",
                    "name": "/services/reltio/api/:tenantId/entities/_conditional",
                    "request": {
                        "name": "/services/reltio/api/:tenantId/entities/_conditional",
                        "description": {
                            "content": "This API is an aggregate of Search and Save API.It retrieves the individual entities or searches for multiple entities and based on the search result, this API saves a collection of entities in Reltio Platform according to JSON object definition. ",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "reltio",
                                "api",
                                ":tenantId",
                                "entities",
                                "_conditional"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Enables entities filtering by a condition. Format for filter query parameter: filter=({Condition Type}[AND/OR {Condition Type}]*).\nFor more information, please visit https://docs.reltio.com",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Comma-separated list of properties from object structure that should be returned in a response. Allows you to return a partial object. List of object properties you can find at the response model. Additional system properties are:<ul><li>attributes._lookupCodes: return codes for lookup attributes.</li><li>attributes._lookupValues: return values for lookup attributes.</li></ul>",
                                        "type": "text/plain"
                                    },
                                    "key": "select",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Positive Integer value to identify maximum number of entities to return in a response. Can be used to organize pagination in combination with the \"offset\" parameter.",
                                        "type": "text/plain"
                                    },
                                    "key": "max",
                                    "value": "50"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Positive Integer value to identify starting what element in a result set should be returned in a response. Can be used to organize pagination in combination with the max parameter.",
                                        "type": "text/plain"
                                    },
                                    "key": "offset",
                                    "value": "0"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Entity objects property that should be used for sorting. Can be used in combination with the \"order\" parameter to have reverse order. If this parameter is not provided or if the value cannot be recognized, then no sorting is used.",
                                        "type": "text/plain"
                                    },
                                    "key": "sort",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Order of sorting. Applicable only in combination with the sort parameter. Possible values:\n<ul><li>asc - results are shown in ascending order.</li><li>desc - results are shown in descending order.</li></ul>",
                                        "type": "text/plain"
                                    },
                                    "key": "order",
                                    "value": "asc"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Specifies maximum number of values listed in attributes. This restriction is intended for more efficient responses in the case of very long lists of values in some attributes.",
                                        "type": "text/plain"
                                    },
                                    "key": "defaultMaxValues",
                                    "value": "<int>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "When set to true, documents with search hits in labels get more search relevance score.",
                                        "type": "text/plain"
                                    },
                                    "key": "scoreEnabled",
                                    "value": "false"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Defines whether to include active and expired entities into the results. By default, only active entities are included in the response. Possible values:\n<ul><li>all - include both active and expired entities</li><li>active - include only active entities</li><li>not_active - include only expired entities</li></ul>",
                                        "type": "text/plain"
                                    },
                                    "key": "activeness",
                                    "value": "active"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Specifies if the response should contain created entities. Default is true.",
                                        "type": "text/plain"
                                    },
                                    "key": "returnObjects",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                        "type": "text/plain"
                                    },
                                    "key": "options",
                                    "value": "partialOverrideForReference,ovOnly"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Specifies if the system should apply the request body depending on search results. Default is true.",
                                        "type": "text/plain"
                                    },
                                    "key": "applyIfNoMatches",
                                    "value": "true"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Specifies if the system should return the search results in the response. Default is true.",
                                        "type": "text/plain"
                                    },
                                    "key": "returnMatches",
                                    "value": "true"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nisi_622\": \"<string>\",\n          \"est_893\": \"<string>\",\n          \"fugiat0a\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"amet_8\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"velit_887\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"reprehenderit__e2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"eiusmod__a1\": \"<string>\",\n          \"nisi_e\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"cupidatat_dc\": \"<string>\",\n          \"sintb94\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"in99d\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "cff0d8a7-c47b-4e8c-8e83-87ddc6df3b9f",
                            "name": "successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities",
                                        "_conditional"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Enables entities filtering by a condition. Format for filter query parameter: filter=({Condition Type}[AND/OR {Condition Type}]*).\nFor more information, please visit https://docs.reltio.com",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of properties from object structure that should be returned in a response. Allows you to return a partial object. List of object properties you can find at the response model. Additional system properties are:<ul><li>attributes._lookupCodes: return codes for lookup attributes.</li><li>attributes._lookupValues: return values for lookup attributes.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "select",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Positive Integer value to identify maximum number of entities to return in a response. Can be used to organize pagination in combination with the \"offset\" parameter.",
                                                "type": "text/plain"
                                            },
                                            "key": "max",
                                            "value": "50"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Positive Integer value to identify starting what element in a result set should be returned in a response. Can be used to organize pagination in combination with the max parameter.",
                                                "type": "text/plain"
                                            },
                                            "key": "offset",
                                            "value": "0"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Entity objects property that should be used for sorting. Can be used in combination with the \"order\" parameter to have reverse order. If this parameter is not provided or if the value cannot be recognized, then no sorting is used.",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Order of sorting. Applicable only in combination with the sort parameter. Possible values:\n<ul><li>asc - results are shown in ascending order.</li><li>desc - results are shown in descending order.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "order",
                                            "value": "asc"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies maximum number of values listed in attributes. This restriction is intended for more efficient responses in the case of very long lists of values in some attributes.",
                                                "type": "text/plain"
                                            },
                                            "key": "defaultMaxValues",
                                            "value": "<int>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "When set to true, documents with search hits in labels get more search relevance score.",
                                                "type": "text/plain"
                                            },
                                            "key": "scoreEnabled",
                                            "value": "false"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines whether to include active and expired entities into the results. By default, only active entities are included in the response. Possible values:\n<ul><li>all - include both active and expired entities</li><li>active - include only active entities</li><li>not_active - include only expired entities</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "activeness",
                                            "value": "active"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "partialOverrideForReference,ovOnly"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the system should apply the request body depending on search results. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "applyIfNoMatches",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the system should return the search results in the response. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnMatches",
                                            "value": "true"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nisi_622\": \"<string>\",\n          \"est_893\": \"<string>\",\n          \"fugiat0a\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"amet_8\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"velit_887\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"reprehenderit__e2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"eiusmod__a1\": \"<string>\",\n          \"nisi_e\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"cupidatat_dc\": \"<string>\",\n          \"sintb94\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"in99d\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"index\": \"<integer>\",\n    \"errors\": {\n      \"severity\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorDetailMessage\": \"<string>\",\n      \"innerErrorData\": {\n        \"exception\": \"<string>\"\n      }\n    },\n    \"object\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"proidentfe\": \"<string>\",\n            \"officia__3\": \"<string>\",\n            \"dolorcd\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"Loremce6\": \"<string>\",\n            \"eiusmodf50\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<long>\",\n      \"updatedTime\": \"<long>\",\n      \"attributes\": {},\n      \"uri\": \"<string>\",\n      \"type\": \"<string>\",\n      \"analyticsAttributes\": {\n        \"ea___\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"qui_417\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ]\n      },\n      \"secondaryLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"refUpdatedBy\": \"<string>\",\n      \"refUpdatedTime\": \"<long>\",\n      \"refCommitTime\": \"<long>\",\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"successful\": \"<boolean>\"\n  },\n  {\n    \"index\": \"<integer>\",\n    \"errors\": {\n      \"severity\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorDetailMessage\": \"<string>\",\n      \"innerErrorData\": {\n        \"exception\": \"<string>\"\n      }\n    },\n    \"object\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"laborum_e1\": \"<string>\",\n            \"site3\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"do_80\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<long>\",\n      \"updatedTime\": \"<long>\",\n      \"attributes\": {},\n      \"uri\": \"<string>\",\n      \"type\": \"<string>\",\n      \"analyticsAttributes\": {\n        \"dolor_d\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ]\n      },\n      \"secondaryLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"refUpdatedBy\": \"<string>\",\n      \"refUpdatedTime\": \"<long>\",\n      \"refCommitTime\": \"<long>\",\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"successful\": \"<boolean>\"\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ]
        },
        {
            "name": "Interactions",
            "description": "",
            "item": [
                {
                    "id": "9406a4a4-a0d6-4ae1-bf1a-ff4ba744aed9",
                    "name": "/services/reltio/api/:tenantId/interactions",
                    "request": {
                        "name": "/services/reltio/api/:tenantId/interactions",
                        "description": {
                            "content": "This API creates a collection of interactions in the Reltio Platform according to the JSON object definition. To create just one interaction using this API, specify one JSON object in the array.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "reltio",
                                "api",
                                ":tenantId",
                                "interactions"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "This parameter indicates the identifier of an interaction object in the source system",
                                        "type": "text/plain"
                                    },
                                    "key": "crosswalkValue",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "This parameter specifies if the response must contain the created objects",
                                        "type": "text/plain"
                                    },
                                    "key": "returnObjects",
                                    "value": "true"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                        "type": "text/plain"
                                    },
                                    "key": "options",
                                    "value": "sendHidden,sendHidden"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "disabled": false,
                                "description": {
                                    "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                    "type": "text/plain"
                                },
                                "key": "Source-System",
                                "value": "<string>"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"sint_c88\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ida\": \"<string>\",\n          \"cupidatat8\": \"<string>\",\n          \"eiusmod_11\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"laborum\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ex_7\": \"<string>\",\n          \"deserunt_069\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"adipisicing_f3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"ve\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "e7d48e80-7a89-4716-a18b-c5ac0d5ec6c0",
                            "name": "Successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"sint_c88\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ida\": \"<string>\",\n          \"cupidatat8\": \"<string>\",\n          \"eiusmod_11\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"laborum\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ex_7\": \"<string>\",\n          \"deserunt_069\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"adipisicing_f3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"ve\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"index\": \"<integer>\",\n    \"errors\": {\n      \"severity\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorDetailMessage\": \"<string>\",\n      \"innerErrorData\": {\n        \"exception\": \"<string>\"\n      }\n    },\n    \"object\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"do_01\": \"<string>\",\n            \"commodo2\": \"<string>\",\n            \"ex548\": \"<string>\",\n            \"occaecateb\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"do_\": \"<string>\",\n            \"consequat_5b\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<long>\",\n      \"updatedTime\": \"<long>\",\n      \"attributes\": {},\n      \"members\": {},\n      \"timestamp\": 27315356,\n      \"uri\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"successful\": \"<boolean>\"\n  },\n  {\n    \"index\": \"<integer>\",\n    \"errors\": {\n      \"severity\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorDetailMessage\": \"<string>\",\n      \"innerErrorData\": {\n        \"exception\": \"<string>\"\n      }\n    },\n    \"object\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"dolor18\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"enim_2\": \"<string>\",\n            \"dolor5\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<long>\",\n      \"updatedTime\": \"<long>\",\n      \"attributes\": {},\n      \"members\": {},\n      \"timestamp\": \"non ut eiusmod laboris\",\n      \"uri\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"successful\": \"<boolean>\"\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "27ee05dc-6648-4973-832f-fff6b68abd4c",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"sint_c88\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ida\": \"<string>\",\n          \"cupidatat8\": \"<string>\",\n          \"eiusmod_11\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"laborum\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ex_7\": \"<string>\",\n          \"deserunt_069\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"adipisicing_f3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"ve\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "05f93231-a6ac-41ec-a26e-feb2e3efabfd",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"sint_c88\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ida\": \"<string>\",\n          \"cupidatat8\": \"<string>\",\n          \"eiusmod_11\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"laborum\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ex_7\": \"<string>\",\n          \"deserunt_069\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"adipisicing_f3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"ve\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3bed527c-285f-4523-be05-44deb093a1fe",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"sint_c88\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ida\": \"<string>\",\n          \"cupidatat8\": \"<string>\",\n          \"eiusmod_11\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"laborum\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ex_7\": \"<string>\",\n          \"deserunt_069\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"adipisicing_f3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"ve\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "468293b3-fd7f-40f9-bcab-0647de776918",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"sint_c88\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ida\": \"<string>\",\n          \"cupidatat8\": \"<string>\",\n          \"eiusmod_11\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"laborum\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ex_7\": \"<string>\",\n          \"deserunt_069\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"adipisicing_f3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"ve\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "bac0573f-7305-4883-bee0-e344c1532a29",
                            "name": "Too many requests, please try later",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"sint_c88\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ida\": \"<string>\",\n          \"cupidatat8\": \"<string>\",\n          \"eiusmod_11\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"laborum\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ex_7\": \"<string>\",\n          \"deserunt_069\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"adipisicing_f3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"ve\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Too Many Requests",
                            "code": 429,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "688f9720-6b9c-45c3-ae76-98db9167974c",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"sint_c88\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ida\": \"<string>\",\n          \"cupidatat8\": \"<string>\",\n          \"eiusmod_11\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"laborum\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ex_7\": \"<string>\",\n          \"deserunt_069\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"adipisicing_f3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"ve\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "23ed3b21-e02d-4f16-8138-0d296d33fd31",
                            "name": "This status code could represent 2 possible scenarios. First, the 'Service Unavailable' scenario. Second, this status code is used when too many requests are being sent in-parallel and API backpressure mechanism was used to protect the platform. In both scenarios, an exponential backoff mechanism should be used to control the rate of requests sent to the server. ",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"sint_c88\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ida\": \"<string>\",\n          \"cupidatat8\": \"<string>\",\n          \"eiusmod_11\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"laborum\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ex_7\": \"<string>\",\n          \"deserunt_069\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"adipisicing_f3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"ve\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "29160ded-f191-4394-8153-5fff8dd35c25",
                            "name": "The request consumes more resources than it is allowed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"sint_c88\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ida\": \"<string>\",\n          \"cupidatat8\": \"<string>\",\n          \"eiusmod_11\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"laborum\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ex_7\": \"<string>\",\n          \"deserunt_069\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"adipisicing_f3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"ve\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Insufficient Storage (WebDAV) (RFC 4918)",
                            "code": 507,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ]
        },
        {
            "name": "Relationships",
            "description": "",
            "item": [
                {
                    "id": "a1b1847f-b09b-4c2c-9678-4325b822466b",
                    "name": "/services/reltio/api/:tenantId/relations",
                    "request": {
                        "name": "/services/reltio/api/:tenantId/relations",
                        "description": {
                            "content": "This API saves a collection of relations in the Reltio Platform according to the JSON object definition or to create just one relation using this API, specify one JSON object in the array. You can use the referenced <b>entityURI</b> or referenced entity crosswalk to describe the <b>startObject</b> and/or the <b>endObject</b>. <br>When a new relation is created with URIs for start and end objects, inconsistencies may appear if the relation is created with empty crosswalks inside the <b>startObject</b> and <b>endObject</b> sections. If the <b>connectRelationsToDefaultCrosswalk</b> property available in the physical configuration is enabled and then you create a relation, the <b>startObject</b> and <b>endObject</b> sections are filled with the default crosswalks automatically.</br> <br><b>Note:</b> A crosswalk with the source, which is equal to the value of the default crosswalk in the physical configuration (default value is <b>Reltio</b>), and <b>value=<entity_id></b> is considered as the default crosswalk.</br><br>If the <b>connectRelationsToDefaultCrosswalk</b> property is set to <b>true</b> when a relation is created with empty crosswalks for the start and end objects of the relation, the following rules are applied:<ul><li>If the start entity has a Reltio crosswalk with the same value as its ID, this crosswalk is used as the crosswalk for the start object in the relation. Else, a new Reltio crosswalk with the value equal to the entity ID is created. This new crosswalk is added to the winner contributor of the start entity and the start object of the relation is connected to this new Reltio crosswalk.</li><li>The behavior is the same for the end entity. If the end entity has a Reltio crosswalk with the same value as its ID, this crosswalk is used as the crosswalk for the end object in the relation. Else, a new Reltio crosswalk with the value equal to the entity ID is created. This new crosswalk is added to the winner contributor of the end entity and the end object of the relation is connected to this new Reltio crosswalk.</li></ul></br>",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "reltio",
                                "api",
                                ":tenantId",
                                "relations"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Specifies if the response should contain created relations. Default is true.",
                                        "type": "text/plain"
                                    },
                                    "key": "returnObjects",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                        "type": "text/plain"
                                    },
                                    "key": "options",
                                    "value": "partialOverride,partialOverride"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"mollit_6\": \"<string>\",\n          \"ea_46e\": \"<string>\",\n          \"exercitation_cfe\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"velit24\": \"<string>\",\n          \"deserunt_a3f\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"consequat2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"exercitation_2\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"enim36\": \"<string>\",\n            \"non_dba\": \"<string>\",\n            \"labore_9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"ea5\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"mollit_c\": \"<string>\",\n            \"et1\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"irure_e\": \"<string>\",\n          \"sedc3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"minim_ba\": \"<string>\",\n          \"incididuntc7\": \"<string>\",\n          \"dolor_0b2\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"consequat_67f\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"et_c0\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"pariature1\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"commodo_b_\": \"<string>\",\n            \"Lorem_389\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"Lorem6\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"ullamco_aa3\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"nisi__\": \"<string>\",\n            \"laborum_38f\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "0d5d76b6-dcef-4a3d-a23a-10b1812e3852",
                            "name": "Relationships are successfully saved",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "partialOverride,partialOverride"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"mollit_6\": \"<string>\",\n          \"ea_46e\": \"<string>\",\n          \"exercitation_cfe\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"velit24\": \"<string>\",\n          \"deserunt_a3f\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"consequat2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"exercitation_2\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"enim36\": \"<string>\",\n            \"non_dba\": \"<string>\",\n            \"labore_9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"ea5\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"mollit_c\": \"<string>\",\n            \"et1\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"irure_e\": \"<string>\",\n          \"sedc3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"minim_ba\": \"<string>\",\n          \"incididuntc7\": \"<string>\",\n          \"dolor_0b2\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"consequat_67f\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"et_c0\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"pariature1\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"commodo_b_\": \"<string>\",\n            \"Lorem_389\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"Lorem6\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"ullamco_aa3\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"nisi__\": \"<string>\",\n            \"laborum_38f\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"index\": \"<integer>\",\n    \"errors\": {\n      \"severity\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorDetailMessage\": \"<string>\",\n      \"innerErrorData\": {\n        \"exception\": \"<string>\"\n      }\n    },\n    \"object\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"dolor7\": \"<string>\",\n            \"consequat0\": \"<string>\",\n            \"utc6c\": \"<string>\",\n            \"dolored_e\": \"<string>\",\n            \"cillum_b\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"dolore653\": \"<string>\",\n            \"officia68b\": \"<string>\",\n            \"ea_03d\": \"<string>\",\n            \"cupidatatb7\": \"<string>\",\n            \"qui_6c\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<long>\",\n      \"updatedTime\": \"<long>\",\n      \"startEntityTO\": {},\n      \"endEntityTO\": {},\n      \"attributes\": {},\n      \"uri\": \"<string>\",\n      \"type\": \"<string>\",\n      \"startRefPinned\": \"<boolean>\",\n      \"analyticsAttributes\": {\n        \"magna316\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"quis__d\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"mollita7\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"adipisicing_b\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ]\n      },\n      \"endRefPinned\": \"<boolean>\",\n      \"endRefIgnored\": \"<boolean>\",\n      \"startRefIgnored\": \"<boolean>\",\n      \"refUpdatedBy\": \"<string>\",\n      \"refUpdatedTime\": \"<long>\",\n      \"refCommitTime\": \"<long>\",\n      \"startObject\": {\n        \"crosswalks\": [\n          {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"sourceTable\": \"<string>\",\n            \"url\": \"<string>\",\n            \"createDate\": \"<dateTime>\",\n            \"updateDate\": \"<dateTime>\",\n            \"reltioLoadDate\": \"<dateTime>\",\n            \"deleteDate\": \"<string>\",\n            \"crosswalkExternalInfo\": {\n              \"dtssInfo\": {\n                \"tenantId\": \"<string>\",\n                \"operationId\": \"<string>\",\n                \"matchReasons\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"updatedBy\": \"<string>\",\n                \"updatedTime\": \"<long>\",\n                \"status\": \"<string>\",\n                \"matchRuleUris\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              }\n            },\n            \"singleAttributeUpdateDates\": {\n              \"elitb\": \"<string>\",\n              \"Lorem_b\": \"<string>\",\n              \"Ut9c4\": \"<string>\",\n              \"incididunt595\": \"<string>\"\n            },\n            \"attributes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dataProvider\": \"<boolean>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"sourceTable\": \"<string>\",\n            \"url\": \"<string>\",\n            \"createDate\": \"<dateTime>\",\n            \"updateDate\": \"<dateTime>\",\n            \"reltioLoadDate\": \"<dateTime>\",\n            \"deleteDate\": \"<string>\",\n            \"crosswalkExternalInfo\": {\n              \"dtssInfo\": {\n                \"tenantId\": \"<string>\",\n                \"operationId\": \"<string>\",\n                \"matchReasons\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"updatedBy\": \"<string>\",\n                \"updatedTime\": \"<long>\",\n                \"status\": \"<string>\",\n                \"matchRuleUris\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              }\n            },\n            \"singleAttributeUpdateDates\": {\n              \"ex_049\": \"<string>\",\n              \"magna_1b\": \"<string>\"\n            },\n            \"attributes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dataProvider\": \"<boolean>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"directionalLabel\": \"<string>\",\n        \"label\": \"<string>\",\n        \"objectURI\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      \"endObject\": {\n        \"crosswalks\": [\n          {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"sourceTable\": \"<string>\",\n            \"url\": \"<string>\",\n            \"createDate\": \"<dateTime>\",\n            \"updateDate\": \"<dateTime>\",\n            \"reltioLoadDate\": \"<dateTime>\",\n            \"deleteDate\": \"<string>\",\n            \"crosswalkExternalInfo\": {\n              \"dtssInfo\": {\n                \"tenantId\": \"<string>\",\n                \"operationId\": \"<string>\",\n                \"matchReasons\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"updatedBy\": \"<string>\",\n                \"updatedTime\": \"<long>\",\n                \"status\": \"<string>\",\n                \"matchRuleUris\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              }\n            },\n            \"singleAttributeUpdateDates\": {\n              \"adipisicingf43\": \"<string>\",\n              \"cupidatat__\": \"<string>\",\n              \"in__\": \"<string>\"\n            },\n            \"attributes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dataProvider\": \"<boolean>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"sourceTable\": \"<string>\",\n            \"url\": \"<string>\",\n            \"createDate\": \"<dateTime>\",\n            \"updateDate\": \"<dateTime>\",\n            \"reltioLoadDate\": \"<dateTime>\",\n            \"deleteDate\": \"<string>\",\n            \"crosswalkExternalInfo\": {\n              \"dtssInfo\": {\n                \"tenantId\": \"<string>\",\n                \"operationId\": \"<string>\",\n                \"matchReasons\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"updatedBy\": \"<string>\",\n                \"updatedTime\": \"<long>\",\n                \"status\": \"<string>\",\n                \"matchRuleUris\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              }\n            },\n            \"singleAttributeUpdateDates\": {\n              \"laborumb8\": \"<string>\",\n              \"velit9c\": \"<string>\",\n              \"sint_d\": \"<string>\"\n            },\n            \"attributes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dataProvider\": \"<boolean>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"directionalLabel\": \"<string>\",\n        \"label\": \"<string>\",\n        \"objectURI\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    \"successful\": \"<boolean>\"\n  },\n  {\n    \"index\": \"<integer>\",\n    \"errors\": {\n      \"severity\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorDetailMessage\": \"<string>\",\n      \"innerErrorData\": {\n        \"exception\": \"<string>\"\n      }\n    },\n    \"object\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"cillum6ed\": \"<string>\",\n            \"officia6\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"addcd\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<long>\",\n      \"updatedTime\": \"<long>\",\n      \"startEntityTO\": {},\n      \"endEntityTO\": {},\n      \"attributes\": {},\n      \"uri\": \"<string>\",\n      \"type\": \"<string>\",\n      \"startRefPinned\": \"<boolean>\",\n      \"analyticsAttributes\": {\n        \"anim_c_\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ]\n      },\n      \"endRefPinned\": \"<boolean>\",\n      \"endRefIgnored\": \"<boolean>\",\n      \"startRefIgnored\": \"<boolean>\",\n      \"refUpdatedBy\": \"<string>\",\n      \"refUpdatedTime\": \"<long>\",\n      \"refCommitTime\": \"<long>\",\n      \"startObject\": {\n        \"crosswalks\": [\n          {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"sourceTable\": \"<string>\",\n            \"url\": \"<string>\",\n            \"createDate\": \"<dateTime>\",\n            \"updateDate\": \"<dateTime>\",\n            \"reltioLoadDate\": \"<dateTime>\",\n            \"deleteDate\": \"<string>\",\n            \"crosswalkExternalInfo\": {\n              \"dtssInfo\": {\n                \"tenantId\": \"<string>\",\n                \"operationId\": \"<string>\",\n                \"matchReasons\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"updatedBy\": \"<string>\",\n                \"updatedTime\": \"<long>\",\n                \"status\": \"<string>\",\n                \"matchRuleUris\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              }\n            },\n            \"singleAttributeUpdateDates\": {\n              \"aliquip_66\": \"<string>\"\n            },\n            \"attributes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dataProvider\": \"<boolean>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"sourceTable\": \"<string>\",\n            \"url\": \"<string>\",\n            \"createDate\": \"<dateTime>\",\n            \"updateDate\": \"<dateTime>\",\n            \"reltioLoadDate\": \"<dateTime>\",\n            \"deleteDate\": \"<string>\",\n            \"crosswalkExternalInfo\": {\n              \"dtssInfo\": {\n                \"tenantId\": \"<string>\",\n                \"operationId\": \"<string>\",\n                \"matchReasons\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"updatedBy\": \"<string>\",\n                \"updatedTime\": \"<long>\",\n                \"status\": \"<string>\",\n                \"matchRuleUris\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              }\n            },\n            \"singleAttributeUpdateDates\": {\n              \"deserunt_8\": \"<string>\",\n              \"dolore_58\": \"<string>\"\n            },\n            \"attributes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dataProvider\": \"<boolean>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"directionalLabel\": \"<string>\",\n        \"label\": \"<string>\",\n        \"objectURI\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      \"endObject\": {\n        \"crosswalks\": [\n          {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"sourceTable\": \"<string>\",\n            \"url\": \"<string>\",\n            \"createDate\": \"<dateTime>\",\n            \"updateDate\": \"<dateTime>\",\n            \"reltioLoadDate\": \"<dateTime>\",\n            \"deleteDate\": \"<string>\",\n            \"crosswalkExternalInfo\": {\n              \"dtssInfo\": {\n                \"tenantId\": \"<string>\",\n                \"operationId\": \"<string>\",\n                \"matchReasons\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"updatedBy\": \"<string>\",\n                \"updatedTime\": \"<long>\",\n                \"status\": \"<string>\",\n                \"matchRuleUris\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              }\n            },\n            \"singleAttributeUpdateDates\": {\n              \"culpa_1e\": \"<string>\",\n              \"ipsum1\": \"<string>\"\n            },\n            \"attributes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dataProvider\": \"<boolean>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"sourceTable\": \"<string>\",\n            \"url\": \"<string>\",\n            \"createDate\": \"<dateTime>\",\n            \"updateDate\": \"<dateTime>\",\n            \"reltioLoadDate\": \"<dateTime>\",\n            \"deleteDate\": \"<string>\",\n            \"crosswalkExternalInfo\": {\n              \"dtssInfo\": {\n                \"tenantId\": \"<string>\",\n                \"operationId\": \"<string>\",\n                \"matchReasons\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"updatedBy\": \"<string>\",\n                \"updatedTime\": \"<long>\",\n                \"status\": \"<string>\",\n                \"matchRuleUris\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              }\n            },\n            \"singleAttributeUpdateDates\": {\n              \"culpa3\": \"<string>\",\n              \"sit_01a\": \"<string>\"\n            },\n            \"attributes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dataProvider\": \"<boolean>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"directionalLabel\": \"<string>\",\n        \"label\": \"<string>\",\n        \"objectURI\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    \"successful\": \"<boolean>\"\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6c163735-02fc-43e4-b87e-694916bc94fe",
                            "name": "Relationships aren't saved due to a reason provided in the error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "partialOverride,partialOverride"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"mollit_6\": \"<string>\",\n          \"ea_46e\": \"<string>\",\n          \"exercitation_cfe\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"velit24\": \"<string>\",\n          \"deserunt_a3f\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"consequat2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"exercitation_2\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"enim36\": \"<string>\",\n            \"non_dba\": \"<string>\",\n            \"labore_9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"ea5\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"mollit_c\": \"<string>\",\n            \"et1\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"irure_e\": \"<string>\",\n          \"sedc3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"minim_ba\": \"<string>\",\n          \"incididuntc7\": \"<string>\",\n          \"dolor_0b2\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"consequat_67f\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"et_c0\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"pariature1\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"commodo_b_\": \"<string>\",\n            \"Lorem_389\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"Lorem6\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"ullamco_aa3\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"nisi__\": \"<string>\",\n            \"laborum_38f\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9ca572cc-dd14-4350-8e04-70c98e9c490e",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "partialOverride,partialOverride"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"mollit_6\": \"<string>\",\n          \"ea_46e\": \"<string>\",\n          \"exercitation_cfe\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"velit24\": \"<string>\",\n          \"deserunt_a3f\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"consequat2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"exercitation_2\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"enim36\": \"<string>\",\n            \"non_dba\": \"<string>\",\n            \"labore_9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"ea5\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"mollit_c\": \"<string>\",\n            \"et1\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"irure_e\": \"<string>\",\n          \"sedc3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"minim_ba\": \"<string>\",\n          \"incididuntc7\": \"<string>\",\n          \"dolor_0b2\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"consequat_67f\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"et_c0\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"pariature1\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"commodo_b_\": \"<string>\",\n            \"Lorem_389\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"Lorem6\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"ullamco_aa3\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"nisi__\": \"<string>\",\n            \"laborum_38f\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "43996071-0952-4092-91b4-aa57563a1c55",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "partialOverride,partialOverride"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"mollit_6\": \"<string>\",\n          \"ea_46e\": \"<string>\",\n          \"exercitation_cfe\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"velit24\": \"<string>\",\n          \"deserunt_a3f\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"consequat2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"exercitation_2\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"enim36\": \"<string>\",\n            \"non_dba\": \"<string>\",\n            \"labore_9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"ea5\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"mollit_c\": \"<string>\",\n            \"et1\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"irure_e\": \"<string>\",\n          \"sedc3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"minim_ba\": \"<string>\",\n          \"incididuntc7\": \"<string>\",\n          \"dolor_0b2\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"consequat_67f\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"et_c0\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"pariature1\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"commodo_b_\": \"<string>\",\n            \"Lorem_389\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"Lorem6\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"ullamco_aa3\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"nisi__\": \"<string>\",\n            \"laborum_38f\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1cb07b9f-9ed0-43f4-a189-b10a91509ea0",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "partialOverride,partialOverride"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"mollit_6\": \"<string>\",\n          \"ea_46e\": \"<string>\",\n          \"exercitation_cfe\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"velit24\": \"<string>\",\n          \"deserunt_a3f\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"consequat2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"exercitation_2\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"enim36\": \"<string>\",\n            \"non_dba\": \"<string>\",\n            \"labore_9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"ea5\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"mollit_c\": \"<string>\",\n            \"et1\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"irure_e\": \"<string>\",\n          \"sedc3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"minim_ba\": \"<string>\",\n          \"incididuntc7\": \"<string>\",\n          \"dolor_0b2\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"consequat_67f\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"et_c0\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"pariature1\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"commodo_b_\": \"<string>\",\n            \"Lorem_389\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"Lorem6\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"ullamco_aa3\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"nisi__\": \"<string>\",\n            \"laborum_38f\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6f66fe22-26ff-4a8a-b95f-6262badf0006",
                            "name": "Too many requests, please try later",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "partialOverride,partialOverride"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"mollit_6\": \"<string>\",\n          \"ea_46e\": \"<string>\",\n          \"exercitation_cfe\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"velit24\": \"<string>\",\n          \"deserunt_a3f\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"consequat2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"exercitation_2\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"enim36\": \"<string>\",\n            \"non_dba\": \"<string>\",\n            \"labore_9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"ea5\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"mollit_c\": \"<string>\",\n            \"et1\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"irure_e\": \"<string>\",\n          \"sedc3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"minim_ba\": \"<string>\",\n          \"incididuntc7\": \"<string>\",\n          \"dolor_0b2\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"consequat_67f\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"et_c0\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"pariature1\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"commodo_b_\": \"<string>\",\n            \"Lorem_389\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"Lorem6\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"ullamco_aa3\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"nisi__\": \"<string>\",\n            \"laborum_38f\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Too Many Requests",
                            "code": 429,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "8ca9f28e-e5fe-4a4f-8125-7b79a1980cf9",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "partialOverride,partialOverride"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"mollit_6\": \"<string>\",\n          \"ea_46e\": \"<string>\",\n          \"exercitation_cfe\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"velit24\": \"<string>\",\n          \"deserunt_a3f\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"consequat2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"exercitation_2\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"enim36\": \"<string>\",\n            \"non_dba\": \"<string>\",\n            \"labore_9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"ea5\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"mollit_c\": \"<string>\",\n            \"et1\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"irure_e\": \"<string>\",\n          \"sedc3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"minim_ba\": \"<string>\",\n          \"incididuntc7\": \"<string>\",\n          \"dolor_0b2\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"consequat_67f\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"et_c0\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"pariature1\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"commodo_b_\": \"<string>\",\n            \"Lorem_389\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"Lorem6\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"ullamco_aa3\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"nisi__\": \"<string>\",\n            \"laborum_38f\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "510dd567-9c4d-4722-a1f1-5b3f3e94df8b",
                            "name": "This status code could represent 2 possible scenarios. First, the 'Service Unavailable' scenario. Second, this status code is used when too many requests are being sent in-parallel and API backpressure mechanism was used to protect the platform. In both scenarios, an exponential backoff mechanism should be used to control the rate of requests sent to the server. ",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "partialOverride,partialOverride"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"mollit_6\": \"<string>\",\n          \"ea_46e\": \"<string>\",\n          \"exercitation_cfe\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"velit24\": \"<string>\",\n          \"deserunt_a3f\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"consequat2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"exercitation_2\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"enim36\": \"<string>\",\n            \"non_dba\": \"<string>\",\n            \"labore_9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"ea5\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"mollit_c\": \"<string>\",\n            \"et1\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"irure_e\": \"<string>\",\n          \"sedc3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"minim_ba\": \"<string>\",\n          \"incididuntc7\": \"<string>\",\n          \"dolor_0b2\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"consequat_67f\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"et_c0\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"pariature1\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"commodo_b_\": \"<string>\",\n            \"Lorem_389\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"Lorem6\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"ullamco_aa3\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"nisi__\": \"<string>\",\n            \"laborum_38f\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9b1f90b0-41c6-44d0-930a-94e2a4688f6c",
                            "name": "The request consumes more resources than it is allowed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "partialOverride,partialOverride"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"mollit_6\": \"<string>\",\n          \"ea_46e\": \"<string>\",\n          \"exercitation_cfe\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"velit24\": \"<string>\",\n          \"deserunt_a3f\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"consequat2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"exercitation_2\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"enim36\": \"<string>\",\n            \"non_dba\": \"<string>\",\n            \"labore_9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"ea5\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"mollit_c\": \"<string>\",\n            \"et1\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"irure_e\": \"<string>\",\n          \"sedc3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"minim_ba\": \"<string>\",\n          \"incididuntc7\": \"<string>\",\n          \"dolor_0b2\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"consequat_67f\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"et_c0\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"pariature1\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"commodo_b_\": \"<string>\",\n            \"Lorem_389\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"Lorem6\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"ullamco_aa3\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"nisi__\": \"<string>\",\n            \"laborum_38f\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Insufficient Storage (WebDAV) (RFC 4918)",
                            "code": 507,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ]
        },
        {
            "name": "Data Load Job",
            "description": "",
            "item": [
                {
                    "id": "3b93ee31-a22a-4c0a-87c2-2867c33f4abb",
                    "name": "/services/dataloader/api/:tenantId/_mapping",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/_mapping",
                        "description": {
                            "content": "Creates a new mapping for an object type. For creating the mapping, you must provide details for 'object type', 'summary', 'name', and 'object type URI'",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "_mapping"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "0de79f81-8028-4a5d-892d-8fae6ddbf125",
                            "name": "Mapping is created successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "cf6d8cc0-f06e-4405-811e-92cdc4e00c9b",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "51a49bd4-b349-4891-bba2-945774d6aa79",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b2392cce-315b-45da-bfa0-3e6a506fd1c3",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "da747684-1c83-479a-97e2-43dbd83afe95",
                            "name": "The resource requested was not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "58bb26d8-f065-447f-8d9d-3ff1fbcf9bb9",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "037a0970-e8a7-4de2-bf2d-41eaf43b86ca",
                    "name": "/services/dataloader/api/:tenantId/_mapping/:mappingId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/_mapping/:mappingId",
                        "description": {
                            "content": "Retrieves the existing mapping details using an ID",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "_mapping",
                                ":mappingId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "If true, API response includes the job definition IDs associated with the mapping",
                                        "type": "text/plain"
                                    },
                                    "key": "includeProjects",
                                    "value": "<boolean>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "mappingId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Defines the ID of the mapping for which details are to be retrieved",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "925ae084-109d-4440-9773-9fb451f016e7",
                            "name": "The details for mapping are retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If true, API response includes the job definition IDs associated with the mapping",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "00042e86-2546-4f4e-bd2c-5dc42f83f95d",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If true, API response includes the job definition IDs associated with the mapping",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "db8a9c7a-a416-4586-a2fa-23c9d9de5f4c",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If true, API response includes the job definition IDs associated with the mapping",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7cad0aef-2008-43e2-aa42-afa17481e75b",
                            "name": "Check your privileges to do this operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If true, API response includes the job definition IDs associated with the mapping",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "712c23a7-2706-4121-bcf1-1d53e08ea6a8",
                            "name": "Resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If true, API response includes the job definition IDs associated with the mapping",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2451132f-eab0-4381-86cb-f06997ceb8e9",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If true, API response includes the job definition IDs associated with the mapping",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "24989613-9f13-41d9-8a38-81f88838ad45",
                    "name": "/services/dataloader/api/:tenantId/_mapping/:mappingId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/_mapping/:mappingId",
                        "description": {
                            "content": "Updates an existing mapping. You can add new values for a field or modify the existing values. Before saving the updates, the mapping details are validated based on the business rules",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "_mapping",
                                ":mappingId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "mappingId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the mapping for which the details are to be updated",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "f79edad1-e06e-4e1e-abb6-834776d3bd5e",
                            "name": "Mapping is updated successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a558c492-eed1-41c5-a713-77b7f21885aa",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "674f7f00-7074-405b-af05-6d48fd5c9065",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8d67a61e-74dc-4470-8b87-d1fdaa3fb39d",
                            "name": "Check your privileges to do this operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ff3bc869-1835-45a0-908c-cc5be635edba",
                            "name": "Resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "dae89f15-ded5-472a-983c-296973c9ab11",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "bfbb2e3b-2ef8-4d8a-8e49-5d59924d0cd9",
                    "name": "/services/dataloader/api/:tenantId/_mapping/:mappingId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/_mapping/:mappingId",
                        "description": {
                            "content": "Deletes an existing mapping if all the business rules are met. The mapping cannot be deleted if it is being used by any job definition",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "_mapping",
                                ":mappingId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "mappingId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the mapping that must be deleted",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "36cfe7e3-fb29-4a6a-9a42-5195095a60ee",
                            "name": "Mapping is deleted successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "894c332d-9ace-46a2-8c72-7bdae1ddbf9e",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c5914fae-ccb4-4cc7-8ee6-9c3f831826c1",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8d4bc2ff-1487-4229-a932-c5478d0bedfd",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6786b0c5-dcec-4dd8-a157-c04dd176f582",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0c56acf2-246d-4491-b949-4ebeeaf9818d",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ca3e24f2-3a8d-4ab1-bfb1-369382ee62d7",
                            "name": "Service Unavailable",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "c306275d-5489-4806-b8af-b510406adf0b",
                    "name": "/services/dataloader/api/:tenantId/_mappings",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/_mappings",
                        "description": {
                            "content": "Retrieve the details of all mappings for a tenant matching the filter criteria",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "_mappings"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Object type URL for which mappings must be retrieved",
                                        "type": "text/plain"
                                    },
                                    "key": "entityType",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Specify the user name that must be included in the 'equals' and 'not equals' operations while retrieving the mapping details.<br> <b>For example</b>: <li>'createdBy=username@reltio.com' - returns the list of mappings created by the specified user for the tenant</li> <li>'createdBy=username@reltio.com:notequals' - returns the list of mappings which are not created by the specified user for the tenant</li>",
                                        "type": "text/plain"
                                    },
                                    "key": "createdBy",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Long value of date. API returns all the mappings created on or after the specified date",
                                        "type": "text/plain"
                                    },
                                    "key": "creationDate",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                        "type": "text/plain"
                                    },
                                    "key": "page",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Number of objects that need to be returned with a paged response",
                                        "type": "text/plain"
                                    },
                                    "key": "size",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the mappings in the ascending order of Tenant ID, 'sort=tenantId:desc' - sorts the mapping in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,objectTypeUri' - sorts the API response in the descending order of Tenant ID and 'objectTypeUris' are used for second order sorting",
                                        "type": "text/plain"
                                    },
                                    "key": "sort",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "If 'true', API response includes the job definitions IDs",
                                        "type": "text/plain"
                                    },
                                    "key": "includeProjects",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "96e2c469-5498-43ca-9922-d0904dd0e3f2",
                            "name": "Mapping details matching criteria are retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mappings"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Object type URL for which mappings must be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "entityType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specify the user name that must be included in the 'equals' and 'not equals' operations while retrieving the mapping details.<br> <b>For example</b>: <li>'createdBy=username@reltio.com' - returns the list of mappings created by the specified user for the tenant</li> <li>'createdBy=username@reltio.com:notequals' - returns the list of mappings which are not created by the specified user for the tenant</li>",
                                                "type": "text/plain"
                                            },
                                            "key": "createdBy",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Long value of date. API returns all the mappings created on or after the specified date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the mappings in the ascending order of Tenant ID, 'sort=tenantId:desc' - sorts the mapping in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,objectTypeUri' - sorts the API response in the descending order of Tenant ID and 'objectTypeUris' are used for second order sorting",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'true', API response includes the job definitions IDs",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"mappingForObjectType\": \"RELATIONS\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "47fbff38-9d43-434f-9766-79d4a6a75392",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mappings"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Object type URL for which mappings must be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "entityType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specify the user name that must be included in the 'equals' and 'not equals' operations while retrieving the mapping details.<br> <b>For example</b>: <li>'createdBy=username@reltio.com' - returns the list of mappings created by the specified user for the tenant</li> <li>'createdBy=username@reltio.com:notequals' - returns the list of mappings which are not created by the specified user for the tenant</li>",
                                                "type": "text/plain"
                                            },
                                            "key": "createdBy",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Long value of date. API returns all the mappings created on or after the specified date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the mappings in the ascending order of Tenant ID, 'sort=tenantId:desc' - sorts the mapping in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,objectTypeUri' - sorts the API response in the descending order of Tenant ID and 'objectTypeUris' are used for second order sorting",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'true', API response includes the job definitions IDs",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e7fd4d56-ba51-4697-baae-d42b72430cd2",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mappings"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Object type URL for which mappings must be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "entityType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specify the user name that must be included in the 'equals' and 'not equals' operations while retrieving the mapping details.<br> <b>For example</b>: <li>'createdBy=username@reltio.com' - returns the list of mappings created by the specified user for the tenant</li> <li>'createdBy=username@reltio.com:notequals' - returns the list of mappings which are not created by the specified user for the tenant</li>",
                                                "type": "text/plain"
                                            },
                                            "key": "createdBy",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Long value of date. API returns all the mappings created on or after the specified date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the mappings in the ascending order of Tenant ID, 'sort=tenantId:desc' - sorts the mapping in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,objectTypeUri' - sorts the API response in the descending order of Tenant ID and 'objectTypeUris' are used for second order sorting",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'true', API response includes the job definitions IDs",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "efb8dec6-9b3e-46af-b5e2-1d82fbb3ff28",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mappings"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Object type URL for which mappings must be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "entityType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specify the user name that must be included in the 'equals' and 'not equals' operations while retrieving the mapping details.<br> <b>For example</b>: <li>'createdBy=username@reltio.com' - returns the list of mappings created by the specified user for the tenant</li> <li>'createdBy=username@reltio.com:notequals' - returns the list of mappings which are not created by the specified user for the tenant</li>",
                                                "type": "text/plain"
                                            },
                                            "key": "createdBy",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Long value of date. API returns all the mappings created on or after the specified date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the mappings in the ascending order of Tenant ID, 'sort=tenantId:desc' - sorts the mapping in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,objectTypeUri' - sorts the API response in the descending order of Tenant ID and 'objectTypeUris' are used for second order sorting",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'true', API response includes the job definitions IDs",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5b035050-5d5e-4e48-b592-ffc8d8bf002b",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mappings"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Object type URL for which mappings must be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "entityType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specify the user name that must be included in the 'equals' and 'not equals' operations while retrieving the mapping details.<br> <b>For example</b>: <li>'createdBy=username@reltio.com' - returns the list of mappings created by the specified user for the tenant</li> <li>'createdBy=username@reltio.com:notequals' - returns the list of mappings which are not created by the specified user for the tenant</li>",
                                                "type": "text/plain"
                                            },
                                            "key": "createdBy",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Long value of date. API returns all the mappings created on or after the specified date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the mappings in the ascending order of Tenant ID, 'sort=tenantId:desc' - sorts the mapping in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,objectTypeUri' - sorts the API response in the descending order of Tenant ID and 'objectTypeUris' are used for second order sorting",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'true', API response includes the job definitions IDs",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f6e12880-2c2f-49eb-89bc-b568551f504a",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mappings"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Object type URL for which mappings must be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "entityType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specify the user name that must be included in the 'equals' and 'not equals' operations while retrieving the mapping details.<br> <b>For example</b>: <li>'createdBy=username@reltio.com' - returns the list of mappings created by the specified user for the tenant</li> <li>'createdBy=username@reltio.com:notequals' - returns the list of mappings which are not created by the specified user for the tenant</li>",
                                                "type": "text/plain"
                                            },
                                            "key": "createdBy",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Long value of date. API returns all the mappings created on or after the specified date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the mappings in the ascending order of Tenant ID, 'sort=tenantId:desc' - sorts the mapping in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,objectTypeUri' - sorts the API response in the descending order of Tenant ID and 'objectTypeUris' are used for second order sorting",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'true', API response includes the job definitions IDs",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "50fdf3a2-b0f6-4abc-b711-6c5845fb8f01",
                    "name": "/services/dataloader/api/:tenantId/configuration/_limits",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/configuration/_limits",
                        "description": {
                            "content": "Retrieves all the existing limits for a tenant matching the filter criteria",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "configuration",
                                "_limits"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Name of the environment used to filter and get limits. ",
                                        "type": "text/plain"
                                    },
                                    "key": "environment",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                        "type": "text/plain"
                                    },
                                    "key": "page",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Number of objects that need to be returned with a paged response",
                                        "type": "text/plain"
                                    },
                                    "key": "size",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the source details in the ascending order of tenantId, 'sort=tenantId:desc' - sorts the source details in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,environment:desc' - sorts the API response in the descending order of tenantId and 'environment'",
                                        "type": "text/plain"
                                    },
                                    "key": "sort",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "5ba31960-e98c-43cc-b6d7-640bbf54d005",
                            "name": "All existing limits are retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the environment used to filter and get limits. ",
                                                "type": "text/plain"
                                            },
                                            "key": "environment",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the source details in the ascending order of tenantId, 'sort=tenantId:desc' - sorts the source details in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,environment:desc' - sorts the API response in the descending order of tenantId and 'environment'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"environment\": \"<string>\",\n    \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n    \"limitType\": \"BOOLEAN\",\n    \"value\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<integer>\",\n    \"tenantId\": \"<string>\"\n  },\n  {\n    \"environment\": \"<string>\",\n    \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n    \"limitType\": \"NUMBER\",\n    \"value\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<integer>\",\n    \"tenantId\": \"<string>\"\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a48b1376-2a50-4f55-b765-ef2b92b11f14",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the environment used to filter and get limits. ",
                                                "type": "text/plain"
                                            },
                                            "key": "environment",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the source details in the ascending order of tenantId, 'sort=tenantId:desc' - sorts the source details in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,environment:desc' - sorts the API response in the descending order of tenantId and 'environment'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7059c4ef-21da-4f39-bbea-1dc342e5a4a2",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the environment used to filter and get limits. ",
                                                "type": "text/plain"
                                            },
                                            "key": "environment",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the source details in the ascending order of tenantId, 'sort=tenantId:desc' - sorts the source details in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,environment:desc' - sorts the API response in the descending order of tenantId and 'environment'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "bd01c1d1-7d0f-4358-9ae5-c83bb9d194f6",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the environment used to filter and get limits. ",
                                                "type": "text/plain"
                                            },
                                            "key": "environment",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the source details in the ascending order of tenantId, 'sort=tenantId:desc' - sorts the source details in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,environment:desc' - sorts the API response in the descending order of tenantId and 'environment'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6e46f0cc-9111-4dfa-a2af-a1a8d6ca2132",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the environment used to filter and get limits. ",
                                                "type": "text/plain"
                                            },
                                            "key": "environment",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the source details in the ascending order of tenantId, 'sort=tenantId:desc' - sorts the source details in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,environment:desc' - sorts the API response in the descending order of tenantId and 'environment'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "712a9906-ad37-4bf8-b361-fc2f1286a4cc",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the environment used to filter and get limits. ",
                                                "type": "text/plain"
                                            },
                                            "key": "environment",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the source details in the ascending order of tenantId, 'sort=tenantId:desc' - sorts the source details in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,environment:desc' - sorts the API response in the descending order of tenantId and 'environment'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "fc041749-0110-4dc0-854c-fcf4fd357898",
                    "name": "/services/dataloader/api/:tenantId/configuration/_limits",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/configuration/_limits",
                        "description": {
                            "content": "Creates limits. While creating limits, you must provide the limit name, value, and datatype",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "configuration",
                                "_limits"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"BOOLEAN\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "1463fb85-2083-4f54-8de4-800edfcc5348",
                            "name": "Resource is created successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"BOOLEAN\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"BOOLEAN\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "fe1bd0e3-fcaa-4734-8ac2-3ddf7e41b4ce",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"BOOLEAN\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2c17cb12-641c-46f6-ab16-ac62de7e3161",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"BOOLEAN\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8d600a8b-79c1-4048-b93b-2ace4b1c4ff4",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"BOOLEAN\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c1e6cc7c-8dbf-4260-a015-7d1f228a6532",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"BOOLEAN\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ecbfae44-c4c6-402e-b24b-c74940033b0a",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"BOOLEAN\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "33b40d56-dcec-4966-a0e1-78090b98854f",
                    "name": "/services/dataloader/api/:tenantId/configuration/_limits/:id",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/configuration/_limits/:id",
                        "description": {
                            "content": "Retrieves the details of a limit",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "configuration",
                                "_limits",
                                ":id"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "id",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the existing limit for which the details must be retrieved",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "24549b8c-602b-4d9a-b6f1-a2d8f080afb5",
                            "name": "Limit retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"BOOLEAN\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b775c14b-36b7-4342-af27-34a15cabea48",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "fc8f719e-5912-4c95-890a-007cf30bdacf",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ceb31a08-a251-4ac9-8186-8287357d750a",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6e0900b5-d14e-46a3-be7f-b3d0eded269c",
                            "name": "Resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "80b2368d-9d68-4624-a7b6-26b269837fb5",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "035bbdce-635a-47c2-9201-bd32fd15baa3",
                    "name": "/services/dataloader/api/:tenantId/configuration/_limits/:id",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/configuration/_limits/:id",
                        "description": {
                            "content": "Updates the existing limit. The updated limits are used while creating the new job",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "configuration",
                                "_limits",
                                ":id"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "id",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the existing limit for which the details must be updated",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"BOOLEAN\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "66f9e886-6150-4158-97d2-fd2c91e09187",
                            "name": "Limit updated successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"BOOLEAN\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"BOOLEAN\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "272c5df7-d5a8-4d45-8b22-a86afc573dab",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"BOOLEAN\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7a84b806-14e4-49e7-88b1-4e136f045f25",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"BOOLEAN\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5e6fa3b7-5018-48bf-bf68-e1d9ecca8ba7",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"BOOLEAN\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c46eaba6-2efd-41d0-b621-98b74beb16c2",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"BOOLEAN\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "03387179-15b6-404b-a77f-a0dbc6a8dd04",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"BOOLEAN\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "86f4d721-5463-49e5-8c95-e0257f19bd93",
                    "name": "/services/dataloader/api/:tenantId/configuration/_limits/:id",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/configuration/_limits/:id",
                        "description": {
                            "content": "Delete an existing limit using the ID",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "configuration",
                                "_limits",
                                ":id"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "id",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the existing limit for which the details must be deleted",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "e2461370-2def-43dc-b32b-031b067d5562",
                            "name": "Limit deleted successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "619d7cec-ea1f-44ed-8c76-5e63387b79a1",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "30f3670a-acad-441d-bb07-437e28c92cdf",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "32c31433-c4fe-4038-92df-099747339377",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "73f35660-aafb-415d-8c60-ab1411db6f41",
                            "name": "Resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e9859740-2086-454a-b8c7-b97bd2c93dd5",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "7372e0a0-4368-4ab8-bf0b-ba50001ea1a0",
                    "name": "/services/dataloader/api/:tenantId/project",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project",
                        "description": {
                            "content": "Creates a new job definition by using existing mapping and storage details",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"GCP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"RELATIONS\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "4f98f424-41d0-478a-a5d0-b33d24ee86d8",
                            "name": "Job definition is created successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"GCP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"RELATIONS\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"GCP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"RELATIONS\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6cbfc1c6-50c0-4246-a54c-aa91a436c766",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"GCP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"RELATIONS\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d799b561-dc85-4e9a-9daa-002ba5eef0bd",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"GCP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"RELATIONS\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2cca4622-f14d-43ba-855d-02e3f8da0b56",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"GCP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"RELATIONS\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0d1a3f72-3c39-4675-8648-370c6701dafd",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"GCP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"RELATIONS\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "599f22b7-2801-4cdc-9a7d-b129e07d2970",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"GCP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"RELATIONS\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "5a6e11f7-9849-4971-98ff-a4ccbb8f94a3",
                    "name": "/services/dataloader/api/:tenantId/project/data/source",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/data/source",
                        "description": {
                            "content": "Retrieves existing source details for a tenant matching the filter criteria",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "data",
                                "source"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                        "type": "text/plain"
                                    },
                                    "key": "page",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Number of objects that need to be returned with a paged response",
                                        "type": "text/plain"
                                    },
                                    "key": "size",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=sourcePath' - sorts the source details in the ascending order of sourcePath, 'sort=sourcePath:desc' - sorts the source details in the descending order of sourcePath <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=sourcePath:desc,bucketName' - sorts the API response in the descending order of sourcePath and 'bucketName'",
                                        "type": "text/plain"
                                    },
                                    "key": "sort",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "87c2630d-0879-4720-88e5-7a5bb803f7d9",
                            "name": "Source details are returned successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=sourcePath' - sorts the source details in the ascending order of sourcePath, 'sort=sourcePath:desc' - sorts the source details in the descending order of sourcePath <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=sourcePath:desc,bucketName' - sorts the API response in the descending order of sourcePath and 'bucketName'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"GCP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"SFTP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3da54d6f-c49c-41f5-ac93-07bdbd5ce7ca",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=sourcePath' - sorts the source details in the ascending order of sourcePath, 'sort=sourcePath:desc' - sorts the source details in the descending order of sourcePath <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=sourcePath:desc,bucketName' - sorts the API response in the descending order of sourcePath and 'bucketName'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "330fd0cc-c9d3-4d9a-9f68-59cf1f148b24",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=sourcePath' - sorts the source details in the ascending order of sourcePath, 'sort=sourcePath:desc' - sorts the source details in the descending order of sourcePath <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=sourcePath:desc,bucketName' - sorts the API response in the descending order of sourcePath and 'bucketName'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "027edfc0-bc20-4908-8f96-fcc335eadc8b",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=sourcePath' - sorts the source details in the ascending order of sourcePath, 'sort=sourcePath:desc' - sorts the source details in the descending order of sourcePath <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=sourcePath:desc,bucketName' - sorts the API response in the descending order of sourcePath and 'bucketName'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d16b641a-f15d-44ba-9733-2d18934693d5",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=sourcePath' - sorts the source details in the ascending order of sourcePath, 'sort=sourcePath:desc' - sorts the source details in the descending order of sourcePath <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=sourcePath:desc,bucketName' - sorts the API response in the descending order of sourcePath and 'bucketName'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2bfd10ae-8461-4fd3-9aca-4e9557a3daef",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=sourcePath' - sorts the source details in the ascending order of sourcePath, 'sort=sourcePath:desc' - sorts the source details in the descending order of sourcePath <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=sourcePath:desc,bucketName' - sorts the API response in the descending order of sourcePath and 'bucketName'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "41be0fef-b3e4-4bd5-9654-1af90b2209e5",
                    "name": "/services/dataloader/api/:tenantId/project/data/source",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/data/source",
                        "description": {
                            "content": "Checks whether a valid file exists for the provided source information before creating a new source. While creating a source, you must provide all the mandatory information",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "data",
                                "source"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"UPLOADED\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "40e535d6-6bc7-4a75-9721-b23cc317b158",
                            "name": "Source details are created successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"UPLOADED\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"UPLOADED\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "85cb22d0-fb5f-4d65-b7c9-27d16cb7a497",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"UPLOADED\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "713d6ca0-cb7e-4533-aade-241c572581a8",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"UPLOADED\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2b77188d-b369-4dab-be32-d3919f23d90e",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"UPLOADED\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "bfba388c-ebd4-4370-b872-7d33387869f3",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"UPLOADED\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6b3b265f-72af-41e8-9ab2-1c7ff619beae",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"UPLOADED\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "eef4cc08-e8cd-485a-9473-e1a3a173e90c",
                    "name": "/services/dataloader/api/:tenantId/project/data/source/:sourceId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/data/source/:sourceId",
                        "description": {
                            "content": "Retrieves the existing source details using the ID",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "data",
                                "source",
                                ":sourceId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "sourceId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Source ID for which the details must be retrieved",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "14c4f968-e61f-4b1c-8d14-91cddce795c2",
                            "name": "Returns the existing source details",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"UPLOADED\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "87c06300-a2f9-446a-b774-b7091ba92a60",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "596662c9-3f29-4d2a-aba3-1bb80a28e317",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d923aa48-a5d1-4ab6-ab12-57a2e9f11d0d",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7d96db72-88e4-4c25-9457-da6b002cc250",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8d7b1ac2-e8f0-46c3-9756-9ed02961b2e5",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "0832de1a-5ecb-49c3-9947-bde56a313795",
                    "name": "/services/dataloader/api/:tenantId/project/data/source/:sourceId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/data/source/:sourceId",
                        "description": {
                            "content": "Updates the existing source with the details added from the request",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "data",
                                "source",
                                ":sourceId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "sourceId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Source ID for which the details must be updated",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"UPLOADED\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "ec066ccd-12a4-4b1c-a38a-b0c59421974b",
                            "name": "Storage details are updated successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"UPLOADED\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"UPLOADED\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5d7c7ae1-41b0-4e37-abd8-064d7b6d0b7d",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"UPLOADED\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "efbb5bf5-87bd-4ef0-a6fc-34a99e6ca4c2",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"UPLOADED\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "81da3890-6eb1-4906-bed2-3b7c4c200104",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"UPLOADED\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a83c9e5e-7e9c-4e15-bfe8-41de5773dd89",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"UPLOADED\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0b1bfe7f-98dd-4a40-924c-75fde146797f",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"UPLOADED\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "7eef3b79-f41a-4789-b182-45a6fd7f746b",
                    "name": "/services/dataloader/api/:tenantId/project/data/source/:sourceId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/data/source/:sourceId",
                        "description": {
                            "content": "Deletes the source details using the specified ID if it is not already used by any job definitions",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "data",
                                "source",
                                ":sourceId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "sourceId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Source ID for which the source details must be deleted",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "c237b215-534c-45cc-ab29-29bf7a1a1f7b",
                            "name": "Returns the existing source details",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "703f256c-540e-4f63-989a-0bad109c9cfb",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "30ace5e9-230e-4d94-ba76-6c58baa7155f",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "59beabea-4415-4e71-bd2a-7d2f0da7d4c2",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "fd5d537c-4e7b-41ac-be03-634a4180a191",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "63f3ea7e-59a7-41cc-b862-1ce2ac9c902a",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "52b4e073-f442-4b7c-9a6a-f86f5ea75c01",
                    "name": "/services/dataloader/api/:tenantId/project/job/:jobId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/job/:jobId",
                        "description": {
                            "content": "Retrieve the existing job detail using the ID",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "job",
                                ":jobId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "jobId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job ID to retrieve",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "2b47f96c-95fb-41ad-bb79-2cda7cbc0f6f",
                            "name": "Job retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"JOB_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7e2fa546-2625-4496-a6c6-68bbe60aab08",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5a96f6e6-3228-41a9-b437-c27757bcd7bb",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2728f4e1-1427-44e9-abb4-975453133ec6",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e3cf21ba-85e8-4d26-90c6-33557155c6db",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "594bfcde-cd31-4055-97e6-f78cdca86a57",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "44b13a83-d361-4d2c-bdbf-bc350ea94810",
                    "name": "/services/dataloader/api/:tenantId/project/job/:jobId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/job/:jobId",
                        "description": {
                            "content": "Updates the existing job by merging the existing details with the updated information in the request body",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "job",
                                ":jobId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "jobId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job ID to update",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"JOB_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "dd63ebc1-6a62-411c-a79a-1fc75a3e56df",
                            "name": "Job updated successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"JOB_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"JOB_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "55841f29-9624-41ad-bcfa-7ba56affb61e",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"JOB_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2aa29e9e-30f2-4982-96a0-c47674e91c03",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"JOB_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8a08f0a7-eaf3-4816-8500-7c2a6a6cd06a",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"JOB_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "395029ff-51e0-4a83-a6a2-8d4a8125ab78",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"JOB_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1e164f5d-06b5-49a3-b0d1-76ba1899edb3",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"JOB_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "7ffff8df-4817-473d-b4da-b7adcfcbf4cb",
                    "name": "/services/dataloader/api/:tenantId/project/job/:jobId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/job/:jobId",
                        "description": {
                            "content": "Deletes the job with the status marked as completed",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "job",
                                ":jobId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "jobId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job ID to delete",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "a0e878ef-2d69-4ea3-85c0-51cd875c3d28",
                            "name": "Job deleted successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "e856f4ad-8d12-4d33-87d9-92fde6fc6e08",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "73dca5b8-9915-4023-b8d6-6ffc5a75b7d5",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7847fa8d-c611-400b-b03f-7580249b2394",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "be97ecce-5b07-4c40-b197-ca72e412eb08",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1e5bb889-fb71-4bcf-9499-e8ebccf56afa",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "4413c50c-6866-49be-ab3d-7de1bb2ef914",
                    "name": "/services/dataloader/api/:tenantId/project/job/:jobId/_resume",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/job/:jobId/_resume",
                        "description": {
                            "content": "Resumes the job stuck with no progress",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "job",
                                ":jobId",
                                "_resume"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "jobId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job ID to resume",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "ed36e8bd-6498-422f-8f28-8933a04802fa",
                            "name": "Request to resume the job is accepted",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_resume"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Accepted",
                            "code": 202,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "c1042739-1d59-42ba-a524-6f939451faf7",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_resume"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "f150e7ba-291f-45fa-b683-ae17383b4c97",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_resume"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"error\": \"access_denied\",\n    \"error_description\": \"Access is denied\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "56d45819-6be7-4197-9a79-f454e0c22a9b",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_resume"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"severity\": \"Error\",\n    \"errorMessage\": \"Brief error message here\",\n    \"errorCode\": 123,\n    \"errorDetailMessage\": \"Detailed error message here\",\n    \"innerErrorData\": {\n      \"exception\": \"com.reltio.services.dataloader.common.exception.DataLoaderServiceException Details here\"\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9997595d-5f41-44b5-9500-bdeedeba9e06",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_resume"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"timestamp\": 1634719769759,\n    \"status\": 500,\n    \"error\": \"Internal Server Error\",\n    \"message\": \"Brief error message here\",\n    \"path\": \"Api context path here\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "24181094-b6a2-4369-97eb-700a522b3833",
                    "name": "/services/dataloader/api/:tenantId/project/job/:jobId/_stop",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/job/:jobId/_stop",
                        "description": {
                            "content": "Stops the job in progress",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "job",
                                ":jobId",
                                "_stop"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "jobId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job ID to stop",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "1d5bfeb7-6eb7-4e14-b3ee-8f964223bcfb",
                            "name": "Request to stop the job is accepted",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_stop"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Accepted",
                            "code": 202,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "7f5d3fa4-983d-4444-a66e-63f6ae516376",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_stop"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"severity\": \"Error\",\n    \"errorMessage\": \"Operation can not be done as the job [xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx] is in COMPLETED state.\",\n    \"errorCode\": 1561,\n    \"errorDetailMessage\": \"Operation can not be done as the job [xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx] is in COMPLETED state.\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8cc2261f-c976-47f2-9482-fa7ac0565e03",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_stop"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"error\": \"access_denied\",\n    \"error_description\": \"Access is denied\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3dd52cad-2270-4c5e-b8bc-611ae8effc01",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_stop"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"severity\": \"Error\",\n    \"errorMessage\": \"Brief error message here\",\n    \"errorCode\": 123,\n    \"errorDetailMessage\": \"Detailed error message here\",\n    \"innerErrorData\": {\n      \"exception\": \"com.reltio.services.dataloader.common.exception.DataLoaderServiceException Details here\"\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8bf28748-e6c5-48b0-ad1d-bfd1ec19a816",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_stop"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"timestamp\": 1634719769759,\n    \"status\": 500,\n    \"error\": \"Internal Server Error\",\n    \"message\": \"Brief error message here\",\n    \"path\": \"Api context path here\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "baf7f04c-0181-45f6-a357-c35e1aba5da2",
                    "name": "/services/dataloader/api/:tenantId/project/job/:jobId/errors",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/job/:jobId/errors",
                        "description": {
                            "content": "Download the error file as a zip file, if any exists",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "job",
                                ":jobId",
                                "errors"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Name of the error file to be retrieved",
                                        "type": "text/plain"
                                    },
                                    "key": "errorFile",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "jobId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job ID for which the error files are to be retrieved",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "9c657029-ea19-4659-905a-749de4b4fd69",
                            "name": "Error details are retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "errors"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the error file to be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "errorFile",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "d5fba894-b573-4e22-9d42-b9df425ca6a9",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "errors"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the error file to be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "errorFile",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0cc096c9-363d-4fc1-9915-ddbcf62414ac",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "errors"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the error file to be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "errorFile",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f2e061a1-1a03-44c9-baa9-4ed37119ee91",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "errors"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the error file to be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "errorFile",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ae472b71-8228-4816-aefb-4f7bc0374c83",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "errors"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the error file to be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "errorFile",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c6012d45-cb51-4e8e-95d2-3264f25e9b32",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "errors"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the error file to be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "errorFile",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "1f4cb0df-0ad9-458f-bfdf-e0fe556926dc",
                    "name": "/services/dataloader/api/:tenantId/project/job/:jobId/source",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/job/:jobId/source",
                        "description": {
                            "content": "Download the source file(s) processed by dataload job",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "job",
                                ":jobId",
                                "source"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "jobId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job ID for which the source files are to be retrieved",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "650648a0-e341-4256-87de-b5651670892c",
                            "name": "Source details are retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "a76ac6de-7f7c-4fa0-8f70-6b3a82a350f6",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "685ca8c7-1c6b-4694-9dc0-2f03a4a26f27",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c4dc4e7d-ea09-40cd-816c-23779086c837",
                            "name": "User does not have permission to view the file or job information",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "577ceb12-595a-44b8-b02f-bcc4f1c4f1c9",
                            "name": "All source files processed by job are deleted",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c50d06e8-1c58-419b-8aed-61fec9b59f8b",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "2564d972-a564-4ea2-b22a-3aff80df38ed",
                    "name": "/services/dataloader/api/:tenantId/project/jobs",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/jobs",
                        "description": {
                            "content": "Retrieve the details of existing jobs for a tenant matching the filter criteria",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "jobs"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "ID of the existing job definitions to get job details",
                                        "type": "text/plain"
                                    },
                                    "key": "projectId",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Job status used to filter the jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "status",
                                    "value": "FILE_DOWNLOAD"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Job status used to filter the jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "status",
                                    "value": "JOB_EXECUTED"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to retrieve either inprogress or completed jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "inProgress",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                        "type": "text/plain"
                                    },
                                    "key": "creationDate",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                        "type": "text/plain"
                                    },
                                    "key": "page",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Number of objects that need to be returned with a paged response",
                                        "type": "text/plain"
                                    },
                                    "key": "size",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                        "type": "text/plain"
                                    },
                                    "key": "sort",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "d095c3f1-4146-456a-8944-b1bc14f3196e",
                            "name": "Job retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "JOB_EXECUTED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"isDeleted\": \"<boolean>\",\n    \"udl\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"jobStatus\": \"DATA_LOAD_TASK_CANCELED\",\n    \"dataProcessingJobId\": \"<string>\",\n    \"dataFlowId\": \"<string>\",\n    \"periodicTasks\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"errorDetails\": \"<string>\",\n    \"errorFileBucket\": \"<string>\",\n    \"errorFileLocation\": \"<string>\",\n    \"executedDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"totalRecords\": \"<integer>\",\n    \"processedRecordsCount\": \"<integer>\",\n    \"failedRecords\": \"<string>\",\n    \"failedRecordsCount\": \"<integer>\",\n    \"jobSummary\": \"<string>\",\n    \"ludicrousMode\": \"<boolean>\",\n    \"projectDetails\": {\n      \"environment\": \"<string>\",\n      \"loadType\": \"ENTITIES\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"projectStatus\": \"<string>\",\n      \"progressStatus\": \"<string>\",\n      \"tenantId\": \"<string>\",\n      \"updateType\": \"UPDATE_MERGED\",\n      \"errorFileLocation\": \"<string>\",\n      \"operationStatus\": \"<string>\",\n      \"additionalAttributes\": \"<string>\",\n      \"storageDetails\": {\n        \"sourcePath\": \"<string>\",\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"storageId\": \"<string>\",\n        \"shareSourceInfo\": \"<boolean>\",\n        \"bucketName\": \"<string>\",\n        \"bucketNameTemp\": \"<string>\",\n        \"bucketNameError\": \"<string>\",\n        \"bucketNameSummary\": \"<string>\",\n        \"fileMask\": \"<string>\",\n        \"delimiter\": \"<string>\",\n        \"storageAccount\": {\n          \"createdBy\": \"<string>\",\n          \"createdDate\": \"<dateTime>\",\n          \"updatedBy\": \"<string>\",\n          \"updatedDate\": \"<dateTime>\",\n          \"accountId\": \"<integer>\",\n          \"accountName\": \"<string>\",\n          \"accountType\": \"GCP\",\n          \"credentials\": \"<string>\"\n        },\n        \"totalRecords\": \"<integer>\",\n        \"projectDetailsTO\": {\n          \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n        }\n      },\n      \"mappingDetails\": {\n        \"mappingForObjectType\": \"RELATIONS\",\n        \"mappingName\": \"<string>\",\n        \"mappingSummary\": \"<string>\",\n        \"objectTypeUri\": \"<string>\",\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"mappingId\": \"<integer>\",\n        \"tenantId\": \"<string>\",\n        \"shareMappingDetails\": \"<boolean>\",\n        \"projectIds\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"schedulingDetails\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"id\": \"<string>\",\n        \"scheduledJobId\": \"<string>\",\n        \"cronExpression\": \"<string>\",\n        \"startDate\": \"<long>\",\n        \"endDate\": \"<long>\"\n      }\n    }\n  },\n  {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"isDeleted\": \"<boolean>\",\n    \"udl\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"jobStatus\": \"DCR_LOAD_IN_PROGRESS\",\n    \"dataProcessingJobId\": \"<string>\",\n    \"dataFlowId\": \"<string>\",\n    \"periodicTasks\": \"<string>\",\n    \"loadType\": \"RELATIONS\",\n    \"errorDetails\": \"<string>\",\n    \"errorFileBucket\": \"<string>\",\n    \"errorFileLocation\": \"<string>\",\n    \"executedDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"totalRecords\": \"<integer>\",\n    \"processedRecordsCount\": \"<integer>\",\n    \"failedRecords\": \"<string>\",\n    \"failedRecordsCount\": \"<integer>\",\n    \"jobSummary\": \"<string>\",\n    \"ludicrousMode\": \"<boolean>\",\n    \"projectDetails\": {\n      \"environment\": \"<string>\",\n      \"loadType\": \"ENTITIES\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"projectStatus\": \"<string>\",\n      \"progressStatus\": \"<string>\",\n      \"tenantId\": \"<string>\",\n      \"updateType\": \"FULL_UPDATE\",\n      \"errorFileLocation\": \"<string>\",\n      \"operationStatus\": \"<string>\",\n      \"additionalAttributes\": \"<string>\",\n      \"storageDetails\": {\n        \"sourcePath\": \"<string>\",\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"storageId\": \"<string>\",\n        \"shareSourceInfo\": \"<boolean>\",\n        \"bucketName\": \"<string>\",\n        \"bucketNameTemp\": \"<string>\",\n        \"bucketNameError\": \"<string>\",\n        \"bucketNameSummary\": \"<string>\",\n        \"fileMask\": \"<string>\",\n        \"delimiter\": \"<string>\",\n        \"storageAccount\": {\n          \"createdBy\": \"<string>\",\n          \"createdDate\": \"<dateTime>\",\n          \"updatedBy\": \"<string>\",\n          \"updatedDate\": \"<dateTime>\",\n          \"accountId\": \"<integer>\",\n          \"accountName\": \"<string>\",\n          \"accountType\": \"GCP\",\n          \"credentials\": \"<string>\"\n        },\n        \"totalRecords\": \"<integer>\",\n        \"projectDetailsTO\": {\n          \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n        }\n      },\n      \"mappingDetails\": {\n        \"mappingForObjectType\": \"RELATIONS\",\n        \"mappingName\": \"<string>\",\n        \"mappingSummary\": \"<string>\",\n        \"objectTypeUri\": \"<string>\",\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"mappingId\": \"<integer>\",\n        \"tenantId\": \"<string>\",\n        \"shareMappingDetails\": \"<boolean>\",\n        \"projectIds\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"schedulingDetails\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"id\": \"<string>\",\n        \"scheduledJobId\": \"<string>\",\n        \"cronExpression\": \"<string>\",\n        \"startDate\": \"<long>\",\n        \"endDate\": \"<long>\"\n      }\n    }\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "bdf7c9e3-3348-4297-9cd6-e63c86429fe1",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "JOB_EXECUTED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c2a7a8f0-c212-46c9-a2b5-165758e4fbde",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "JOB_EXECUTED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "eb834aec-ef52-42ea-b32c-63f4e43e592d",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "JOB_EXECUTED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "361909a1-0e2c-4ea2-803e-6d156db66e97",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "JOB_EXECUTED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "52a2f013-400c-48d4-9968-46a1f69bcf5b",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "JOB_EXECUTED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "40c25282-3986-4a91-94be-c74f3c6e6cac",
                    "name": "/services/dataloader/api/:tenantId/project/jobs/_facets",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/jobs/_facets",
                        "description": {
                            "content": "Retrieve requested fields from existing jobs for a tenant matching the filter criteria",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "jobs",
                                "_facets"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "ID of the existing job definitions to get job details",
                                        "type": "text/plain"
                                    },
                                    "key": "projectId",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Job status used to filter the jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "status",
                                    "value": "FILE_DOWNLOAD"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Job status used to filter the jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "status",
                                    "value": "JOB_EXECUTED"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to retrieve either inprogress or completed jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "inProgress",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                        "type": "text/plain"
                                    },
                                    "key": "creationDate",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "list of fields to fetch",
                                        "type": "text/plain"
                                    },
                                    "key": "facet",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "list of fields to fetch",
                                        "type": "text/plain"
                                    },
                                    "key": "facet",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "0ddd9c11-7912-403c-9b99-a70a70183fad",
                            "name": "Fields retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs",
                                        "_facets"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "JOB_EXECUTED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "list of fields to fetch",
                                                "type": "text/plain"
                                            },
                                            "key": "facet",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"commodo_9ce\": {\n    \"Lorem_1\": \"<integer>\",\n    \"ad77\": \"<integer>\",\n    \"ex1a\": \"<integer>\",\n    \"culpa_9_\": \"<integer>\",\n    \"dolore_d5\": \"<integer>\"\n  },\n  \"esse_160\": {\n    \"esta7\": \"<integer>\",\n    \"do92a\": \"<integer>\"\n  },\n  \"in_d02\": {\n    \"amet_98\": \"<integer>\",\n    \"deserunt516\": \"<integer>\"\n  },\n  \"pariatur__91\": {\n    \"magna_3f4\": \"<integer>\",\n    \"id7\": \"<integer>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8363d17d-6a1e-4052-84fd-05f62f9276c9",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs",
                                        "_facets"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "JOB_EXECUTED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "list of fields to fetch",
                                                "type": "text/plain"
                                            },
                                            "key": "facet",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0e9433cb-cdb1-49cf-b0d8-d520094d4d21",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs",
                                        "_facets"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "JOB_EXECUTED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "list of fields to fetch",
                                                "type": "text/plain"
                                            },
                                            "key": "facet",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a2d3207f-a316-4db8-933b-09c50ab1b497",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs",
                                        "_facets"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "JOB_EXECUTED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "list of fields to fetch",
                                                "type": "text/plain"
                                            },
                                            "key": "facet",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9bfad787-fd70-4ed8-9d14-0467a1f802b2",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs",
                                        "_facets"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "JOB_EXECUTED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "list of fields to fetch",
                                                "type": "text/plain"
                                            },
                                            "key": "facet",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b6fe87e6-1878-407d-8b8d-5c3a1001345b",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs",
                                        "_facets"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "JOB_EXECUTED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "list of fields to fetch",
                                                "type": "text/plain"
                                            },
                                            "key": "facet",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "bfb689b6-0747-4343-b7e8-a274ce09af66",
                    "name": "/services/dataloader/api/:tenantId/project/:projectId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/:projectId",
                        "description": {
                            "content": "Returns existing job definition with mapping, source, and scheduling details",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                ":projectId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "projectId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job definition ID for which the details must be retrieved",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "60e42ee9-c5dd-427a-967e-ed3bcb6d6aa2",
                            "name": "Job definition is retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"GCP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"RELATIONS\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3baa8c09-3a2f-428a-b934-dc4c4de14513",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d8fb8e4a-6317-445e-81d4-4755d2e8e343",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e166153c-b3e4-4af8-895d-242b716e1a22",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "11b6f390-b396-49a5-8f24-a81212c5495a",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5523db46-299f-411b-b9b4-acb4e381c2bc",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "93ff743b-7ad6-41d8-8762-a55315bf9f54",
                    "name": "/services/dataloader/api/:tenantId/project/:projectId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/:projectId",
                        "description": {
                            "content": "Updates the existing job definitions by merging existing details for job definition with the updated information provided in the request body",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                ":projectId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "projectId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job definition ID for which the details must be updated",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"GCP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"RELATIONS\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "42008d49-df62-4d20-a58b-fab55f8a9824",
                            "name": "Job definition is successfully updated",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"GCP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"RELATIONS\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"GCP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"RELATIONS\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "dcc39fbc-0c13-4abd-95e9-b57ee8dfcc43",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"GCP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"RELATIONS\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "58e1c385-60af-4570-85f5-9f06b89d6138",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"GCP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"RELATIONS\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e7da4d4e-9c57-4520-b567-79d96ae67940",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"GCP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"RELATIONS\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0dd7b3f9-a766-40c4-a593-24fcd92bc232",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"GCP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"RELATIONS\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "758696d0-5704-4581-b03c-59f3203f1e21",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"GCP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"RELATIONS\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "872aa49d-3849-4a90-8a7d-451fbcf972cf",
                    "name": "/services/dataloader/api/:tenantId/project/:projectId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/:projectId",
                        "description": {
                            "content": "Deletes the existing job definition when the related mapping, source, and scheduling details are not used by other job definitions",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                ":projectId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "projectId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job definition ID for which the details must be deleted",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "31e99e09-fe1f-4bf9-b5cf-fff200593187",
                            "name": "Job definition is deleted successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "02045d89-c72b-46fc-8276-fb63bec88755",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e4cbb2e6-b01d-459b-ae17-7e71acf182e4",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6f1ebc5f-4150-4fe5-ad89-341bd8058f3a",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7d5012e7-59f4-44bd-88eb-cc626dda3a87",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "88b3a4c1-9f66-4bc9-b7aa-6ca4d12627cf",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "25a988c2-79b4-430b-9526-89b725dfce2a",
                    "name": "/services/dataloader/api/:tenantId/project/:projectId/jobs",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/:projectId/jobs",
                        "description": {
                            "content": "Retrieves the details of existing jobs for a job definitions by matching the filter criteria",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                ":projectId",
                                "jobs"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Job status used to filter the jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "status",
                                    "value": "ERROR"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Job status used to filter the jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "status",
                                    "value": "CANCELLED"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to retrieve either inprogress or completed jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "inProgress",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                        "type": "text/plain"
                                    },
                                    "key": "creationDate",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                        "type": "text/plain"
                                    },
                                    "key": "page",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Number of objects that need to be returned with a paged response",
                                        "type": "text/plain"
                                    },
                                    "key": "size",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                        "type": "text/plain"
                                    },
                                    "key": "sort",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "projectId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the existing job definitions to get job details",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "ad695eec-d24b-442b-b1ea-b55ea62e9d3f",
                            "name": "Job retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "CANCELLED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"isDeleted\": \"<boolean>\",\n    \"udl\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"jobStatus\": \"DATA_LOAD_TASK_CANCELED\",\n    \"dataProcessingJobId\": \"<string>\",\n    \"dataFlowId\": \"<string>\",\n    \"periodicTasks\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"errorDetails\": \"<string>\",\n    \"errorFileBucket\": \"<string>\",\n    \"errorFileLocation\": \"<string>\",\n    \"executedDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"totalRecords\": \"<integer>\",\n    \"processedRecordsCount\": \"<integer>\",\n    \"failedRecords\": \"<string>\",\n    \"failedRecordsCount\": \"<integer>\",\n    \"jobSummary\": \"<string>\",\n    \"ludicrousMode\": \"<boolean>\",\n    \"projectDetails\": {\n      \"environment\": \"<string>\",\n      \"loadType\": \"ENTITIES\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"projectStatus\": \"<string>\",\n      \"progressStatus\": \"<string>\",\n      \"tenantId\": \"<string>\",\n      \"updateType\": \"UPDATE_MERGED\",\n      \"errorFileLocation\": \"<string>\",\n      \"operationStatus\": \"<string>\",\n      \"additionalAttributes\": \"<string>\",\n      \"storageDetails\": {\n        \"sourcePath\": \"<string>\",\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"storageId\": \"<string>\",\n        \"shareSourceInfo\": \"<boolean>\",\n        \"bucketName\": \"<string>\",\n        \"bucketNameTemp\": \"<string>\",\n        \"bucketNameError\": \"<string>\",\n        \"bucketNameSummary\": \"<string>\",\n        \"fileMask\": \"<string>\",\n        \"delimiter\": \"<string>\",\n        \"storageAccount\": {\n          \"createdBy\": \"<string>\",\n          \"createdDate\": \"<dateTime>\",\n          \"updatedBy\": \"<string>\",\n          \"updatedDate\": \"<dateTime>\",\n          \"accountId\": \"<integer>\",\n          \"accountName\": \"<string>\",\n          \"accountType\": \"GCP\",\n          \"credentials\": \"<string>\"\n        },\n        \"totalRecords\": \"<integer>\",\n        \"projectDetailsTO\": {\n          \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n        }\n      },\n      \"mappingDetails\": {\n        \"mappingForObjectType\": \"RELATIONS\",\n        \"mappingName\": \"<string>\",\n        \"mappingSummary\": \"<string>\",\n        \"objectTypeUri\": \"<string>\",\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"mappingId\": \"<integer>\",\n        \"tenantId\": \"<string>\",\n        \"shareMappingDetails\": \"<boolean>\",\n        \"projectIds\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"schedulingDetails\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"id\": \"<string>\",\n        \"scheduledJobId\": \"<string>\",\n        \"cronExpression\": \"<string>\",\n        \"startDate\": \"<long>\",\n        \"endDate\": \"<long>\"\n      }\n    }\n  },\n  {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"isDeleted\": \"<boolean>\",\n    \"udl\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"jobStatus\": \"DCR_LOAD_IN_PROGRESS\",\n    \"dataProcessingJobId\": \"<string>\",\n    \"dataFlowId\": \"<string>\",\n    \"periodicTasks\": \"<string>\",\n    \"loadType\": \"RELATIONS\",\n    \"errorDetails\": \"<string>\",\n    \"errorFileBucket\": \"<string>\",\n    \"errorFileLocation\": \"<string>\",\n    \"executedDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"totalRecords\": \"<integer>\",\n    \"processedRecordsCount\": \"<integer>\",\n    \"failedRecords\": \"<string>\",\n    \"failedRecordsCount\": \"<integer>\",\n    \"jobSummary\": \"<string>\",\n    \"ludicrousMode\": \"<boolean>\",\n    \"projectDetails\": {\n      \"environment\": \"<string>\",\n      \"loadType\": \"ENTITIES\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"projectStatus\": \"<string>\",\n      \"progressStatus\": \"<string>\",\n      \"tenantId\": \"<string>\",\n      \"updateType\": \"FULL_UPDATE\",\n      \"errorFileLocation\": \"<string>\",\n      \"operationStatus\": \"<string>\",\n      \"additionalAttributes\": \"<string>\",\n      \"storageDetails\": {\n        \"sourcePath\": \"<string>\",\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"storageId\": \"<string>\",\n        \"shareSourceInfo\": \"<boolean>\",\n        \"bucketName\": \"<string>\",\n        \"bucketNameTemp\": \"<string>\",\n        \"bucketNameError\": \"<string>\",\n        \"bucketNameSummary\": \"<string>\",\n        \"fileMask\": \"<string>\",\n        \"delimiter\": \"<string>\",\n        \"storageAccount\": {\n          \"createdBy\": \"<string>\",\n          \"createdDate\": \"<dateTime>\",\n          \"updatedBy\": \"<string>\",\n          \"updatedDate\": \"<dateTime>\",\n          \"accountId\": \"<integer>\",\n          \"accountName\": \"<string>\",\n          \"accountType\": \"GCP\",\n          \"credentials\": \"<string>\"\n        },\n        \"totalRecords\": \"<integer>\",\n        \"projectDetailsTO\": {\n          \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n        }\n      },\n      \"mappingDetails\": {\n        \"mappingForObjectType\": \"RELATIONS\",\n        \"mappingName\": \"<string>\",\n        \"mappingSummary\": \"<string>\",\n        \"objectTypeUri\": \"<string>\",\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"mappingId\": \"<integer>\",\n        \"tenantId\": \"<string>\",\n        \"shareMappingDetails\": \"<boolean>\",\n        \"projectIds\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"schedulingDetails\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"id\": \"<string>\",\n        \"scheduledJobId\": \"<string>\",\n        \"cronExpression\": \"<string>\",\n        \"startDate\": \"<long>\",\n        \"endDate\": \"<long>\"\n      }\n    }\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "89a2d234-5499-46a1-98b8-b436aef8dc4e",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "CANCELLED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e8cd063a-2617-4344-ac82-4e47f2cd858c",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "CANCELLED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "82da230a-3922-49dc-af10-f508cb4110a2",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "CANCELLED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "37ded3c9-af11-4907-b7c5-351265718efd",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "CANCELLED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "33a87731-56a3-4e1e-8c3f-d66c4fd1e6b3",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "CANCELLED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "4299ba9d-54b9-4b3f-a0a6-32efd661f0ae",
                    "name": "/services/dataloader/api/:tenantId/project/:projectId/jobs",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/:projectId/jobs",
                        "description": {
                            "content": "Creates a job to carry out the load operation using the configurations provided in the request payload. If the configuration details for a job are not provided in the request payload, the API creates a job based on the job definition",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                ":projectId",
                                "jobs"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "projectId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job definition ID used to create the job",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"JOB_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "e524e4e8-765e-4ba7-a72f-27d0e6123645",
                            "name": "Job Created successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"JOB_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"JOB_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "805ae15d-2e8d-4dfd-9698-f848552700eb",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"JOB_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8ee13059-162d-4228-85f7-80faf6633a24",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"JOB_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "413bad6c-9f06-4e7d-b5de-6bb56c73ff4f",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"JOB_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8ab3745c-cc08-46d2-b468-37c6088f46a3",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"JOB_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a38d9e12-a6b4-4539-b804-1264dc527eaf",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"JOB_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "0f15c848-ca95-4169-a4ca-48eb44bc6bfb",
                    "name": "/services/dataloader/api/:tenantId/project/:projectId/jobs/run",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/:projectId/jobs/run",
                        "description": {
                            "content": "Creates and runs a job to carry out the load operation using configurations provided in the request payload. If the configuration details for a job are not provided in the request payload, the API creates a job based on the job definition",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                ":projectId",
                                "jobs",
                                "run"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "projectId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job definition ID used to create the job",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"JOB_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "e8d86973-ffc9-4921-95d4-931acd7d8e42",
                            "name": "Job executed successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs",
                                        "run"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"JOB_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"JOB_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "aa5d7d5e-87d0-4214-8810-f3de3caa6023",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs",
                                        "run"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"JOB_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f2a33daa-3966-469b-908e-2450875a04c6",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs",
                                        "run"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"JOB_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f3a0a4ac-b150-4e2e-867c-7aba606b9e50",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs",
                                        "run"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"JOB_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "14247c59-11a9-4c65-b721-26e5f89cf5e1",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs",
                                        "run"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"JOB_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "22f95e4c-9113-4d23-a7e2-aa6b9618f90e",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs",
                                        "run"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"JOB_EXECUTED\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"AZURE\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "860ebc1c-aec2-4469-839f-bcdd0fd1d8e6",
                    "name": "/services/dataloader/api/:tenantId/projects",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/projects",
                        "description": {
                            "content": "Retrieves existing job definitions for a tenant matching filter criteria",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "projects"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Job definitions are filtered based on the status",
                                        "type": "text/plain"
                                    },
                                    "key": "projectStatus",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Filter job definitions by mapping used",
                                        "type": "text/plain"
                                    },
                                    "key": "mappingId",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Criteria to filter and get jobs which are created after provided long value of date",
                                        "type": "text/plain"
                                    },
                                    "key": "creationDate",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Filter criteria to list jobs based on progress status",
                                        "type": "text/plain"
                                    },
                                    "key": "progressStatus",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "If 'false', the jobs with completed status are displayed, else draft jobs are displayed",
                                        "type": "text/plain"
                                    },
                                    "key": "inProgress",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                        "type": "text/plain"
                                    },
                                    "key": "page",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Number of objects that need to be returned with a paged response",
                                        "type": "text/plain"
                                    },
                                    "key": "size",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                        "type": "text/plain"
                                    },
                                    "key": "sort",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "0e9bef1c-c72d-461c-82e6-f9361a347949",
                            "name": "Job definitions retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "projects"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job definitions are filtered based on the status",
                                                "type": "text/plain"
                                            },
                                            "key": "projectStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter job definitions by mapping used",
                                                "type": "text/plain"
                                            },
                                            "key": "mappingId",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created after provided long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter criteria to list jobs based on progress status",
                                                "type": "text/plain"
                                            },
                                            "key": "progressStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'false', the jobs with completed status are displayed, else draft jobs are displayed",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  },\n  {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"UPLOADED\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4571de13-7610-41ea-afb3-9b0d8585aed1",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "projects"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job definitions are filtered based on the status",
                                                "type": "text/plain"
                                            },
                                            "key": "projectStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter job definitions by mapping used",
                                                "type": "text/plain"
                                            },
                                            "key": "mappingId",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created after provided long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter criteria to list jobs based on progress status",
                                                "type": "text/plain"
                                            },
                                            "key": "progressStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'false', the jobs with completed status are displayed, else draft jobs are displayed",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0d72d675-e92d-44d4-8963-973e2b2a0059",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "projects"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job definitions are filtered based on the status",
                                                "type": "text/plain"
                                            },
                                            "key": "projectStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter job definitions by mapping used",
                                                "type": "text/plain"
                                            },
                                            "key": "mappingId",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created after provided long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter criteria to list jobs based on progress status",
                                                "type": "text/plain"
                                            },
                                            "key": "progressStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'false', the jobs with completed status are displayed, else draft jobs are displayed",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c6390117-3924-47ed-ba4b-1f3efa555a14",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "projects"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job definitions are filtered based on the status",
                                                "type": "text/plain"
                                            },
                                            "key": "projectStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter job definitions by mapping used",
                                                "type": "text/plain"
                                            },
                                            "key": "mappingId",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created after provided long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter criteria to list jobs based on progress status",
                                                "type": "text/plain"
                                            },
                                            "key": "progressStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'false', the jobs with completed status are displayed, else draft jobs are displayed",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a6e3fb69-8d78-453a-a9d3-44bdcb207213",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "projects"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job definitions are filtered based on the status",
                                                "type": "text/plain"
                                            },
                                            "key": "projectStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter job definitions by mapping used",
                                                "type": "text/plain"
                                            },
                                            "key": "mappingId",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created after provided long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter criteria to list jobs based on progress status",
                                                "type": "text/plain"
                                            },
                                            "key": "progressStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'false', the jobs with completed status are displayed, else draft jobs are displayed",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0df928a4-d798-4bcd-a663-97ed6c859995",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "projects"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job definitions are filtered based on the status",
                                                "type": "text/plain"
                                            },
                                            "key": "projectStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter job definitions by mapping used",
                                                "type": "text/plain"
                                            },
                                            "key": "mappingId",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created after provided long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter criteria to list jobs based on progress status",
                                                "type": "text/plain"
                                            },
                                            "key": "progressStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'false', the jobs with completed status are displayed, else draft jobs are displayed",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "e5dd4cc5-8bc4-4ca8-817b-e9c55ca98e42",
                    "name": "/services/dataloader/api/:tenantId/storage/_account",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/storage/_account",
                        "description": {
                            "content": "Creates a storage account to be used while creating the source details. You must provide the account type and credential details for creating the storage account",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "storage",
                                "_account"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"GCP\",\n  \"credentials\": \"<string>\"\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "6907e03a-28d8-4c1c-abd7-cc46de1aeed7",
                            "name": "Resource is created successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"GCP\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"GCP\",\n  \"credentials\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "43167cca-4f1a-43fd-b6fd-f1957780fb48",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"GCP\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6d9ef887-97f4-4b6e-965c-3db113c1fdbd",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"GCP\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3733e663-8b3b-42de-a5c1-ca270dfc1205",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"GCP\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "36f6b5eb-0ff4-42e7-8a22-bfb3bca886b3",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"GCP\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "33152a9f-13e5-4cfa-a07c-1442d8d62406",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"GCP\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "115067d9-47cc-40cc-900b-44b9098b03bd",
                    "name": "/services/dataloader/api/:tenantId/storage/_account/:accountId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/storage/_account/:accountId",
                        "description": {
                            "content": "You can get the existing storage account details using the ID",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "storage",
                                "_account",
                                ":accountId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "accountId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Existing storage account ID for which the details must be retrieved",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "678c934f-58b2-4a93-a579-d7e1f10bf6c0",
                            "name": "Resource retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"GCP\",\n  \"credentials\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6a764aa1-b96c-43e7-87d6-d55917fed9de",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e41e6ca7-7721-4d35-a9d6-5a18274f2762",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c2a52c7e-ac70-4127-b5ad-c87fbb4eb51c",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "be507403-e09f-49bc-b2cb-e071c17a3ce3",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "95ab905a-752d-41e7-85c8-58c46b0651fe",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "8d885c40-4be1-4275-8a99-4b32eaf8cbab",
                    "name": "/services/dataloader/api/:tenantId/storage/_account/:accountId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/storage/_account/:accountId",
                        "description": {
                            "content": "Updates the existing storage account details",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "storage",
                                "_account",
                                ":accountId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "accountId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Existing storage account ID for which the details must be updated",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"GCP\",\n  \"credentials\": \"<string>\"\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "98c740d8-9518-4b80-92b0-63b2909f02c5",
                            "name": "Resource is update successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"GCP\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"GCP\",\n  \"credentials\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e9ccd999-b68a-4c54-94ec-10d05684fc8a",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"GCP\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9a36190d-08b8-48b1-9162-ccb32b0aa046",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"GCP\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c1ea5644-ae1a-4fff-a4c9-cb422d4cd32d",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"GCP\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3b01c71e-2efa-490d-b078-6faebed85cda",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"GCP\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "17abf6b7-3713-4cea-9ae7-ecafe39fcfb7",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"GCP\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "fb5f16ac-534c-41a5-a02c-d2dea29c89d9",
                    "name": "/services/dataloader/api/:tenantId/storage/_account/:accountId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/storage/_account/:accountId",
                        "description": {
                            "content": "Delete existing storage account details using the ID",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "storage",
                                "_account",
                                ":accountId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "accountId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Existing storage account ID for which the details must be deleted",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "289c14b8-82e8-4f2c-a782-905ad38a3aa0",
                            "name": "Resource deleted successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "44e27d52-f60c-4fdd-840d-18715878aadd",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "cdc02324-023e-49c4-940c-2cbf4bc3ecfc",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5820c19d-6892-4b00-890c-c627d5b87f88",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a676ea37-77b7-478a-972e-87b5407344b4",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "dc6991a5-5e9a-42e6-b077-59b337318136",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "77007659-963c-422b-bc24-50cbfe340d0d",
                    "name": "/services/dataloader/api/:tenantId/storage/_accounts",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/storage/_accounts",
                        "description": {
                            "content": "Retrieves all storage account details for the accounts created by the logged-in user matching the filter criteria",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "storage",
                                "_accounts"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Type of the Storage account. <br><b>For example:</b> 'accountType=GCP'",
                                        "type": "text/plain"
                                    },
                                    "key": "accountType",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                        "type": "text/plain"
                                    },
                                    "key": "page",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Number of objects that need to be returned with a paged response",
                                        "type": "text/plain"
                                    },
                                    "key": "size",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=accountType' - sorts the storage accounts in the ascending order of accountType, 'sort=accountType:desc' - sorts the source details in the descending order of accountType. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=accountType:desc,name:desc' - sorts the API response in the descending order of accountType and 'name'",
                                        "type": "text/plain"
                                    },
                                    "key": "sort",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "a8db4274-68db-4ffb-b660-667345997f92",
                            "name": "Resources retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_accounts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Type of the Storage account. <br><b>For example:</b> 'accountType=GCP'",
                                                "type": "text/plain"
                                            },
                                            "key": "accountType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=accountType' - sorts the storage accounts in the ascending order of accountType, 'sort=accountType:desc' - sorts the source details in the descending order of accountType. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=accountType:desc,name:desc' - sorts the API response in the descending order of accountType and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AZURE\",\n    \"credentials\": \"<string>\"\n  },\n  {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"UPLOADED\",\n    \"credentials\": \"<string>\"\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3f308df6-9f96-45df-8af8-ad2d84a57f38",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_accounts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Type of the Storage account. <br><b>For example:</b> 'accountType=GCP'",
                                                "type": "text/plain"
                                            },
                                            "key": "accountType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=accountType' - sorts the storage accounts in the ascending order of accountType, 'sort=accountType:desc' - sorts the source details in the descending order of accountType. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=accountType:desc,name:desc' - sorts the API response in the descending order of accountType and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "86645865-0f37-4ae6-9e38-7f0d9689acda",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_accounts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Type of the Storage account. <br><b>For example:</b> 'accountType=GCP'",
                                                "type": "text/plain"
                                            },
                                            "key": "accountType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=accountType' - sorts the storage accounts in the ascending order of accountType, 'sort=accountType:desc' - sorts the source details in the descending order of accountType. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=accountType:desc,name:desc' - sorts the API response in the descending order of accountType and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ee22cf9b-dbab-483f-ab87-00db0940b9eb",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_accounts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Type of the Storage account. <br><b>For example:</b> 'accountType=GCP'",
                                                "type": "text/plain"
                                            },
                                            "key": "accountType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=accountType' - sorts the storage accounts in the ascending order of accountType, 'sort=accountType:desc' - sorts the source details in the descending order of accountType. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=accountType:desc,name:desc' - sorts the API response in the descending order of accountType and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2369a57b-e2c1-414b-a469-dbbeee50c856",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_accounts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Type of the Storage account. <br><b>For example:</b> 'accountType=GCP'",
                                                "type": "text/plain"
                                            },
                                            "key": "accountType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=accountType' - sorts the storage accounts in the ascending order of accountType, 'sort=accountType:desc' - sorts the source details in the descending order of accountType. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=accountType:desc,name:desc' - sorts the API response in the descending order of accountType and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5576cf58-b07a-439c-b584-fa3b3129dbdf",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_accounts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Type of the Storage account. <br><b>For example:</b> 'accountType=GCP'",
                                                "type": "text/plain"
                                            },
                                            "key": "accountType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=accountType' - sorts the storage accounts in the ascending order of accountType, 'sort=accountType:desc' - sorts the source details in the descending order of accountType. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=accountType:desc,name:desc' - sorts the API response in the descending order of accountType and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "50deeddf-ca99-4767-9bd7-53accc556268",
                    "name": "/services/dataloader/api/:tenantId/storage/:directory/upload",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/storage/:directory/upload",
                        "description": {
                            "content": "Upload a file from your system to remote storage for carrying out load operation",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "storage",
                                ":directory",
                                "upload"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "If set to 'true', the existing file is overwritten with the new file",
                                        "type": "text/plain"
                                    },
                                    "key": "replace",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "When provided, the API uploads the file and updates the provided job definition and maps the storage ID to the uploaded file",
                                        "type": "text/plain"
                                    },
                                    "key": "projectId",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "CSV file delimiter character, supported values are , | || ; ",
                                        "type": "text/plain"
                                    },
                                    "key": "delimiter",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "directory",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) GCS path for uploading the file",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "multipart/form-data"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "description": {
                                        "content": "(Required) MIME file that must be uploaded",
                                        "type": "text/plain"
                                    },
                                    "key": "file",
                                    "value": "<string>",
                                    "type": "text"
                                }
                            ]
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "b5da363c-62cd-4435-aedb-2c431014d639",
                            "name": "File uploaded",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":directory",
                                        "upload"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to 'true', the existing file is overwritten with the new file",
                                                "type": "text/plain"
                                            },
                                            "key": "replace",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "When provided, the API uploads the file and updates the provided job definition and maps the storage ID to the uploaded file",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "CSV file delimiter character, supported values are , | || ; ",
                                                "type": "text/plain"
                                            },
                                            "key": "delimiter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) MIME file that must be uploaded",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<string>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"UPLOADED\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5209acbe-af80-4bd3-9df9-06423068526d",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":directory",
                                        "upload"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to 'true', the existing file is overwritten with the new file",
                                                "type": "text/plain"
                                            },
                                            "key": "replace",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "When provided, the API uploads the file and updates the provided job definition and maps the storage ID to the uploaded file",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "CSV file delimiter character, supported values are , | || ; ",
                                                "type": "text/plain"
                                            },
                                            "key": "delimiter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) MIME file that must be uploaded",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<string>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "39d0a9de-6b8b-4ac7-8322-9daaf8395dd9",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":directory",
                                        "upload"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to 'true', the existing file is overwritten with the new file",
                                                "type": "text/plain"
                                            },
                                            "key": "replace",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "When provided, the API uploads the file and updates the provided job definition and maps the storage ID to the uploaded file",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "CSV file delimiter character, supported values are , | || ; ",
                                                "type": "text/plain"
                                            },
                                            "key": "delimiter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) MIME file that must be uploaded",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<string>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "72ebdcb5-8b4f-4616-a24b-033712f7e4e9",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":directory",
                                        "upload"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to 'true', the existing file is overwritten with the new file",
                                                "type": "text/plain"
                                            },
                                            "key": "replace",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "When provided, the API uploads the file and updates the provided job definition and maps the storage ID to the uploaded file",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "CSV file delimiter character, supported values are , | || ; ",
                                                "type": "text/plain"
                                            },
                                            "key": "delimiter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) MIME file that must be uploaded",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<string>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b9c35d61-7cd3-40d9-bf67-ea5bfa645b37",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":directory",
                                        "upload"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to 'true', the existing file is overwritten with the new file",
                                                "type": "text/plain"
                                            },
                                            "key": "replace",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "When provided, the API uploads the file and updates the provided job definition and maps the storage ID to the uploaded file",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "CSV file delimiter character, supported values are , | || ; ",
                                                "type": "text/plain"
                                            },
                                            "key": "delimiter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) MIME file that must be uploaded",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<string>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "402f3497-bdb7-4a65-a45d-bea4af918842",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":directory",
                                        "upload"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to 'true', the existing file is overwritten with the new file",
                                                "type": "text/plain"
                                            },
                                            "key": "replace",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "When provided, the API uploads the file and updates the provided job definition and maps the storage ID to the uploaded file",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "CSV file delimiter character, supported values are , | || ; ",
                                                "type": "text/plain"
                                            },
                                            "key": "delimiter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) MIME file that must be uploaded",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<string>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "f5618391-49d7-4dbf-b1cd-eaa7f5fe264a",
                    "name": "/services/dataloader/api/:tenantId/storage/:sourceId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/storage/:sourceId",
                        "description": {
                            "content": "Removes the uploaded file from Cloud Storage",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "storage",
                                ":sourceId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "sourceId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Source details ID to delete",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "b5fabf29-d79b-4e46-b48d-b9778aea076d",
                            "name": "Source file deleted successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "b9a260c3-7b76-4243-b397-3aa05cf6200b",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d023cae3-9c3b-4a09-8087-18d0f8fde5cc",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8fb932d5-7355-4ab7-9421-a079541bfd41",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "89b9dece-5aec-4f5d-9009-d8dfda04137b",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5613af73-bd5b-48b2-95e2-6b091d5aa830",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "fea5ec56-8992-44ff-aab1-9c746ebc5e5a",
                    "name": "/services/dataloader/api/:tenantId/storage/:sourceId/read",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/storage/:sourceId/read",
                        "description": {
                            "content": "Reads the specified number of lines from the existing source details and returns the information",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "storage",
                                ":sourceId",
                                "read"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Number of lines to be read from the source file for preview",
                                        "type": "text/plain"
                                    },
                                    "key": "linesToRead",
                                    "value": "10"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "sourceId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Existing Storage ID from which the files are to be read",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "da4f7fd0-8dea-423e-b716-8ac7335697ac",
                            "name": "Source files are read successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId",
                                        "read"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of lines to be read from the source file for preview",
                                                "type": "text/plain"
                                            },
                                            "key": "linesToRead",
                                            "value": "10"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"consectetur_18\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8021d7c4-a114-4c01-8217-655b85313e12",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId",
                                        "read"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of lines to be read from the source file for preview",
                                                "type": "text/plain"
                                            },
                                            "key": "linesToRead",
                                            "value": "10"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "44962e63-b663-48d5-a2fe-85df23752a55",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId",
                                        "read"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of lines to be read from the source file for preview",
                                                "type": "text/plain"
                                            },
                                            "key": "linesToRead",
                                            "value": "10"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "01ab2408-53dd-46e7-b48a-ff8bbb186e2c",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId",
                                        "read"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of lines to be read from the source file for preview",
                                                "type": "text/plain"
                                            },
                                            "key": "linesToRead",
                                            "value": "10"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1e648721-e030-4d55-9866-78ce371e3adc",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId",
                                        "read"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of lines to be read from the source file for preview",
                                                "type": "text/plain"
                                            },
                                            "key": "linesToRead",
                                            "value": "10"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c8648b11-16b0-4496-b9a0-61e112c02c3e",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId",
                                        "read"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of lines to be read from the source file for preview",
                                                "type": "text/plain"
                                            },
                                            "key": "linesToRead",
                                            "value": "10"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ]
        },
        {
            "name": "Reference Data Management",
            "description": "",
            "item": [
                {
                    "id": "13bcfb21-9152-4eb0-8c1e-e95385c2fc1b",
                    "name": "/services/lookups/:tenantId",
                    "request": {
                        "name": "/services/lookups/:tenantId",
                        "description": {
                            "content": "This API saves a collection of lookups in RDM tenant according to the JSON object definition. If you need to create just one lookup value then please specify one JSON object in the array. The same API should be used for create and update operations.<br/><br/>You can create a maximum of <b>100</b> lookup codes in a single request.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "lookups",
                                ":tenantId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the RDM tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "80085380-0bfe-4fd2-809f-a6d4e10e7b06",
                            "name": "Successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"uri\": \"<string>\",\n    \"value\": {},\n    \"error\": {\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"innerErrorData\": {\n        \"innerErrorData\": {\n          \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n        },\n        \"exception\": \"<string>\",\n        \"stack\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    \"warning\": {\n      \"warningMessage\": \"<string>\"\n    }\n  },\n  {\n    \"uri\": \"<string>\",\n    \"value\": {},\n    \"error\": {\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"innerErrorData\": {\n        \"innerErrorData\": {\n          \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n        },\n        \"exception\": \"<string>\",\n        \"stack\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    \"warning\": {\n      \"warningMessage\": \"<string>\"\n    }\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a1d68eed-6230-4ec0-a931-09018d73d0e9",
                            "name": "The operation cannot be performed because user is unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "3410a37e-8e6f-48b7-9a4c-ce629767a5e5",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "85aad328-db4f-4aee-bb97-48bff702689a",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "dc1f8c1f-d334-45dd-a5c8-b9745468913e",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "3c6c6984-ab46-4d05-b92b-41dbc81af891",
                    "name": "/services/lookups/:tenantId/:type",
                    "request": {
                        "name": "/services/lookups/:tenantId/:type",
                        "description": {
                            "content": "This API saves a collection of lookups in RDM tenant according to the JSON object definition. If you need to create just one lookup value then please specify one JSON object in the array. The same API should be used for create and update operations.<br/><br/>You can create a maximum of <b>100</b> lookup codes in a single request.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "lookups",
                                ":tenantId",
                                ":type"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the RDM tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "type",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Lookup type for which values must be created",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "3f4e0959-9e50-4fc5-8330-fe7dae16c13e",
                            "name": "Successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"uri\": \"<string>\",\n  \"value\": {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  \"error\": {\n    \"errorMessage\": \"<string>\",\n    \"errorCode\": \"<integer>\",\n    \"innerErrorData\": {\n      \"innerErrorData\": {\n        \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n      },\n      \"exception\": \"<string>\",\n      \"stack\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  },\n  \"warning\": {\n    \"warningMessage\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "254a9998-7717-4c05-8b96-c031c6db99f1",
                            "name": "The operation cannot be performed because user is unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "cb0fc23f-f02d-4672-b2ad-3cfe4f13ef8a",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "ddcf9c5e-53b7-42e9-aa2c-b3d72fe470b7",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "fed78e6b-1426-44ce-8fe4-28e7b8e77961",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "7c984f2a-9adf-4d84-86c5-0e06117fb01d",
                    "name": "/services/lookups/:tenantId/:type/:code",
                    "request": {
                        "name": "/services/lookups/:tenantId/:type/:code",
                        "description": {
                            "content": "This API updates a lookup value for the specified lookup type and lookup code. The response returns <b>Success</b> if the value is successfully updated.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "lookups",
                                ":tenantId",
                                ":type",
                                ":code"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the RDM tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "type",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Lookup type for which values must be created",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "uI",
                                    "key": "code",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"tenantId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"code\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"parents\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sourceMappings\": [\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    }\n  ],\n  \"localizations\": [\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"updatedBy\": \"<string>\",\n  \"updateDate\": \"<long>\",\n  \"version\": \"<long>\"\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "4aed9766-4bee-4039-821f-3aeac702dbde",
                            "name": "Successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type",
                                        ":code"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"tenantId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"code\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"parents\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sourceMappings\": [\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    }\n  ],\n  \"localizations\": [\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"updatedBy\": \"<string>\",\n  \"updateDate\": \"<long>\",\n  \"version\": \"<long>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"tenantId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"code\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"parents\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sourceMappings\": [\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    }\n  ],\n  \"localizations\": [\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"updatedBy\": \"<string>\",\n  \"updateDate\": \"<long>\",\n  \"version\": \"<long>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "420d21f7-77d4-4af1-80e9-b0f29ed98084",
                            "name": "The operation cannot be performed because user is unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type",
                                        ":code"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"tenantId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"code\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"parents\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sourceMappings\": [\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    }\n  ],\n  \"localizations\": [\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"updatedBy\": \"<string>\",\n  \"updateDate\": \"<long>\",\n  \"version\": \"<long>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "8932bc00-9c22-4108-b917-92b31bf92726",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type",
                                        ":code"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"tenantId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"code\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"parents\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sourceMappings\": [\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    }\n  ],\n  \"localizations\": [\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"updatedBy\": \"<string>\",\n  \"updateDate\": \"<long>\",\n  \"version\": \"<long>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "9d791238-89d6-44a8-844c-65aa76076783",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type",
                                        ":code"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"tenantId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"code\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"parents\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sourceMappings\": [\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    }\n  ],\n  \"localizations\": [\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"updatedBy\": \"<string>\",\n  \"updateDate\": \"<long>\",\n  \"version\": \"<long>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "839f7493-ed5b-420c-a5f0-530b8659f9b9",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type",
                                        ":code"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"tenantId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"code\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"parents\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sourceMappings\": [\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    }\n  ],\n  \"localizations\": [\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"updatedBy\": \"<string>\",\n  \"updateDate\": \"<long>\",\n  \"version\": \"<long>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "b8658283-08d1-440b-b1b5-af2e3122e3e1",
                    "name": "/services/unmapped/:tenantId",
                    "request": {
                        "name": "/services/unmapped/:tenantId",
                        "description": {
                            "content": "This API saves a collection of unmapped lookups in RDM tenant according to the JSON object definition. If you need to create just one unmapped lookup value then please specify one JSON object in the array. The same API should be used for create and update operations.<br/><br/>You should use this API when you have lookups from a source but still don't have the corresponding canonical value in the lookup type. Once the canonical value is defined for those unmapped lookups from a source, please use Save Lookup API with the details from unmapped mapping and then delete the unmapped value.<br/><br/>You can create a maximum of <b>100</b> unmapped values in a single request.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "unmapped",
                                ":tenantId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                        "type": "text/plain"
                                    },
                                    "key": "onlyIfNoMapping",
                                    "value": "false"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the RDM tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "2cd1eec5-5670-43f1-8fd6-c5c8e6e88cdd",
                            "name": "Successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"uri\": \"<string>\",\n  \"value\": {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  \"error\": {\n    \"errorMessage\": \"<string>\",\n    \"errorCode\": \"<integer>\",\n    \"innerErrorData\": {\n      \"innerErrorData\": {\n        \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n      },\n      \"exception\": \"<string>\",\n      \"stack\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  },\n  \"warning\": {\n    \"warningMessage\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7aff94f5-02b7-42d3-8a8d-b031700a1921",
                            "name": "The operation cannot be performed because user is unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "8796a7db-6e03-4822-a26a-ec5f0b8258a2",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "24731b02-1eb7-460f-9132-d679d1d6fe2d",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "027d2d02-612f-4c7c-91e1-f8fda7c5ae70",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "617ca87c-1e67-4a1f-9a47-abb667563d5b",
                    "name": "/services/unmapped/:tenantId/:type",
                    "request": {
                        "name": "/services/unmapped/:tenantId/:type",
                        "description": {
                            "content": "This API saves a collection of unmapped lookups in RDM tenant according to the JSON object definition. If you need to create just one unmapped lookup value then please specify one JSON object in the array. The same API should be used for create and update operations.<br/><br/>You should use this API when you have lookups from a source but still don't have the corresponding canonical value in the lookup type. Once the canonical value is defined for those unmapped lookups from a source, please use Save Lookup API with the details from unmapped mapping and then delete the unmapped value.<br/><br/>You can create a maximum of <b>100</b> unmapped values in a single request.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "unmapped",
                                ":tenantId",
                                ":type"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                        "type": "text/plain"
                                    },
                                    "key": "onlyIfNoMapping",
                                    "value": "false"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the RDM tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "type",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Lookup type for which unmapped values must be created",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "54c8bdde-ce5a-42c0-bb31-639cfc062b2d",
                            "name": "Successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"uri\": \"<string>\",\n    \"value\": {},\n    \"error\": {\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"innerErrorData\": {\n        \"innerErrorData\": {\n          \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n        },\n        \"exception\": \"<string>\",\n        \"stack\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    \"warning\": {\n      \"warningMessage\": \"<string>\"\n    }\n  },\n  {\n    \"uri\": \"<string>\",\n    \"value\": {},\n    \"error\": {\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"innerErrorData\": {\n        \"innerErrorData\": {\n          \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n        },\n        \"exception\": \"<string>\",\n        \"stack\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    \"warning\": {\n      \"warningMessage\": \"<string>\"\n    }\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c88c115b-02ae-4927-b568-051813a7a34a",
                            "name": "The operation cannot be performed because user is unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "01e98661-7dbd-4c17-bc6f-5e239f1cb5ea",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "78fef54d-449d-4050-9aaa-574a39289e6e",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d601b5a7-b3c0-462a-ab84-348a6b302e72",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ]
        }
    ],
    "event": [],
    "variable": [
        {
            "key": "baseUrl",
            "value": "/"
        }
    ],
    "info": {
        "_postman_id": "0c7d729e-4ab0-4741-9f2c-5aef65281193",
        "name": "Ingest",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
        "description": {
            "content": "Load data into entities, relationships, interactions, crosswalks and reference data.\n\nContact Support:\n Name: Reltio\n Email: support@reltio.com",
            "type": "text/plain"
        }
    }
}