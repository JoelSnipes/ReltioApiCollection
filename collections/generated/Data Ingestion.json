{
    "item": [
        {
            "name": "Entities",
            "description": "",
            "item": [
                {
                    "id": "451d7405-0b64-4603-b5c7-cea280346cde",
                    "name": "/services/reltio/api/:tenantId/entities",
                    "request": {
                        "name": "/services/reltio/api/:tenantId/entities",
                        "description": {
                            "content": "This API saves a collection of entities in Reltio Platform according to JSON object definition. To create just one entity using this API, specify one JSON object in the array. <br /> If you post an entity with some crosswalks (for example, <b>crosswalk1</b> and <b>crosswalk2</b>), and that entity corresponds to some existing entities (<b>entity1</b> and <b>entity2</b>) in the Reltio Platform, then these entities are merged in one entity referred as the survivor (for example, <b>entity1</b> would be merged in <b>entity2</b>). After this, the resultant survivor entity (for example, <b>entity2</b>) is updated with the new information from a posted entity. If no entities are found or provided in the posted entity crosswalk or no crosswalks are provided, then a new entity is created. <br /><b>Note:</b> If you do not specify roles in the request, then all roles from the entity being overwritten remain unchanged. To remove all roles from the resultant entity specify an empty array of roles in the <b>POST /entities</b> request.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "reltio",
                                "api",
                                ":tenantId",
                                "entities"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Specifies if the response should contain created entities. Default is true.",
                                        "type": "text/plain"
                                    },
                                    "key": "returnObjects",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                        "type": "text/plain"
                                    },
                                    "key": "options",
                                    "value": "preserveHidden,preserveURIs"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in__3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"culpa_af\": \"<string>\",\n          \"quiac_\": \"<string>\",\n          \"ullamcofcd\": \"<string>\",\n          \"Duis66\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"sintc8_\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"animc\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"adipisicingc\": \"<string>\",\n          \"fugiate2\": \"<string>\",\n          \"dolore_55\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"Duisc\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"in_25\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "3db300d9-70ee-4234-a978-d21148d5ef6d",
                            "name": "Entities are successfully saved",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "preserveHidden,preserveURIs"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in__3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"culpa_af\": \"<string>\",\n          \"quiac_\": \"<string>\",\n          \"ullamcofcd\": \"<string>\",\n          \"Duis66\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"sintc8_\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"animc\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"adipisicingc\": \"<string>\",\n          \"fugiate2\": \"<string>\",\n          \"dolore_55\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"Duisc\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"in_25\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"index\": \"<integer>\",\n    \"errors\": {\n      \"severity\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorDetailMessage\": \"<string>\",\n      \"innerErrorData\": {\n        \"exception\": \"<string>\"\n      }\n    },\n    \"object\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"proident_dcd\": \"<string>\",\n            \"est_5\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"laborum_7c\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<long>\",\n      \"updatedTime\": \"<long>\",\n      \"attributes\": {},\n      \"uri\": \"<string>\",\n      \"type\": \"<string>\",\n      \"analyticsAttributes\": {\n        \"velit73\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"sit_d\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ]\n      },\n      \"secondaryLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"refUpdatedBy\": \"<string>\",\n      \"refUpdatedTime\": \"<long>\",\n      \"refCommitTime\": \"<long>\",\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"successful\": \"<boolean>\"\n  },\n  {\n    \"index\": \"<integer>\",\n    \"errors\": {\n      \"severity\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorDetailMessage\": \"<string>\",\n      \"innerErrorData\": {\n        \"exception\": \"<string>\"\n      }\n    },\n    \"object\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"Excepteurc9f\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"nostrud_76\": \"<string>\",\n            \"commodob\": \"<string>\",\n            \"aliqua_cd\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<long>\",\n      \"updatedTime\": \"<long>\",\n      \"attributes\": {},\n      \"uri\": \"<string>\",\n      \"type\": \"<string>\",\n      \"analyticsAttributes\": {\n        \"reprehenderit32\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ]\n      },\n      \"secondaryLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"refUpdatedBy\": \"<string>\",\n      \"refUpdatedTime\": \"<long>\",\n      \"refCommitTime\": \"<long>\",\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"successful\": \"<boolean>\"\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "af39542c-d6f7-437d-a1de-bd91043c8149",
                            "name": "Entities aren't saved due to a reason provided in the error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "preserveHidden,preserveURIs"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in__3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"culpa_af\": \"<string>\",\n          \"quiac_\": \"<string>\",\n          \"ullamcofcd\": \"<string>\",\n          \"Duis66\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"sintc8_\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"animc\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"adipisicingc\": \"<string>\",\n          \"fugiate2\": \"<string>\",\n          \"dolore_55\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"Duisc\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"in_25\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0c05f2a5-6d79-4d92-aba4-f8a3b80a996f",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "preserveHidden,preserveURIs"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in__3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"culpa_af\": \"<string>\",\n          \"quiac_\": \"<string>\",\n          \"ullamcofcd\": \"<string>\",\n          \"Duis66\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"sintc8_\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"animc\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"adipisicingc\": \"<string>\",\n          \"fugiate2\": \"<string>\",\n          \"dolore_55\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"Duisc\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"in_25\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c47ee324-6d9d-4478-b801-9c0529970f10",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "preserveHidden,preserveURIs"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in__3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"culpa_af\": \"<string>\",\n          \"quiac_\": \"<string>\",\n          \"ullamcofcd\": \"<string>\",\n          \"Duis66\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"sintc8_\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"animc\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"adipisicingc\": \"<string>\",\n          \"fugiate2\": \"<string>\",\n          \"dolore_55\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"Duisc\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"in_25\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "700989fa-2910-4607-bf05-2fcfda83e9c5",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "preserveHidden,preserveURIs"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in__3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"culpa_af\": \"<string>\",\n          \"quiac_\": \"<string>\",\n          \"ullamcofcd\": \"<string>\",\n          \"Duis66\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"sintc8_\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"animc\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"adipisicingc\": \"<string>\",\n          \"fugiate2\": \"<string>\",\n          \"dolore_55\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"Duisc\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"in_25\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0bdbdf5d-b9a2-447d-bffb-ab3cc5758237",
                            "name": "Too many requests, please try later",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "preserveHidden,preserveURIs"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in__3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"culpa_af\": \"<string>\",\n          \"quiac_\": \"<string>\",\n          \"ullamcofcd\": \"<string>\",\n          \"Duis66\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"sintc8_\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"animc\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"adipisicingc\": \"<string>\",\n          \"fugiate2\": \"<string>\",\n          \"dolore_55\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"Duisc\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"in_25\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Too Many Requests",
                            "code": 429,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "8d0fffc3-2237-40e1-8c1a-53ce85691ff9",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "preserveHidden,preserveURIs"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in__3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"culpa_af\": \"<string>\",\n          \"quiac_\": \"<string>\",\n          \"ullamcofcd\": \"<string>\",\n          \"Duis66\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"sintc8_\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"animc\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"adipisicingc\": \"<string>\",\n          \"fugiate2\": \"<string>\",\n          \"dolore_55\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"Duisc\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"in_25\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8d6eca30-9b97-4e1f-a246-3ebff8e99892",
                            "name": "This status code could represent 2 possible scenarios. First, the 'Service Unavailable' scenario. Second, this status code is used when too many requests are being sent in-parallel and API backpressure mechanism was used to protect the platform. In both scenarios, an exponential backoff mechanism should be used to control the rate of requests sent to the server. ",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "preserveHidden,preserveURIs"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in__3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"culpa_af\": \"<string>\",\n          \"quiac_\": \"<string>\",\n          \"ullamcofcd\": \"<string>\",\n          \"Duis66\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"sintc8_\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"animc\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"adipisicingc\": \"<string>\",\n          \"fugiate2\": \"<string>\",\n          \"dolore_55\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"Duisc\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"in_25\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "518ca97f-604e-496a-a219-7e8b25b385bc",
                            "name": "The request consumes more resources than it is allowed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "preserveHidden,preserveURIs"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in__3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"culpa_af\": \"<string>\",\n          \"quiac_\": \"<string>\",\n          \"ullamcofcd\": \"<string>\",\n          \"Duis66\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"sintc8_\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"animc\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"adipisicingc\": \"<string>\",\n          \"fugiate2\": \"<string>\",\n          \"dolore_55\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"Duisc\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"in_25\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Insufficient Storage (WebDAV) (RFC 4918)",
                            "code": 507,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "8ca2c825-aea3-46e2-a556-570f1a796dc2",
                    "name": "/services/reltio/api/:tenantId/entities/_conditional",
                    "request": {
                        "name": "/services/reltio/api/:tenantId/entities/_conditional",
                        "description": {
                            "content": "This API is an aggregate of Search and Save API.It retrieves the individual entities or searches for multiple entities and based on the search result, this API saves a collection of entities in Reltio Platform according to JSON object definition. ",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "reltio",
                                "api",
                                ":tenantId",
                                "entities",
                                "_conditional"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Enables entities filtering by a condition. Format for filter query parameter: filter=({Condition Type}[AND/OR {Condition Type}]*).\nFor more information, please visit https://docs.reltio.com",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Comma-separated list of properties from object structure that should be returned in a response. Allows you to return a partial object. List of object properties you can find at the response model. Additional system properties are:<ul><li>attributes._lookupCodes: return codes for lookup attributes.</li><li>attributes._lookupValues: return values for lookup attributes.</li></ul>",
                                        "type": "text/plain"
                                    },
                                    "key": "select",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Positive Integer value to identify maximum number of entities to return in a response. Can be used to organize pagination in combination with the \"offset\" parameter.",
                                        "type": "text/plain"
                                    },
                                    "key": "max",
                                    "value": "50"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Positive Integer value to identify starting what element in a result set should be returned in a response. Can be used to organize pagination in combination with the max parameter.",
                                        "type": "text/plain"
                                    },
                                    "key": "offset",
                                    "value": "0"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Entity objects property that should be used for sorting. Can be used in combination with the \"order\" parameter to have reverse order. If this parameter is not provided or if the value cannot be recognized, then no sorting is used.",
                                        "type": "text/plain"
                                    },
                                    "key": "sort",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Order of sorting. Applicable only in combination with the sort parameter. Possible values:\n<ul><li>asc - results are shown in ascending order.</li><li>desc - results are shown in descending order.</li></ul>",
                                        "type": "text/plain"
                                    },
                                    "key": "order",
                                    "value": "asc"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Specifies maximum number of values listed in attributes. This restriction is intended for more efficient responses in the case of very long lists of values in some attributes.",
                                        "type": "text/plain"
                                    },
                                    "key": "defaultMaxValues",
                                    "value": "<int>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "When set to true, documents with search hits in labels get more search relevance score.",
                                        "type": "text/plain"
                                    },
                                    "key": "scoreEnabled",
                                    "value": "false"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Defines whether to include active and expired entities into the results. By default, only active entities are included in the response. Possible values:\n<ul><li>all - include both active and expired entities</li><li>active - include only active entities</li><li>not_active - include only expired entities</li></ul>",
                                        "type": "text/plain"
                                    },
                                    "key": "activeness",
                                    "value": "active"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Specifies if the response should contain created entities. Default is true.",
                                        "type": "text/plain"
                                    },
                                    "key": "returnObjects",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                        "type": "text/plain"
                                    },
                                    "key": "options",
                                    "value": "preserveHidden,preserveURIs"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Specifies if the system should apply the request body depending on search results. Default is true.",
                                        "type": "text/plain"
                                    },
                                    "key": "applyIfNoMatches",
                                    "value": "true"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Specifies if the system should return the search results in the response. Default is true.",
                                        "type": "text/plain"
                                    },
                                    "key": "returnMatches",
                                    "value": "true"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in__3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"culpa_af\": \"<string>\",\n          \"quiac_\": \"<string>\",\n          \"ullamcofcd\": \"<string>\",\n          \"Duis66\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"sintc8_\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"animc\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"adipisicingc\": \"<string>\",\n          \"fugiate2\": \"<string>\",\n          \"dolore_55\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"Duisc\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"in_25\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "9c86d17d-bb01-465c-98f2-e8f461823c5e",
                            "name": "successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities",
                                        "_conditional"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Enables entities filtering by a condition. Format for filter query parameter: filter=({Condition Type}[AND/OR {Condition Type}]*).\nFor more information, please visit https://docs.reltio.com",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of properties from object structure that should be returned in a response. Allows you to return a partial object. List of object properties you can find at the response model. Additional system properties are:<ul><li>attributes._lookupCodes: return codes for lookup attributes.</li><li>attributes._lookupValues: return values for lookup attributes.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "select",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Positive Integer value to identify maximum number of entities to return in a response. Can be used to organize pagination in combination with the \"offset\" parameter.",
                                                "type": "text/plain"
                                            },
                                            "key": "max",
                                            "value": "50"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Positive Integer value to identify starting what element in a result set should be returned in a response. Can be used to organize pagination in combination with the max parameter.",
                                                "type": "text/plain"
                                            },
                                            "key": "offset",
                                            "value": "0"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Entity objects property that should be used for sorting. Can be used in combination with the \"order\" parameter to have reverse order. If this parameter is not provided or if the value cannot be recognized, then no sorting is used.",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Order of sorting. Applicable only in combination with the sort parameter. Possible values:\n<ul><li>asc - results are shown in ascending order.</li><li>desc - results are shown in descending order.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "order",
                                            "value": "asc"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies maximum number of values listed in attributes. This restriction is intended for more efficient responses in the case of very long lists of values in some attributes.",
                                                "type": "text/plain"
                                            },
                                            "key": "defaultMaxValues",
                                            "value": "<int>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "When set to true, documents with search hits in labels get more search relevance score.",
                                                "type": "text/plain"
                                            },
                                            "key": "scoreEnabled",
                                            "value": "false"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines whether to include active and expired entities into the results. By default, only active entities are included in the response. Possible values:\n<ul><li>all - include both active and expired entities</li><li>active - include only active entities</li><li>not_active - include only expired entities</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "activeness",
                                            "value": "active"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "preserveHidden,preserveURIs"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the system should apply the request body depending on search results. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "applyIfNoMatches",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the system should return the search results in the response. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnMatches",
                                            "value": "true"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in__3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"culpa_af\": \"<string>\",\n          \"quiac_\": \"<string>\",\n          \"ullamcofcd\": \"<string>\",\n          \"Duis66\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"sintc8_\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"animc\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"adipisicingc\": \"<string>\",\n          \"fugiate2\": \"<string>\",\n          \"dolore_55\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"Duisc\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"in_25\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"index\": \"<integer>\",\n    \"errors\": {\n      \"severity\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorDetailMessage\": \"<string>\",\n      \"innerErrorData\": {\n        \"exception\": \"<string>\"\n      }\n    },\n    \"object\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"proident_dcd\": \"<string>\",\n            \"est_5\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"laborum_7c\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<long>\",\n      \"updatedTime\": \"<long>\",\n      \"attributes\": {},\n      \"uri\": \"<string>\",\n      \"type\": \"<string>\",\n      \"analyticsAttributes\": {\n        \"velit73\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"sit_d\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ]\n      },\n      \"secondaryLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"refUpdatedBy\": \"<string>\",\n      \"refUpdatedTime\": \"<long>\",\n      \"refCommitTime\": \"<long>\",\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"successful\": \"<boolean>\"\n  },\n  {\n    \"index\": \"<integer>\",\n    \"errors\": {\n      \"severity\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorDetailMessage\": \"<string>\",\n      \"innerErrorData\": {\n        \"exception\": \"<string>\"\n      }\n    },\n    \"object\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"Excepteurc9f\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"nostrud_76\": \"<string>\",\n            \"commodob\": \"<string>\",\n            \"aliqua_cd\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<long>\",\n      \"updatedTime\": \"<long>\",\n      \"attributes\": {},\n      \"uri\": \"<string>\",\n      \"type\": \"<string>\",\n      \"analyticsAttributes\": {\n        \"reprehenderit32\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ]\n      },\n      \"secondaryLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"refUpdatedBy\": \"<string>\",\n      \"refUpdatedTime\": \"<long>\",\n      \"refCommitTime\": \"<long>\",\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"successful\": \"<boolean>\"\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ]
        },
        {
            "name": "Interactions",
            "description": "",
            "item": [
                {
                    "id": "578cc633-6e34-4371-b328-0f0a5e5da5ae",
                    "name": "/services/reltio/api/:tenantId/interactions",
                    "request": {
                        "name": "/services/reltio/api/:tenantId/interactions",
                        "description": {
                            "content": "This API creates a collection of interactions in the Reltio Platform according to the JSON object definition. To create just one interaction using this API, specify one JSON object in the array.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "reltio",
                                "api",
                                ":tenantId",
                                "interactions"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "This parameter indicates the identifier of an interaction object in the source system",
                                        "type": "text/plain"
                                    },
                                    "key": "crosswalkValue",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "This parameter specifies if the response must contain the created objects",
                                        "type": "text/plain"
                                    },
                                    "key": "returnObjects",
                                    "value": "true"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                        "type": "text/plain"
                                    },
                                    "key": "options",
                                    "value": "sendHidden,sendHidden"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "disabled": false,
                                "description": {
                                    "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                    "type": "text/plain"
                                },
                                "key": "Source-System",
                                "value": "<string>"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"sitf\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ipsum2\": \"<string>\",\n          \"consecteturc4e\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"labore eu occaecat aliqua\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"voluptateb6\": \"<string>\",\n          \"voluptate_3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consectetur350\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": 78410979,\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "d0d3ea88-236d-4ab3-9e8a-f743cfd166b4",
                            "name": "Successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"sitf\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ipsum2\": \"<string>\",\n          \"consecteturc4e\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"labore eu occaecat aliqua\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"voluptateb6\": \"<string>\",\n          \"voluptate_3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consectetur350\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": 78410979,\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"index\": \"<integer>\",\n    \"errors\": {\n      \"severity\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorDetailMessage\": \"<string>\",\n      \"innerErrorData\": {\n        \"exception\": \"<string>\"\n      }\n    },\n    \"object\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"culpa600\": \"<string>\",\n            \"culpa_817\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"magnab0f\": \"<string>\",\n            \"veniam_c5d\": \"<string>\",\n            \"fugiat__7\": \"<string>\",\n            \"reprehenderit_ae\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<long>\",\n      \"updatedTime\": \"<long>\",\n      \"attributes\": {},\n      \"members\": {},\n      \"timestamp\": \"Excep\",\n      \"uri\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"successful\": \"<boolean>\"\n  },\n  {\n    \"index\": \"<integer>\",\n    \"errors\": {\n      \"severity\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorDetailMessage\": \"<string>\",\n      \"innerErrorData\": {\n        \"exception\": \"<string>\"\n      }\n    },\n    \"object\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"deserunt_8\": \"<string>\",\n            \"Ut_9e\": \"<string>\",\n            \"do_2\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"exercitation4\": \"<string>\",\n            \"occaecat611\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<long>\",\n      \"updatedTime\": \"<long>\",\n      \"attributes\": {},\n      \"members\": {},\n      \"timestamp\": 53646130,\n      \"uri\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"successful\": \"<boolean>\"\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2512503b-6fdd-4157-a0db-2fd98a878162",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"sitf\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ipsum2\": \"<string>\",\n          \"consecteturc4e\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"labore eu occaecat aliqua\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"voluptateb6\": \"<string>\",\n          \"voluptate_3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consectetur350\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": 78410979,\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "76a3d393-4d9c-438b-8890-541c882297c6",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"sitf\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ipsum2\": \"<string>\",\n          \"consecteturc4e\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"labore eu occaecat aliqua\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"voluptateb6\": \"<string>\",\n          \"voluptate_3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consectetur350\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": 78410979,\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0c3ec043-477b-4d74-ab79-c5279be34de3",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"sitf\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ipsum2\": \"<string>\",\n          \"consecteturc4e\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"labore eu occaecat aliqua\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"voluptateb6\": \"<string>\",\n          \"voluptate_3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consectetur350\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": 78410979,\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2c132eac-a276-43cf-bfe9-01874f3087f1",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"sitf\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ipsum2\": \"<string>\",\n          \"consecteturc4e\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"labore eu occaecat aliqua\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"voluptateb6\": \"<string>\",\n          \"voluptate_3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consectetur350\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": 78410979,\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "265407d3-8adb-4717-bc74-7a627f90887f",
                            "name": "Too many requests, please try later",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"sitf\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ipsum2\": \"<string>\",\n          \"consecteturc4e\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"labore eu occaecat aliqua\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"voluptateb6\": \"<string>\",\n          \"voluptate_3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consectetur350\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": 78410979,\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Too Many Requests",
                            "code": 429,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "81a7b622-23c9-4fe0-8f42-7ee6bf45b007",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"sitf\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ipsum2\": \"<string>\",\n          \"consecteturc4e\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"labore eu occaecat aliqua\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"voluptateb6\": \"<string>\",\n          \"voluptate_3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consectetur350\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": 78410979,\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1937be43-8649-4d3c-a4d2-c34db57abedb",
                            "name": "This status code could represent 2 possible scenarios. First, the 'Service Unavailable' scenario. Second, this status code is used when too many requests are being sent in-parallel and API backpressure mechanism was used to protect the platform. In both scenarios, an exponential backoff mechanism should be used to control the rate of requests sent to the server. ",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"sitf\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ipsum2\": \"<string>\",\n          \"consecteturc4e\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"labore eu occaecat aliqua\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"voluptateb6\": \"<string>\",\n          \"voluptate_3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consectetur350\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": 78410979,\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3f5ddf8d-3884-4e5a-9bfe-0192e156fb1d",
                            "name": "The request consumes more resources than it is allowed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"sitf\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ipsum2\": \"<string>\",\n          \"consecteturc4e\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"labore eu occaecat aliqua\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"voluptateb6\": \"<string>\",\n          \"voluptate_3\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consectetur350\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": 78410979,\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Insufficient Storage (WebDAV) (RFC 4918)",
                            "code": 507,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ]
        },
        {
            "name": "Relationships",
            "description": "",
            "item": [
                {
                    "id": "bca46b0d-2bde-45a3-b5c2-540d46629e1e",
                    "name": "/services/reltio/api/:tenantId/relations",
                    "request": {
                        "name": "/services/reltio/api/:tenantId/relations",
                        "description": {
                            "content": "This API saves a collection of relations in the Reltio Platform according to the JSON object definition or to create just one relation using this API, specify one JSON object in the array. You can use the referenced <b>entityURI</b> or referenced entity crosswalk to describe the <b>startObject</b> and/or the <b>endObject</b>. <br>When a new relation is created with URIs for start and end objects, inconsistencies may appear if the relation is created with empty crosswalks inside the <b>startObject</b> and <b>endObject</b> sections. If the <b>connectRelationsToDefaultCrosswalk</b> property available in the physical configuration is enabled and then you create a relation, the <b>startObject</b> and <b>endObject</b> sections are filled with the default crosswalks automatically.</br> <br><b>Note:</b> A crosswalk with the source, which is equal to the value of the default crosswalk in the physical configuration (default value is <b>Reltio</b>), and <b>value=<entity_id></b> is considered as the default crosswalk.</br><br>If the <b>connectRelationsToDefaultCrosswalk</b> property is set to <b>true</b> when a relation is created with empty crosswalks for the start and end objects of the relation, the following rules are applied:<ul><li>If the start entity has a Reltio crosswalk with the same value as its ID, this crosswalk is used as the crosswalk for the start object in the relation. Else, a new Reltio crosswalk with the value equal to the entity ID is created. This new crosswalk is added to the winner contributor of the start entity and the start object of the relation is connected to this new Reltio crosswalk.</li><li>The behavior is the same for the end entity. If the end entity has a Reltio crosswalk with the same value as its ID, this crosswalk is used as the crosswalk for the end object in the relation. Else, a new Reltio crosswalk with the value equal to the entity ID is created. This new crosswalk is added to the winner contributor of the end entity and the end object of the relation is connected to this new Reltio crosswalk.</li></ul></br>",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "reltio",
                                "api",
                                ":tenantId",
                                "relations"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Specifies if the response should contain created relations. Default is true.",
                                        "type": "text/plain"
                                    },
                                    "key": "returnObjects",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                        "type": "text/plain"
                                    },
                                    "key": "options",
                                    "value": "updateAttributeUpdateDates,partialOverride"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ullamco_f4\": \"<string>\",\n          \"proident_be\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"dolor1e4\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"dolor63\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"sunt950\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"sinta98\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"esse_c\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"inb0\": \"<string>\",\n            \"idf9\": \"<string>\",\n            \"dolore_5d7\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequat_edf\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"quid0\": \"<string>\",\n          \"sit__15\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"officia_5\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"eu91\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"qui_9c\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"adipisicing4b\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"inb\": \"<string>\",\n            \"ea_c4\": \"<string>\",\n            \"magnac9c\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"velit734\": \"<string>\",\n            \"consequat_100\": \"<string>\",\n            \"cupidatat_9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"amet4f_\": \"<string>\",\n            \"sunt_31\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"ex5\": \"<string>\",\n            \"Lorem_4e3\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "044130bd-7afb-4a59-ac2c-f41bf4b62538",
                            "name": "Relationships are successfully saved",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "updateAttributeUpdateDates,partialOverride"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ullamco_f4\": \"<string>\",\n          \"proident_be\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"dolor1e4\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"dolor63\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"sunt950\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"sinta98\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"esse_c\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"inb0\": \"<string>\",\n            \"idf9\": \"<string>\",\n            \"dolore_5d7\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequat_edf\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"quid0\": \"<string>\",\n          \"sit__15\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"officia_5\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"eu91\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"qui_9c\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"adipisicing4b\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"inb\": \"<string>\",\n            \"ea_c4\": \"<string>\",\n            \"magnac9c\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"velit734\": \"<string>\",\n            \"consequat_100\": \"<string>\",\n            \"cupidatat_9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"amet4f_\": \"<string>\",\n            \"sunt_31\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"ex5\": \"<string>\",\n            \"Lorem_4e3\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"index\": \"<integer>\",\n    \"errors\": {\n      \"severity\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorDetailMessage\": \"<string>\",\n      \"innerErrorData\": {\n        \"exception\": \"<string>\"\n      }\n    },\n    \"object\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"dolorb\": \"<string>\",\n            \"reprehenderit_41\": \"<string>\",\n            \"anim_ae1\": \"<string>\",\n            \"incididunt_e0c\": \"<string>\",\n            \"in_50\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"Ut_f\": \"<string>\",\n            \"commodo21\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<long>\",\n      \"updatedTime\": \"<long>\",\n      \"startEntityTO\": {},\n      \"endEntityTO\": {},\n      \"attributes\": {},\n      \"uri\": \"<string>\",\n      \"type\": \"<string>\",\n      \"startRefPinned\": \"<boolean>\",\n      \"analyticsAttributes\": {\n        \"tempor_e\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"commodo_9\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"velit_3\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ]\n      },\n      \"endRefPinned\": \"<boolean>\",\n      \"endRefIgnored\": \"<boolean>\",\n      \"startRefIgnored\": \"<boolean>\",\n      \"refUpdatedBy\": \"<string>\",\n      \"refUpdatedTime\": \"<long>\",\n      \"refCommitTime\": \"<long>\",\n      \"startObject\": {\n        \"crosswalks\": [\n          {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"sourceTable\": \"<string>\",\n            \"url\": \"<string>\",\n            \"createDate\": \"<dateTime>\",\n            \"updateDate\": \"<dateTime>\",\n            \"reltioLoadDate\": \"<dateTime>\",\n            \"deleteDate\": \"<string>\",\n            \"crosswalkExternalInfo\": {\n              \"dtssInfo\": {\n                \"tenantId\": \"<string>\",\n                \"operationId\": \"<string>\",\n                \"matchReasons\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"updatedBy\": \"<string>\",\n                \"updatedTime\": \"<long>\",\n                \"status\": \"<string>\",\n                \"matchRuleUris\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              }\n            },\n            \"singleAttributeUpdateDates\": {\n              \"esse_ca\": \"<string>\"\n            },\n            \"attributes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dataProvider\": \"<boolean>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"sourceTable\": \"<string>\",\n            \"url\": \"<string>\",\n            \"createDate\": \"<dateTime>\",\n            \"updateDate\": \"<dateTime>\",\n            \"reltioLoadDate\": \"<dateTime>\",\n            \"deleteDate\": \"<string>\",\n            \"crosswalkExternalInfo\": {\n              \"dtssInfo\": {\n                \"tenantId\": \"<string>\",\n                \"operationId\": \"<string>\",\n                \"matchReasons\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"updatedBy\": \"<string>\",\n                \"updatedTime\": \"<long>\",\n                \"status\": \"<string>\",\n                \"matchRuleUris\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              }\n            },\n            \"singleAttributeUpdateDates\": {\n              \"sed_e\": \"<string>\"\n            },\n            \"attributes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dataProvider\": \"<boolean>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"directionalLabel\": \"<string>\",\n        \"label\": \"<string>\",\n        \"objectURI\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      \"endObject\": {\n        \"crosswalks\": [\n          {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"sourceTable\": \"<string>\",\n            \"url\": \"<string>\",\n            \"createDate\": \"<dateTime>\",\n            \"updateDate\": \"<dateTime>\",\n            \"reltioLoadDate\": \"<dateTime>\",\n            \"deleteDate\": \"<string>\",\n            \"crosswalkExternalInfo\": {\n              \"dtssInfo\": {\n                \"tenantId\": \"<string>\",\n                \"operationId\": \"<string>\",\n                \"matchReasons\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"updatedBy\": \"<string>\",\n                \"updatedTime\": \"<long>\",\n                \"status\": \"<string>\",\n                \"matchRuleUris\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              }\n            },\n            \"singleAttributeUpdateDates\": {\n              \"ut_a_2\": \"<string>\",\n              \"amet_064\": \"<string>\"\n            },\n            \"attributes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dataProvider\": \"<boolean>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"sourceTable\": \"<string>\",\n            \"url\": \"<string>\",\n            \"createDate\": \"<dateTime>\",\n            \"updateDate\": \"<dateTime>\",\n            \"reltioLoadDate\": \"<dateTime>\",\n            \"deleteDate\": \"<string>\",\n            \"crosswalkExternalInfo\": {\n              \"dtssInfo\": {\n                \"tenantId\": \"<string>\",\n                \"operationId\": \"<string>\",\n                \"matchReasons\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"updatedBy\": \"<string>\",\n                \"updatedTime\": \"<long>\",\n                \"status\": \"<string>\",\n                \"matchRuleUris\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              }\n            },\n            \"singleAttributeUpdateDates\": {\n              \"ut1\": \"<string>\"\n            },\n            \"attributes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dataProvider\": \"<boolean>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"directionalLabel\": \"<string>\",\n        \"label\": \"<string>\",\n        \"objectURI\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    \"successful\": \"<boolean>\"\n  },\n  {\n    \"index\": \"<integer>\",\n    \"errors\": {\n      \"severity\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorDetailMessage\": \"<string>\",\n      \"innerErrorData\": {\n        \"exception\": \"<string>\"\n      }\n    },\n    \"object\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"cillum98\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"magna_40\": \"<string>\",\n            \"cupidatat_6\": \"<string>\",\n            \"magna0\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<long>\",\n      \"updatedTime\": \"<long>\",\n      \"startEntityTO\": {},\n      \"endEntityTO\": {},\n      \"attributes\": {},\n      \"uri\": \"<string>\",\n      \"type\": \"<string>\",\n      \"startRefPinned\": \"<boolean>\",\n      \"analyticsAttributes\": {\n        \"ex_cc6\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ]\n      },\n      \"endRefPinned\": \"<boolean>\",\n      \"endRefIgnored\": \"<boolean>\",\n      \"startRefIgnored\": \"<boolean>\",\n      \"refUpdatedBy\": \"<string>\",\n      \"refUpdatedTime\": \"<long>\",\n      \"refCommitTime\": \"<long>\",\n      \"startObject\": {\n        \"crosswalks\": [\n          {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"sourceTable\": \"<string>\",\n            \"url\": \"<string>\",\n            \"createDate\": \"<dateTime>\",\n            \"updateDate\": \"<dateTime>\",\n            \"reltioLoadDate\": \"<dateTime>\",\n            \"deleteDate\": \"<string>\",\n            \"crosswalkExternalInfo\": {\n              \"dtssInfo\": {\n                \"tenantId\": \"<string>\",\n                \"operationId\": \"<string>\",\n                \"matchReasons\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"updatedBy\": \"<string>\",\n                \"updatedTime\": \"<long>\",\n                \"status\": \"<string>\",\n                \"matchRuleUris\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              }\n            },\n            \"singleAttributeUpdateDates\": {\n              \"ipsum_45d\": \"<string>\",\n              \"est7\": \"<string>\",\n              \"nisif\": \"<string>\"\n            },\n            \"attributes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dataProvider\": \"<boolean>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"sourceTable\": \"<string>\",\n            \"url\": \"<string>\",\n            \"createDate\": \"<dateTime>\",\n            \"updateDate\": \"<dateTime>\",\n            \"reltioLoadDate\": \"<dateTime>\",\n            \"deleteDate\": \"<string>\",\n            \"crosswalkExternalInfo\": {\n              \"dtssInfo\": {\n                \"tenantId\": \"<string>\",\n                \"operationId\": \"<string>\",\n                \"matchReasons\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"updatedBy\": \"<string>\",\n                \"updatedTime\": \"<long>\",\n                \"status\": \"<string>\",\n                \"matchRuleUris\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              }\n            },\n            \"singleAttributeUpdateDates\": {\n              \"sint_f\": \"<string>\"\n            },\n            \"attributes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dataProvider\": \"<boolean>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"directionalLabel\": \"<string>\",\n        \"label\": \"<string>\",\n        \"objectURI\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      \"endObject\": {\n        \"crosswalks\": [\n          {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"sourceTable\": \"<string>\",\n            \"url\": \"<string>\",\n            \"createDate\": \"<dateTime>\",\n            \"updateDate\": \"<dateTime>\",\n            \"reltioLoadDate\": \"<dateTime>\",\n            \"deleteDate\": \"<string>\",\n            \"crosswalkExternalInfo\": {\n              \"dtssInfo\": {\n                \"tenantId\": \"<string>\",\n                \"operationId\": \"<string>\",\n                \"matchReasons\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"updatedBy\": \"<string>\",\n                \"updatedTime\": \"<long>\",\n                \"status\": \"<string>\",\n                \"matchRuleUris\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              }\n            },\n            \"singleAttributeUpdateDates\": {\n              \"Lorem_2\": \"<string>\",\n              \"in_255\": \"<string>\"\n            },\n            \"attributes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dataProvider\": \"<boolean>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"sourceTable\": \"<string>\",\n            \"url\": \"<string>\",\n            \"createDate\": \"<dateTime>\",\n            \"updateDate\": \"<dateTime>\",\n            \"reltioLoadDate\": \"<dateTime>\",\n            \"deleteDate\": \"<string>\",\n            \"crosswalkExternalInfo\": {\n              \"dtssInfo\": {\n                \"tenantId\": \"<string>\",\n                \"operationId\": \"<string>\",\n                \"matchReasons\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"updatedBy\": \"<string>\",\n                \"updatedTime\": \"<long>\",\n                \"status\": \"<string>\",\n                \"matchRuleUris\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              }\n            },\n            \"singleAttributeUpdateDates\": {\n              \"fugiat426\": \"<string>\",\n              \"elit_b\": \"<string>\"\n            },\n            \"attributes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dataProvider\": \"<boolean>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"directionalLabel\": \"<string>\",\n        \"label\": \"<string>\",\n        \"objectURI\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    \"successful\": \"<boolean>\"\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "382e135a-053f-4f44-9b53-d7e5c7fb7937",
                            "name": "Relationships aren't saved due to a reason provided in the error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "updateAttributeUpdateDates,partialOverride"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ullamco_f4\": \"<string>\",\n          \"proident_be\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"dolor1e4\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"dolor63\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"sunt950\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"sinta98\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"esse_c\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"inb0\": \"<string>\",\n            \"idf9\": \"<string>\",\n            \"dolore_5d7\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequat_edf\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"quid0\": \"<string>\",\n          \"sit__15\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"officia_5\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"eu91\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"qui_9c\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"adipisicing4b\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"inb\": \"<string>\",\n            \"ea_c4\": \"<string>\",\n            \"magnac9c\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"velit734\": \"<string>\",\n            \"consequat_100\": \"<string>\",\n            \"cupidatat_9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"amet4f_\": \"<string>\",\n            \"sunt_31\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"ex5\": \"<string>\",\n            \"Lorem_4e3\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "570475e1-86e8-456e-886a-f957c90c2103",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "updateAttributeUpdateDates,partialOverride"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ullamco_f4\": \"<string>\",\n          \"proident_be\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"dolor1e4\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"dolor63\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"sunt950\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"sinta98\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"esse_c\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"inb0\": \"<string>\",\n            \"idf9\": \"<string>\",\n            \"dolore_5d7\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequat_edf\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"quid0\": \"<string>\",\n          \"sit__15\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"officia_5\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"eu91\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"qui_9c\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"adipisicing4b\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"inb\": \"<string>\",\n            \"ea_c4\": \"<string>\",\n            \"magnac9c\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"velit734\": \"<string>\",\n            \"consequat_100\": \"<string>\",\n            \"cupidatat_9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"amet4f_\": \"<string>\",\n            \"sunt_31\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"ex5\": \"<string>\",\n            \"Lorem_4e3\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c48005fd-eb43-417a-99d8-1e21a8fa4f28",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "updateAttributeUpdateDates,partialOverride"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ullamco_f4\": \"<string>\",\n          \"proident_be\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"dolor1e4\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"dolor63\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"sunt950\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"sinta98\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"esse_c\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"inb0\": \"<string>\",\n            \"idf9\": \"<string>\",\n            \"dolore_5d7\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequat_edf\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"quid0\": \"<string>\",\n          \"sit__15\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"officia_5\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"eu91\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"qui_9c\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"adipisicing4b\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"inb\": \"<string>\",\n            \"ea_c4\": \"<string>\",\n            \"magnac9c\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"velit734\": \"<string>\",\n            \"consequat_100\": \"<string>\",\n            \"cupidatat_9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"amet4f_\": \"<string>\",\n            \"sunt_31\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"ex5\": \"<string>\",\n            \"Lorem_4e3\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4c12d0d7-3328-46ab-990f-a4329871e556",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "updateAttributeUpdateDates,partialOverride"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ullamco_f4\": \"<string>\",\n          \"proident_be\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"dolor1e4\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"dolor63\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"sunt950\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"sinta98\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"esse_c\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"inb0\": \"<string>\",\n            \"idf9\": \"<string>\",\n            \"dolore_5d7\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequat_edf\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"quid0\": \"<string>\",\n          \"sit__15\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"officia_5\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"eu91\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"qui_9c\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"adipisicing4b\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"inb\": \"<string>\",\n            \"ea_c4\": \"<string>\",\n            \"magnac9c\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"velit734\": \"<string>\",\n            \"consequat_100\": \"<string>\",\n            \"cupidatat_9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"amet4f_\": \"<string>\",\n            \"sunt_31\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"ex5\": \"<string>\",\n            \"Lorem_4e3\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "906defc8-d342-486b-a906-47aa914ad33c",
                            "name": "Too many requests, please try later",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "updateAttributeUpdateDates,partialOverride"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ullamco_f4\": \"<string>\",\n          \"proident_be\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"dolor1e4\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"dolor63\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"sunt950\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"sinta98\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"esse_c\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"inb0\": \"<string>\",\n            \"idf9\": \"<string>\",\n            \"dolore_5d7\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequat_edf\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"quid0\": \"<string>\",\n          \"sit__15\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"officia_5\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"eu91\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"qui_9c\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"adipisicing4b\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"inb\": \"<string>\",\n            \"ea_c4\": \"<string>\",\n            \"magnac9c\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"velit734\": \"<string>\",\n            \"consequat_100\": \"<string>\",\n            \"cupidatat_9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"amet4f_\": \"<string>\",\n            \"sunt_31\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"ex5\": \"<string>\",\n            \"Lorem_4e3\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Too Many Requests",
                            "code": 429,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "0af881eb-1d6e-4d75-bd90-09ed2cc4afe2",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "updateAttributeUpdateDates,partialOverride"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ullamco_f4\": \"<string>\",\n          \"proident_be\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"dolor1e4\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"dolor63\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"sunt950\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"sinta98\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"esse_c\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"inb0\": \"<string>\",\n            \"idf9\": \"<string>\",\n            \"dolore_5d7\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequat_edf\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"quid0\": \"<string>\",\n          \"sit__15\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"officia_5\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"eu91\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"qui_9c\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"adipisicing4b\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"inb\": \"<string>\",\n            \"ea_c4\": \"<string>\",\n            \"magnac9c\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"velit734\": \"<string>\",\n            \"consequat_100\": \"<string>\",\n            \"cupidatat_9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"amet4f_\": \"<string>\",\n            \"sunt_31\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"ex5\": \"<string>\",\n            \"Lorem_4e3\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "754197f8-e4e1-4183-95b5-55ea126aaabc",
                            "name": "This status code could represent 2 possible scenarios. First, the 'Service Unavailable' scenario. Second, this status code is used when too many requests are being sent in-parallel and API backpressure mechanism was used to protect the platform. In both scenarios, an exponential backoff mechanism should be used to control the rate of requests sent to the server. ",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "updateAttributeUpdateDates,partialOverride"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ullamco_f4\": \"<string>\",\n          \"proident_be\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"dolor1e4\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"dolor63\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"sunt950\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"sinta98\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"esse_c\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"inb0\": \"<string>\",\n            \"idf9\": \"<string>\",\n            \"dolore_5d7\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequat_edf\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"quid0\": \"<string>\",\n          \"sit__15\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"officia_5\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"eu91\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"qui_9c\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"adipisicing4b\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"inb\": \"<string>\",\n            \"ea_c4\": \"<string>\",\n            \"magnac9c\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"velit734\": \"<string>\",\n            \"consequat_100\": \"<string>\",\n            \"cupidatat_9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"amet4f_\": \"<string>\",\n            \"sunt_31\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"ex5\": \"<string>\",\n            \"Lorem_4e3\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a23dcee8-6a3d-4fa3-9fa6-08b9ddf5c263",
                            "name": "The request consumes more resources than it is allowed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "updateAttributeUpdateDates,partialOverride"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"ullamco_f4\": \"<string>\",\n          \"proident_be\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"dolor1e4\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"dolor63\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"sunt950\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"sinta98\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"esse_c\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"inb0\": \"<string>\",\n            \"idf9\": \"<string>\",\n            \"dolore_5d7\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"consequat_edf\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"quid0\": \"<string>\",\n          \"sit__15\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"officia_5\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"eu91\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"qui_9c\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"adipisicing4b\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"inb\": \"<string>\",\n            \"ea_c4\": \"<string>\",\n            \"magnac9c\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"velit734\": \"<string>\",\n            \"consequat_100\": \"<string>\",\n            \"cupidatat_9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"amet4f_\": \"<string>\",\n            \"sunt_31\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"ex5\": \"<string>\",\n            \"Lorem_4e3\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Insufficient Storage (WebDAV) (RFC 4918)",
                            "code": 507,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ]
        },
        {
            "name": "Data Load Job",
            "description": "",
            "item": [
                {
                    "id": "3a788ee9-a7da-41f6-b6c5-8d0fa465bcc3",
                    "name": "/services/dataloader/api/:tenantId/_mapping",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/_mapping",
                        "description": {
                            "content": "Creates a new mapping for an object type. For creating the mapping, you must provide details for 'object type', 'summary', 'name', and 'object type URI'",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "_mapping"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"mappingForObjectType\": \"RELATIONS\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "c0ed8526-572a-4fb1-a739-5afa57a165fd",
                            "name": "Mapping is created successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"RELATIONS\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"mappingForObjectType\": \"RELATIONS\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1fafa0b9-dc72-4b6e-977c-ecd3c6ca8d5b",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"RELATIONS\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4148f887-c676-4922-8a76-b94bc193fb65",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"RELATIONS\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8ea15723-2cc6-4fd4-85bf-08f66176c42b",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"RELATIONS\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5aad59d7-7aeb-4a10-8c67-1ccdf39aa4d4",
                            "name": "The resource requested was not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"RELATIONS\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "06d785d9-f925-418f-9dc4-11777ed91511",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"RELATIONS\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "f6d18b35-fb49-48a8-b49a-fbe0b1af4ada",
                    "name": "/services/dataloader/api/:tenantId/_mapping/:mappingId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/_mapping/:mappingId",
                        "description": {
                            "content": "Retrieves the existing mapping details using an ID",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "_mapping",
                                ":mappingId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "If true, API response includes the job definition IDs associated with the mapping",
                                        "type": "text/plain"
                                    },
                                    "key": "includeProjects",
                                    "value": "<boolean>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "mappingId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Defines the ID of the mapping for which details are to be retrieved",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "8e8227f6-ff6b-41aa-8a43-c5ac0cf6ebb4",
                            "name": "The details for mapping are retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If true, API response includes the job definition IDs associated with the mapping",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"mappingForObjectType\": \"RELATIONS\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a82433ed-69ce-400e-b803-64849793ab8a",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If true, API response includes the job definition IDs associated with the mapping",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5116feaa-74bc-4b9f-b1c1-ddfe4ada7d64",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If true, API response includes the job definition IDs associated with the mapping",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "da7ad93e-9704-4e3c-8ad3-45e4b3017fcb",
                            "name": "Check your privileges to do this operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If true, API response includes the job definition IDs associated with the mapping",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "414d5d16-d9eb-472c-a184-125d29914958",
                            "name": "Resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If true, API response includes the job definition IDs associated with the mapping",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9f0fc2ee-b151-4e0a-8576-92e6604c7c8f",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If true, API response includes the job definition IDs associated with the mapping",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "ea193fef-e12d-462c-9b02-d3cffda9d5b6",
                    "name": "/services/dataloader/api/:tenantId/_mapping/:mappingId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/_mapping/:mappingId",
                        "description": {
                            "content": "Updates an existing mapping. You can add new values for a field or modify the existing values. Before saving the updates, the mapping details are validated based on the business rules",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "_mapping",
                                ":mappingId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "mappingId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the mapping for which the details are to be updated",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"mappingForObjectType\": \"RELATIONS\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "1871c6b3-3bf5-4727-83e1-df13400a2711",
                            "name": "Mapping is updated successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"RELATIONS\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"mappingForObjectType\": \"RELATIONS\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0a2e4df5-42ec-4bdb-b0ac-d2fc9127c73f",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"RELATIONS\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "cb05dc63-8227-4774-a709-d2483a037e7f",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"RELATIONS\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6d238df2-7599-4419-88b4-fa7e491e85e1",
                            "name": "Check your privileges to do this operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"RELATIONS\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "84a5d4cc-baea-450d-9e50-1780ffebe3b2",
                            "name": "Resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"RELATIONS\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e6596b6d-fd31-453c-a220-b9643b593846",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"RELATIONS\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "92e83144-673f-4287-b5e5-ddcbb48ac0c5",
                    "name": "/services/dataloader/api/:tenantId/_mapping/:mappingId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/_mapping/:mappingId",
                        "description": {
                            "content": "Deletes an existing mapping if all the business rules are met. The mapping cannot be deleted if it is being used by any job definition",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "_mapping",
                                ":mappingId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "mappingId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the mapping that must be deleted",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "a678eb6b-43bc-4e31-8287-2615d082e95c",
                            "name": "Mapping is deleted successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "92e8f9e8-7376-4bf7-99ad-a23f87d3018c",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b4def216-3f7f-4437-ad76-da1e8a842a48",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "36bdcb0e-3ef1-452a-bb29-5c0156d2ecf6",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4fa00ac4-4990-4553-97b5-1dac077f76a7",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "841e5a7e-5be0-447c-adb5-a37c7b7c6365",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "dbfa7557-691c-4c1e-bd6b-51f35c79fbcc",
                            "name": "Service Unavailable",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "c80750ba-753b-46a4-9df0-61ec0e2db933",
                    "name": "/services/dataloader/api/:tenantId/_mappings",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/_mappings",
                        "description": {
                            "content": "Retrieve the details of all mappings for a tenant matching the filter criteria",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "_mappings"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Object type URL for which mappings must be retrieved",
                                        "type": "text/plain"
                                    },
                                    "key": "entityType",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Specify the user name that must be included in the 'equals' and 'not equals' operations while retrieving the mapping details.<br> <b>For example</b>: <li>'createdBy=username@reltio.com' - returns the list of mappings created by the specified user for the tenant</li> <li>'createdBy=username@reltio.com:notequals' - returns the list of mappings which are not created by the specified user for the tenant</li>",
                                        "type": "text/plain"
                                    },
                                    "key": "createdBy",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Long value of date. API returns all the mappings created on or after the specified date",
                                        "type": "text/plain"
                                    },
                                    "key": "creationDate",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                        "type": "text/plain"
                                    },
                                    "key": "page",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Number of objects that need to be returned with a paged response",
                                        "type": "text/plain"
                                    },
                                    "key": "size",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the mappings in the ascending order of Tenant ID, 'sort=tenantId:desc' - sorts the mapping in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,objectTypeUri' - sorts the API response in the descending order of Tenant ID and 'objectTypeUris' are used for second order sorting",
                                        "type": "text/plain"
                                    },
                                    "key": "sort",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "If 'true', API response includes the job definitions IDs",
                                        "type": "text/plain"
                                    },
                                    "key": "includeProjects",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "47c7d319-0290-44a9-81fb-7d16fe732431",
                            "name": "Mapping details matching criteria are retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mappings"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Object type URL for which mappings must be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "entityType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specify the user name that must be included in the 'equals' and 'not equals' operations while retrieving the mapping details.<br> <b>For example</b>: <li>'createdBy=username@reltio.com' - returns the list of mappings created by the specified user for the tenant</li> <li>'createdBy=username@reltio.com:notequals' - returns the list of mappings which are not created by the specified user for the tenant</li>",
                                                "type": "text/plain"
                                            },
                                            "key": "createdBy",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Long value of date. API returns all the mappings created on or after the specified date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the mappings in the ascending order of Tenant ID, 'sort=tenantId:desc' - sorts the mapping in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,objectTypeUri' - sorts the API response in the descending order of Tenant ID and 'objectTypeUris' are used for second order sorting",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'true', API response includes the job definitions IDs",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4fe6a714-69e3-4a1c-b9fa-e71b7f0895f1",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mappings"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Object type URL for which mappings must be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "entityType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specify the user name that must be included in the 'equals' and 'not equals' operations while retrieving the mapping details.<br> <b>For example</b>: <li>'createdBy=username@reltio.com' - returns the list of mappings created by the specified user for the tenant</li> <li>'createdBy=username@reltio.com:notequals' - returns the list of mappings which are not created by the specified user for the tenant</li>",
                                                "type": "text/plain"
                                            },
                                            "key": "createdBy",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Long value of date. API returns all the mappings created on or after the specified date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the mappings in the ascending order of Tenant ID, 'sort=tenantId:desc' - sorts the mapping in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,objectTypeUri' - sorts the API response in the descending order of Tenant ID and 'objectTypeUris' are used for second order sorting",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'true', API response includes the job definitions IDs",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "096fef97-140c-4f59-9085-705e2e4c8803",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mappings"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Object type URL for which mappings must be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "entityType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specify the user name that must be included in the 'equals' and 'not equals' operations while retrieving the mapping details.<br> <b>For example</b>: <li>'createdBy=username@reltio.com' - returns the list of mappings created by the specified user for the tenant</li> <li>'createdBy=username@reltio.com:notequals' - returns the list of mappings which are not created by the specified user for the tenant</li>",
                                                "type": "text/plain"
                                            },
                                            "key": "createdBy",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Long value of date. API returns all the mappings created on or after the specified date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the mappings in the ascending order of Tenant ID, 'sort=tenantId:desc' - sorts the mapping in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,objectTypeUri' - sorts the API response in the descending order of Tenant ID and 'objectTypeUris' are used for second order sorting",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'true', API response includes the job definitions IDs",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d055f0c8-efb9-46bf-a99f-1765516fd9a6",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mappings"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Object type URL for which mappings must be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "entityType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specify the user name that must be included in the 'equals' and 'not equals' operations while retrieving the mapping details.<br> <b>For example</b>: <li>'createdBy=username@reltio.com' - returns the list of mappings created by the specified user for the tenant</li> <li>'createdBy=username@reltio.com:notequals' - returns the list of mappings which are not created by the specified user for the tenant</li>",
                                                "type": "text/plain"
                                            },
                                            "key": "createdBy",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Long value of date. API returns all the mappings created on or after the specified date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the mappings in the ascending order of Tenant ID, 'sort=tenantId:desc' - sorts the mapping in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,objectTypeUri' - sorts the API response in the descending order of Tenant ID and 'objectTypeUris' are used for second order sorting",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'true', API response includes the job definitions IDs",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9556b7bb-945f-4fa1-8447-cfb72f284c14",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mappings"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Object type URL for which mappings must be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "entityType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specify the user name that must be included in the 'equals' and 'not equals' operations while retrieving the mapping details.<br> <b>For example</b>: <li>'createdBy=username@reltio.com' - returns the list of mappings created by the specified user for the tenant</li> <li>'createdBy=username@reltio.com:notequals' - returns the list of mappings which are not created by the specified user for the tenant</li>",
                                                "type": "text/plain"
                                            },
                                            "key": "createdBy",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Long value of date. API returns all the mappings created on or after the specified date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the mappings in the ascending order of Tenant ID, 'sort=tenantId:desc' - sorts the mapping in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,objectTypeUri' - sorts the API response in the descending order of Tenant ID and 'objectTypeUris' are used for second order sorting",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'true', API response includes the job definitions IDs",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f2624d65-5365-44ae-adea-931aea40a8fa",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mappings"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Object type URL for which mappings must be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "entityType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specify the user name that must be included in the 'equals' and 'not equals' operations while retrieving the mapping details.<br> <b>For example</b>: <li>'createdBy=username@reltio.com' - returns the list of mappings created by the specified user for the tenant</li> <li>'createdBy=username@reltio.com:notequals' - returns the list of mappings which are not created by the specified user for the tenant</li>",
                                                "type": "text/plain"
                                            },
                                            "key": "createdBy",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Long value of date. API returns all the mappings created on or after the specified date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the mappings in the ascending order of Tenant ID, 'sort=tenantId:desc' - sorts the mapping in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,objectTypeUri' - sorts the API response in the descending order of Tenant ID and 'objectTypeUris' are used for second order sorting",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'true', API response includes the job definitions IDs",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "476afefc-41de-47c6-9b2c-a636a910e76e",
                    "name": "/services/dataloader/api/:tenantId/configuration/_limits",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/configuration/_limits",
                        "description": {
                            "content": "Retrieves all the existing limits for a tenant matching the filter criteria",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "configuration",
                                "_limits"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Name of the environment used to filter and get limits. ",
                                        "type": "text/plain"
                                    },
                                    "key": "environment",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                        "type": "text/plain"
                                    },
                                    "key": "page",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Number of objects that need to be returned with a paged response",
                                        "type": "text/plain"
                                    },
                                    "key": "size",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the source details in the ascending order of tenantId, 'sort=tenantId:desc' - sorts the source details in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,environment:desc' - sorts the API response in the descending order of tenantId and 'environment'",
                                        "type": "text/plain"
                                    },
                                    "key": "sort",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "98a2e1ad-610d-4fd3-9520-0b1971835598",
                            "name": "All existing limits are retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the environment used to filter and get limits. ",
                                                "type": "text/plain"
                                            },
                                            "key": "environment",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the source details in the ascending order of tenantId, 'sort=tenantId:desc' - sorts the source details in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,environment:desc' - sorts the API response in the descending order of tenantId and 'environment'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"environment\": \"<string>\",\n    \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n    \"limitType\": \"BOOLEAN\",\n    \"value\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<integer>\",\n    \"tenantId\": \"<string>\"\n  },\n  {\n    \"environment\": \"<string>\",\n    \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n    \"limitType\": \"STRING\",\n    \"value\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<integer>\",\n    \"tenantId\": \"<string>\"\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2bc7c1b7-0d03-4004-bff1-fd39e9895cf6",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the environment used to filter and get limits. ",
                                                "type": "text/plain"
                                            },
                                            "key": "environment",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the source details in the ascending order of tenantId, 'sort=tenantId:desc' - sorts the source details in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,environment:desc' - sorts the API response in the descending order of tenantId and 'environment'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b8b34089-8a19-4c2e-ad9e-4ce52d7a3023",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the environment used to filter and get limits. ",
                                                "type": "text/plain"
                                            },
                                            "key": "environment",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the source details in the ascending order of tenantId, 'sort=tenantId:desc' - sorts the source details in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,environment:desc' - sorts the API response in the descending order of tenantId and 'environment'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "66d48768-50bb-409f-941d-f9e58718f50c",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the environment used to filter and get limits. ",
                                                "type": "text/plain"
                                            },
                                            "key": "environment",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the source details in the ascending order of tenantId, 'sort=tenantId:desc' - sorts the source details in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,environment:desc' - sorts the API response in the descending order of tenantId and 'environment'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9eca43c1-6443-433c-9775-7576819b87e8",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the environment used to filter and get limits. ",
                                                "type": "text/plain"
                                            },
                                            "key": "environment",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the source details in the ascending order of tenantId, 'sort=tenantId:desc' - sorts the source details in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,environment:desc' - sorts the API response in the descending order of tenantId and 'environment'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e056fbda-b770-46a6-8cba-bbeb76700ba5",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the environment used to filter and get limits. ",
                                                "type": "text/plain"
                                            },
                                            "key": "environment",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the source details in the ascending order of tenantId, 'sort=tenantId:desc' - sorts the source details in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,environment:desc' - sorts the API response in the descending order of tenantId and 'environment'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "1aa0ed92-3a97-454d-87ba-e1acbd5cc40f",
                    "name": "/services/dataloader/api/:tenantId/configuration/_limits",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/configuration/_limits",
                        "description": {
                            "content": "Creates limits. While creating limits, you must provide the limit name, value, and datatype",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "configuration",
                                "_limits"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "cf899398-a73b-4776-bef9-a8d8d5b3ec9e",
                            "name": "Resource is created successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5ff2065b-f4ca-4df5-afcc-b82aa7b28e59",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2e1c682b-c83d-4334-a78e-70cb4b626646",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0cf37bc0-da09-46ea-a91b-7e079b4a6d86",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d04827a7-6de4-43f1-9f47-2ab6593c3765",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e41269d4-7933-4b3b-b052-95ccf802f08e",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "ede836cd-5b30-41bb-be19-504e24dcdffd",
                    "name": "/services/dataloader/api/:tenantId/configuration/_limits/:id",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/configuration/_limits/:id",
                        "description": {
                            "content": "Retrieves the details of a limit",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "configuration",
                                "_limits",
                                ":id"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "id",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the existing limit for which the details must be retrieved",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "247809ba-52fc-4435-b117-bffce68e6fd6",
                            "name": "Limit retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "057aade1-9701-4442-80cd-79a9df01100a",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "54a2e7cb-0168-495a-94aa-70e7f0181100",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1a3073bf-f9ab-4515-8eea-5b853135a229",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "90ec1e5c-2543-4be4-acc2-4f08eb1c61b0",
                            "name": "Resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "78afeaa0-e707-449b-8dfc-ed4a15270d76",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "c11c8167-2384-42fd-95fe-bb77e40a82a0",
                    "name": "/services/dataloader/api/:tenantId/configuration/_limits/:id",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/configuration/_limits/:id",
                        "description": {
                            "content": "Updates the existing limit. The updated limits are used while creating the new job",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "configuration",
                                "_limits",
                                ":id"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "id",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the existing limit for which the details must be updated",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "02d16643-99fe-410e-95f7-aa22f8108da3",
                            "name": "Limit updated successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9c60d7d2-3587-4bc0-abfb-444ba46cd001",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "15ffce21-e8ae-4a96-a469-e62454638203",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "520912ad-3b69-4c7f-8b82-a17deda1d57a",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "84510e98-c79f-4ad1-a687-c984876903b4",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5043aa4a-625e-49b9-ac5d-e800ab5b9e42",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "e341b013-4ffd-4882-9c14-d2850eccf98f",
                    "name": "/services/dataloader/api/:tenantId/configuration/_limits/:id",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/configuration/_limits/:id",
                        "description": {
                            "content": "Delete an existing limit using the ID",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "configuration",
                                "_limits",
                                ":id"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "id",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the existing limit for which the details must be deleted",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "afe3ca8e-c30b-43a9-9894-aa9c7c7f74fc",
                            "name": "Limit deleted successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "e93e67ce-7097-40c5-aa9d-69c65e059f4e",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c6696f8f-42c6-4fba-9082-2902ad93cd55",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b243d162-d732-45ef-8fb2-50969b17143c",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "38b39f25-471e-4e90-9339-9204ad53ce22",
                            "name": "Resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "882f83f5-7524-49e4-8042-e55e6341a757",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "c5104f00-2e06-4a7e-91e3-4bf68bc28b06",
                    "name": "/services/dataloader/api/:tenantId/project",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project",
                        "description": {
                            "content": "Creates a new job definition by using existing mapping and storage details",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"GCP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "971e0fd3-0056-4ece-a89c-a7c66311d21a",
                            "name": "Job definition is created successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"GCP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"GCP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6483bf87-0c90-4d9a-ab63-6b2bebc4eb39",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"GCP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "cab1ebc8-36d2-416d-ab97-4ace6afe6197",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"GCP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5356df16-0076-402a-b8f8-9adb657e0b96",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"GCP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "bc50a9a1-3d77-4881-9ad8-26291ae5195b",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"GCP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "01e9795a-59e3-41ce-b766-92fdd726fa0c",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"GCP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "e396a852-b70c-47fa-b625-e211019ff925",
                    "name": "/services/dataloader/api/:tenantId/project/data/source",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/data/source",
                        "description": {
                            "content": "Retrieves existing source details for a tenant matching the filter criteria",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "data",
                                "source"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                        "type": "text/plain"
                                    },
                                    "key": "page",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Number of objects that need to be returned with a paged response",
                                        "type": "text/plain"
                                    },
                                    "key": "size",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=sourcePath' - sorts the source details in the ascending order of sourcePath, 'sort=sourcePath:desc' - sorts the source details in the descending order of sourcePath <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=sourcePath:desc,bucketName' - sorts the API response in the descending order of sourcePath and 'bucketName'",
                                        "type": "text/plain"
                                    },
                                    "key": "sort",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "db865100-8dac-4821-bb67-fc8a55fbf119",
                            "name": "Source details are returned successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=sourcePath' - sorts the source details in the ascending order of sourcePath, 'sort=sourcePath:desc' - sorts the source details in the descending order of sourcePath <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=sourcePath:desc,bucketName' - sorts the API response in the descending order of sourcePath and 'bucketName'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"GCP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"GCP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a7e65246-4a40-4c0c-b111-458372ae2688",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=sourcePath' - sorts the source details in the ascending order of sourcePath, 'sort=sourcePath:desc' - sorts the source details in the descending order of sourcePath <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=sourcePath:desc,bucketName' - sorts the API response in the descending order of sourcePath and 'bucketName'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "445b6d57-b38f-409d-a592-4df84d9e72e3",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=sourcePath' - sorts the source details in the ascending order of sourcePath, 'sort=sourcePath:desc' - sorts the source details in the descending order of sourcePath <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=sourcePath:desc,bucketName' - sorts the API response in the descending order of sourcePath and 'bucketName'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c937fc5c-e1e6-4e6b-9371-2dfd00029bf4",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=sourcePath' - sorts the source details in the ascending order of sourcePath, 'sort=sourcePath:desc' - sorts the source details in the descending order of sourcePath <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=sourcePath:desc,bucketName' - sorts the API response in the descending order of sourcePath and 'bucketName'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f0c6fb6a-48f3-4261-aa2c-38bed3c20f79",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=sourcePath' - sorts the source details in the ascending order of sourcePath, 'sort=sourcePath:desc' - sorts the source details in the descending order of sourcePath <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=sourcePath:desc,bucketName' - sorts the API response in the descending order of sourcePath and 'bucketName'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a311c867-f3af-4195-839a-d07b722fa06b",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=sourcePath' - sorts the source details in the ascending order of sourcePath, 'sort=sourcePath:desc' - sorts the source details in the descending order of sourcePath <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=sourcePath:desc,bucketName' - sorts the API response in the descending order of sourcePath and 'bucketName'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "b0a72eb8-7c24-45cd-b3d5-e76bfe3898fa",
                    "name": "/services/dataloader/api/:tenantId/project/data/source",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/data/source",
                        "description": {
                            "content": "Checks whether a valid file exists for the provided source information before creating a new source. While creating a source, you must provide all the mandatory information",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "data",
                                "source"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "871f53ba-4f18-4a2e-a0ee-7cc5011554b7",
                            "name": "Source details are created successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b9f1bfa8-951b-4e33-b72d-c0eae704126f",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f4055ae2-158f-4f6b-9c7b-73add256f9c6",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f2328e33-5061-4ab3-b483-560df21462d4",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1c174a1b-0e23-452a-830b-3f2d4f2078c0",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "bf2f927a-c630-4230-9e0f-6b9c65b75946",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "624232c0-dc04-4f6e-94ba-f954229aae86",
                    "name": "/services/dataloader/api/:tenantId/project/data/source/:sourceId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/data/source/:sourceId",
                        "description": {
                            "content": "Retrieves the existing source details using the ID",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "data",
                                "source",
                                ":sourceId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "sourceId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Source ID for which the details must be retrieved",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "9e3028d1-97a6-41ba-a5e5-19112267aa60",
                            "name": "Returns the existing source details",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7b387a79-1a03-4b16-a597-dc3eda89791e",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "06247445-4cf7-4f43-b337-ccc0b83ac725",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1581d91d-65a9-411f-b924-e8478f02cd98",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f8fa50c2-9b62-4c00-9e75-8f74531262d3",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e75df330-a560-4078-acc9-0a496d4afd59",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "276196b1-f882-4836-9e61-d2a63bfb7a98",
                    "name": "/services/dataloader/api/:tenantId/project/data/source/:sourceId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/data/source/:sourceId",
                        "description": {
                            "content": "Updates the existing source with the details added from the request",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "data",
                                "source",
                                ":sourceId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "sourceId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Source ID for which the details must be updated",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "714857c9-d08e-415f-85ea-116563142592",
                            "name": "Storage details are updated successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e71cc865-ee50-4ea1-8093-a4a9765e0342",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "40c17973-e94f-403b-9168-ac2acebe8f4b",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "fc235c28-b378-4d5b-b39a-2dc3b22ea4f0",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6f22f70a-c08a-4232-b9fe-32afe52d8f63",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b50bef3f-5136-4242-8c0c-fb592c481bc1",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "706e9b4b-82c7-4231-a200-3cd0fadcf09f",
                    "name": "/services/dataloader/api/:tenantId/project/data/source/:sourceId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/data/source/:sourceId",
                        "description": {
                            "content": "Deletes the source details using the specified ID if it is not already used by any job definitions",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "data",
                                "source",
                                ":sourceId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "sourceId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Source ID for which the source details must be deleted",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "ea186d06-9586-441f-9134-48a484bd4083",
                            "name": "Returns the existing source details",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "52f1ea61-7c2c-43dc-bade-5d005abfef99",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "630cb893-92bf-485c-b32b-91eda3b1b302",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4d9882ad-42d5-4968-9fce-ce8ffb790b93",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "17f5ed04-8ae8-4bbe-830f-d7f8cb27411e",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2b87dd16-3e0c-46dc-9ac2-cbec9ea788f5",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "8b458909-6ab6-4539-8851-d745a20f9464",
                    "name": "/services/dataloader/api/:tenantId/project/job/:jobId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/job/:jobId",
                        "description": {
                            "content": "Retrieve the existing job detail using the ID",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "job",
                                ":jobId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "jobId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job ID to retrieve",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "d7536819-ef0a-4da5-875f-799ada283d99",
                            "name": "Job retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"CANCELLING_PLATFORM_TASK\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "46004446-6c8a-436c-aa0f-f0201b4d4e55",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "de36239d-ea46-4bc9-84d9-49dfa5472de8",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "598f3df8-a006-4bc5-8074-de1a9396076e",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "22a3e7de-88ce-49d2-8fc7-ffa2aa6942a9",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6ad9770f-33f0-4b2c-9c4c-2ffc35c46389",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "721a6cfc-1f9c-4037-be26-9556c706b95d",
                    "name": "/services/dataloader/api/:tenantId/project/job/:jobId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/job/:jobId",
                        "description": {
                            "content": "Updates the existing job by merging the existing details with the updated information in the request body",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "job",
                                ":jobId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "jobId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job ID to update",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"CANCELLING_PLATFORM_TASK\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "c0a97106-0215-4e38-bbf4-6d7824a70aaa",
                            "name": "Job updated successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"CANCELLING_PLATFORM_TASK\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"CANCELLING_PLATFORM_TASK\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "30bd1986-90bf-437c-82da-2b2b461628eb",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"CANCELLING_PLATFORM_TASK\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "dd41563b-0996-4d92-ac44-331712bf356e",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"CANCELLING_PLATFORM_TASK\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "01c64417-c40c-4b0a-adbb-62ecd13fa89c",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"CANCELLING_PLATFORM_TASK\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "78dbfeab-b95e-4d4f-984f-07835e29e698",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"CANCELLING_PLATFORM_TASK\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "33ac19b8-e513-4832-b724-fcb19fc89fd2",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"CANCELLING_PLATFORM_TASK\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "7ab65734-a6fe-4509-a77b-f4a886cfc577",
                    "name": "/services/dataloader/api/:tenantId/project/job/:jobId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/job/:jobId",
                        "description": {
                            "content": "Deletes the job with the status marked as completed",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "job",
                                ":jobId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "jobId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job ID to delete",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "80a1520f-4a72-4fa9-8785-c410fa3aeb8b",
                            "name": "Job deleted successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "5c275e01-0988-4240-8de8-652f90810c56",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "26e15a7f-9f4d-4084-90dc-6e6ca0753bbb",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "77199042-829b-4381-8e48-76af7f076730",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "bab16976-196e-4e77-b42f-5f1cc2d93e44",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "78faa3ee-96f6-4b42-8f8a-b326c44bc322",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "c97d96ce-243d-4bda-901e-92e197924e8c",
                    "name": "/services/dataloader/api/:tenantId/project/job/:jobId/_resume",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/job/:jobId/_resume",
                        "description": {
                            "content": "Resumes the job stuck with no progress",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "job",
                                ":jobId",
                                "_resume"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "jobId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job ID to resume",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "e9aa275e-50ee-4733-95e4-ab9bfc57f0e4",
                            "name": "Request to resume the job is accepted",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_resume"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Accepted",
                            "code": 202,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "96ecdfd5-93a0-41a3-b070-8f712e6f0ca7",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_resume"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "3811a71e-923e-4576-92a7-be90f325d09c",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_resume"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"error\": \"access_denied\",\n    \"error_description\": \"Access is denied\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4a17f5ea-5ea6-41ec-a80d-8c6d86b67763",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_resume"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"severity\": \"Error\",\n    \"errorMessage\": \"Brief error message here\",\n    \"errorCode\": 123,\n    \"errorDetailMessage\": \"Detailed error message here\",\n    \"innerErrorData\": {\n      \"exception\": \"com.reltio.services.dataloader.common.exception.DataLoaderServiceException Details here\"\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "21d5ef7b-e987-41ef-8b2e-532f2ca5d49b",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_resume"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"timestamp\": 1634719769759,\n    \"status\": 500,\n    \"error\": \"Internal Server Error\",\n    \"message\": \"Brief error message here\",\n    \"path\": \"Api context path here\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "4045c1b7-ed83-4466-a401-c9f2e365a2f8",
                    "name": "/services/dataloader/api/:tenantId/project/job/:jobId/_stop",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/job/:jobId/_stop",
                        "description": {
                            "content": "Stops the job in progress",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "job",
                                ":jobId",
                                "_stop"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "jobId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job ID to stop",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "26af6b75-4d26-46da-b216-f37119bb894c",
                            "name": "Request to stop the job is accepted",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_stop"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Accepted",
                            "code": 202,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "a91b7869-9668-4c0c-b036-d10114c75b7f",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_stop"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"severity\": \"Error\",\n    \"errorMessage\": \"Operation can not be done as the job [xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx] is in COMPLETED state.\",\n    \"errorCode\": 1561,\n    \"errorDetailMessage\": \"Operation can not be done as the job [xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx] is in COMPLETED state.\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a27d2cf1-4a61-48c9-96a3-659ef76b5c9b",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_stop"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"error\": \"access_denied\",\n    \"error_description\": \"Access is denied\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "62333d6c-c3ab-45f5-ad4e-2d8746bbc653",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_stop"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"severity\": \"Error\",\n    \"errorMessage\": \"Brief error message here\",\n    \"errorCode\": 123,\n    \"errorDetailMessage\": \"Detailed error message here\",\n    \"innerErrorData\": {\n      \"exception\": \"com.reltio.services.dataloader.common.exception.DataLoaderServiceException Details here\"\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c4e0767d-5f54-4d23-8507-becce2786766",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_stop"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"timestamp\": 1634719769759,\n    \"status\": 500,\n    \"error\": \"Internal Server Error\",\n    \"message\": \"Brief error message here\",\n    \"path\": \"Api context path here\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "560c56ed-be4b-41ff-8e34-c678f9a6aed7",
                    "name": "/services/dataloader/api/:tenantId/project/job/:jobId/errors",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/job/:jobId/errors",
                        "description": {
                            "content": "Download the error file as a zip file, if any exists",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "job",
                                ":jobId",
                                "errors"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Name of the error file to be retrieved",
                                        "type": "text/plain"
                                    },
                                    "key": "errorFile",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "jobId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job ID for which the error files are to be retrieved",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "be680e38-cfd6-4ee5-847e-aaa37fdda90a",
                            "name": "Error details are retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "errors"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the error file to be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "errorFile",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "f4f724a3-50c5-4cf2-9eef-75ba03d64048",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "errors"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the error file to be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "errorFile",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9a459f8c-c35a-4370-a5c5-48c4372e7cd0",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "errors"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the error file to be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "errorFile",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "90d4743d-b2c4-424b-a566-1cb11a4d1605",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "errors"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the error file to be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "errorFile",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "97b707ab-2bbf-4043-9c2c-fa0a1d3a58e2",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "errors"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the error file to be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "errorFile",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8150ece8-520e-46f7-8206-8372b09f384b",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "errors"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the error file to be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "errorFile",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "edafa389-eb6a-4a46-95fb-9a459dcfc412",
                    "name": "/services/dataloader/api/:tenantId/project/job/:jobId/source",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/job/:jobId/source",
                        "description": {
                            "content": "Download the source file(s) processed by dataload job",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "job",
                                ":jobId",
                                "source"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "jobId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job ID for which the source files are to be retrieved",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "3f12bb0b-7f19-4d1f-9c68-ff40c2b654f0",
                            "name": "Source details are retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "fd5d3645-2084-4314-9065-1e63438e9a4f",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "adc78a70-7de0-4d47-8342-31625c5be031",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "54689910-e300-4227-95aa-103ba31e333a",
                            "name": "User does not have permission to view the file or job information",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4d2264f7-a0ee-4e96-a44a-441f8aa6b55d",
                            "name": "All source files processed by job are deleted",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "edf07006-3972-4ccf-a729-427b770af882",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "42d82f89-4396-4d83-bae3-8b42f2ea4a15",
                    "name": "/services/dataloader/api/:tenantId/project/jobs",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/jobs",
                        "description": {
                            "content": "Retrieve the details of existing jobs for a tenant matching the filter criteria",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "jobs"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "ID of the existing job definitions to get job details",
                                        "type": "text/plain"
                                    },
                                    "key": "projectId",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Job status used to filter the jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "status",
                                    "value": "MAPPING_PROCESSING_FINISHED"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Job status used to filter the jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "status",
                                    "value": "MAPPING_PROCESSING_FINISHED"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to retrieve either inprogress or completed jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "inProgress",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                        "type": "text/plain"
                                    },
                                    "key": "creationDate",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                        "type": "text/plain"
                                    },
                                    "key": "page",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Number of objects that need to be returned with a paged response",
                                        "type": "text/plain"
                                    },
                                    "key": "size",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                        "type": "text/plain"
                                    },
                                    "key": "sort",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "010f1491-74fa-4bf7-af19-59a2af721be2",
                            "name": "Job retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "MAPPING_PROCESSING_FINISHED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"isDeleted\": \"<boolean>\",\n    \"udl\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"jobStatus\": \"DATA_LOAD_TASK_COMPLETED_WITH_ERRORS\",\n    \"dataProcessingJobId\": \"<string>\",\n    \"dataFlowId\": \"<string>\",\n    \"periodicTasks\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"errorDetails\": \"<string>\",\n    \"errorFileBucket\": \"<string>\",\n    \"errorFileLocation\": \"<string>\",\n    \"executedDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"totalRecords\": \"<integer>\",\n    \"processedRecordsCount\": \"<integer>\",\n    \"failedRecords\": \"<string>\",\n    \"failedRecordsCount\": \"<integer>\",\n    \"jobSummary\": \"<string>\",\n    \"ludicrousMode\": \"<boolean>\",\n    \"projectDetails\": {\n      \"environment\": \"<string>\",\n      \"loadType\": \"ENTITIES\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"projectStatus\": \"<string>\",\n      \"progressStatus\": \"<string>\",\n      \"tenantId\": \"<string>\",\n      \"updateType\": \"UPDATE_MERGED\",\n      \"errorFileLocation\": \"<string>\",\n      \"operationStatus\": \"<string>\",\n      \"additionalAttributes\": \"<string>\",\n      \"storageDetails\": {\n        \"sourcePath\": \"<string>\",\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"storageId\": \"<string>\",\n        \"shareSourceInfo\": \"<boolean>\",\n        \"bucketName\": \"<string>\",\n        \"bucketNameTemp\": \"<string>\",\n        \"bucketNameError\": \"<string>\",\n        \"bucketNameSummary\": \"<string>\",\n        \"fileMask\": \"<string>\",\n        \"delimiter\": \"<string>\",\n        \"storageAccount\": {\n          \"createdBy\": \"<string>\",\n          \"createdDate\": \"<dateTime>\",\n          \"updatedBy\": \"<string>\",\n          \"updatedDate\": \"<dateTime>\",\n          \"accountId\": \"<integer>\",\n          \"accountName\": \"<string>\",\n          \"accountType\": \"UPLOADED\",\n          \"credentials\": \"<string>\"\n        },\n        \"totalRecords\": \"<integer>\",\n        \"projectDetailsTO\": {\n          \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n        }\n      },\n      \"mappingDetails\": {\n        \"mappingForObjectType\": \"ENTITIES\",\n        \"mappingName\": \"<string>\",\n        \"mappingSummary\": \"<string>\",\n        \"objectTypeUri\": \"<string>\",\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"mappingId\": \"<integer>\",\n        \"tenantId\": \"<string>\",\n        \"shareMappingDetails\": \"<boolean>\",\n        \"projectIds\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"schedulingDetails\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"id\": \"<string>\",\n        \"scheduledJobId\": \"<string>\",\n        \"cronExpression\": \"<string>\",\n        \"startDate\": \"<long>\",\n        \"endDate\": \"<long>\"\n      }\n    }\n  },\n  {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"isDeleted\": \"<boolean>\",\n    \"udl\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"jobStatus\": \"PROFILES_LOAD_IN_PROGRESS\",\n    \"dataProcessingJobId\": \"<string>\",\n    \"dataFlowId\": \"<string>\",\n    \"periodicTasks\": \"<string>\",\n    \"loadType\": \"RELATIONS\",\n    \"errorDetails\": \"<string>\",\n    \"errorFileBucket\": \"<string>\",\n    \"errorFileLocation\": \"<string>\",\n    \"executedDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"totalRecords\": \"<integer>\",\n    \"processedRecordsCount\": \"<integer>\",\n    \"failedRecords\": \"<string>\",\n    \"failedRecordsCount\": \"<integer>\",\n    \"jobSummary\": \"<string>\",\n    \"ludicrousMode\": \"<boolean>\",\n    \"projectDetails\": {\n      \"environment\": \"<string>\",\n      \"loadType\": \"RELATIONS\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"projectStatus\": \"<string>\",\n      \"progressStatus\": \"<string>\",\n      \"tenantId\": \"<string>\",\n      \"updateType\": \"UPDATE_MERGED\",\n      \"errorFileLocation\": \"<string>\",\n      \"operationStatus\": \"<string>\",\n      \"additionalAttributes\": \"<string>\",\n      \"storageDetails\": {\n        \"sourcePath\": \"<string>\",\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"storageId\": \"<string>\",\n        \"shareSourceInfo\": \"<boolean>\",\n        \"bucketName\": \"<string>\",\n        \"bucketNameTemp\": \"<string>\",\n        \"bucketNameError\": \"<string>\",\n        \"bucketNameSummary\": \"<string>\",\n        \"fileMask\": \"<string>\",\n        \"delimiter\": \"<string>\",\n        \"storageAccount\": {\n          \"createdBy\": \"<string>\",\n          \"createdDate\": \"<dateTime>\",\n          \"updatedBy\": \"<string>\",\n          \"updatedDate\": \"<dateTime>\",\n          \"accountId\": \"<integer>\",\n          \"accountName\": \"<string>\",\n          \"accountType\": \"AWS_S3\",\n          \"credentials\": \"<string>\"\n        },\n        \"totalRecords\": \"<integer>\",\n        \"projectDetailsTO\": {\n          \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n        }\n      },\n      \"mappingDetails\": {\n        \"mappingForObjectType\": \"ENTITIES\",\n        \"mappingName\": \"<string>\",\n        \"mappingSummary\": \"<string>\",\n        \"objectTypeUri\": \"<string>\",\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"mappingId\": \"<integer>\",\n        \"tenantId\": \"<string>\",\n        \"shareMappingDetails\": \"<boolean>\",\n        \"projectIds\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"schedulingDetails\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"id\": \"<string>\",\n        \"scheduledJobId\": \"<string>\",\n        \"cronExpression\": \"<string>\",\n        \"startDate\": \"<long>\",\n        \"endDate\": \"<long>\"\n      }\n    }\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "bc22b1dd-0707-47c6-8e0e-befdbe19f3bd",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "MAPPING_PROCESSING_FINISHED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a54691e5-7d42-4a61-ab3f-b2997587fe88",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "MAPPING_PROCESSING_FINISHED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0e93db2e-48a6-467a-aa14-2e942866e11b",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "MAPPING_PROCESSING_FINISHED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "94e0c208-313e-4204-95a6-e486ef653def",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "MAPPING_PROCESSING_FINISHED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2b3844b9-d8be-4b53-8cd7-89d6faeafeee",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "MAPPING_PROCESSING_FINISHED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "dcd40962-50e2-4dcc-a042-59c7915937a4",
                    "name": "/services/dataloader/api/:tenantId/project/jobs/_facets",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/jobs/_facets",
                        "description": {
                            "content": "Retrieve requested fields from existing jobs for a tenant matching the filter criteria",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "jobs",
                                "_facets"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "ID of the existing job definitions to get job details",
                                        "type": "text/plain"
                                    },
                                    "key": "projectId",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Job status used to filter the jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "status",
                                    "value": "MAPPING_PROCESSING_FINISHED"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Job status used to filter the jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "status",
                                    "value": "MAPPING_PROCESSING_FINISHED"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to retrieve either inprogress or completed jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "inProgress",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                        "type": "text/plain"
                                    },
                                    "key": "creationDate",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "list of fields to fetch",
                                        "type": "text/plain"
                                    },
                                    "key": "facet",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "list of fields to fetch",
                                        "type": "text/plain"
                                    },
                                    "key": "facet",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "c764c09e-7581-4c92-a6e6-9bd5f7131d56",
                            "name": "Fields retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs",
                                        "_facets"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "MAPPING_PROCESSING_FINISHED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "list of fields to fetch",
                                                "type": "text/plain"
                                            },
                                            "key": "facet",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"Duis_fdc\": {\n    \"cupidatate0\": \"<integer>\"\n  },\n  \"id_c61\": {\n    \"incididunt_a9\": \"<integer>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "09cc8da6-a305-43ea-bbc3-a8a035c7736a",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs",
                                        "_facets"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "MAPPING_PROCESSING_FINISHED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "list of fields to fetch",
                                                "type": "text/plain"
                                            },
                                            "key": "facet",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "fa2f246c-995a-4202-a653-b476d2d04694",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs",
                                        "_facets"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "MAPPING_PROCESSING_FINISHED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "list of fields to fetch",
                                                "type": "text/plain"
                                            },
                                            "key": "facet",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d1cf24a9-6905-470f-994f-9de249abccc3",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs",
                                        "_facets"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "MAPPING_PROCESSING_FINISHED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "list of fields to fetch",
                                                "type": "text/plain"
                                            },
                                            "key": "facet",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "20d91bf5-bd9b-434c-bc40-0857a599d4d9",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs",
                                        "_facets"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "MAPPING_PROCESSING_FINISHED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "list of fields to fetch",
                                                "type": "text/plain"
                                            },
                                            "key": "facet",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "94e3fbe2-9fc1-4c2d-a5f9-edf2193c24fe",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs",
                                        "_facets"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "MAPPING_PROCESSING_FINISHED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "list of fields to fetch",
                                                "type": "text/plain"
                                            },
                                            "key": "facet",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "c6f689c8-406b-449f-8fd7-96a85ea89dca",
                    "name": "/services/dataloader/api/:tenantId/project/:projectId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/:projectId",
                        "description": {
                            "content": "Returns existing job definition with mapping, source, and scheduling details",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                ":projectId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "projectId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job definition ID for which the details must be retrieved",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "55108c8a-bee4-4646-9e30-0163c5538ba0",
                            "name": "Job definition is retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"GCP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "198fcd35-d52e-4d82-8878-f51c722bff91",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2f9d3adf-30a3-41df-bbe3-3887ed2c87a4",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3f0fa5ce-1267-40a8-978e-45161ebdd35d",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "72758090-bf71-4f44-8ee6-68602355ccc9",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "549c80a2-21ba-4b49-9c81-62f197b5f119",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "70b1981c-0972-4594-a8bf-70c253289ef7",
                    "name": "/services/dataloader/api/:tenantId/project/:projectId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/:projectId",
                        "description": {
                            "content": "Updates the existing job definitions by merging existing details for job definition with the updated information provided in the request body",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                ":projectId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "projectId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job definition ID for which the details must be updated",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"GCP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "7a6033e7-c414-4e2b-a506-60e9f4947b7d",
                            "name": "Job definition is successfully updated",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"GCP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"GCP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1dce35e9-9e46-44d8-b996-58fd5f0e781d",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"GCP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "faab2132-5661-497f-b79f-7d979e04f66a",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"GCP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "481d6d58-47de-488e-b1f2-86a5492e14c4",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"GCP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "dfd0162d-aeeb-4197-9d21-92f4b3204b45",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"GCP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4bc8f632-6dd1-4366-a1f0-169469938022",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"UPDATE_MERGED\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"GCP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "a052a24e-1a49-462b-93f3-f07d99a56f35",
                    "name": "/services/dataloader/api/:tenantId/project/:projectId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/:projectId",
                        "description": {
                            "content": "Deletes the existing job definition when the related mapping, source, and scheduling details are not used by other job definitions",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                ":projectId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "projectId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job definition ID for which the details must be deleted",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "225e8160-b1df-4a4a-a606-981d51a737d8",
                            "name": "Job definition is deleted successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "0be57ebe-54e2-48df-a0b8-f5b21dcd268c",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7d510d16-af09-4709-8fd3-4e523fbcf056",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1e6f844e-8045-41d6-af8d-75783819ce53",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7bdb63f7-1ae8-4f5c-bf24-6522e48e2c20",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "158bf8f0-6255-4e15-b5d6-f4ffcc8da061",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "1df0d007-d353-4e17-a8bb-55a1c8fd51dc",
                    "name": "/services/dataloader/api/:tenantId/project/:projectId/jobs",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/:projectId/jobs",
                        "description": {
                            "content": "Retrieves the details of existing jobs for a job definitions by matching the filter criteria",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                ":projectId",
                                "jobs"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Job status used to filter the jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "status",
                                    "value": "ERROR"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Job status used to filter the jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "status",
                                    "value": "@DeprecatedDATA_LOAD_TASK_FAILED"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to retrieve either inprogress or completed jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "inProgress",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                        "type": "text/plain"
                                    },
                                    "key": "creationDate",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                        "type": "text/plain"
                                    },
                                    "key": "page",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Number of objects that need to be returned with a paged response",
                                        "type": "text/plain"
                                    },
                                    "key": "size",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                        "type": "text/plain"
                                    },
                                    "key": "sort",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "projectId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the existing job definitions to get job details",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "621385b6-d63b-4fae-93c1-e2b74dba69a3",
                            "name": "Job retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "@DeprecatedDATA_LOAD_TASK_FAILED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"isDeleted\": \"<boolean>\",\n    \"udl\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"jobStatus\": \"DATA_LOAD_TASK_COMPLETED_WITH_ERRORS\",\n    \"dataProcessingJobId\": \"<string>\",\n    \"dataFlowId\": \"<string>\",\n    \"periodicTasks\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"errorDetails\": \"<string>\",\n    \"errorFileBucket\": \"<string>\",\n    \"errorFileLocation\": \"<string>\",\n    \"executedDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"totalRecords\": \"<integer>\",\n    \"processedRecordsCount\": \"<integer>\",\n    \"failedRecords\": \"<string>\",\n    \"failedRecordsCount\": \"<integer>\",\n    \"jobSummary\": \"<string>\",\n    \"ludicrousMode\": \"<boolean>\",\n    \"projectDetails\": {\n      \"environment\": \"<string>\",\n      \"loadType\": \"ENTITIES\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"projectStatus\": \"<string>\",\n      \"progressStatus\": \"<string>\",\n      \"tenantId\": \"<string>\",\n      \"updateType\": \"UPDATE_MERGED\",\n      \"errorFileLocation\": \"<string>\",\n      \"operationStatus\": \"<string>\",\n      \"additionalAttributes\": \"<string>\",\n      \"storageDetails\": {\n        \"sourcePath\": \"<string>\",\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"storageId\": \"<string>\",\n        \"shareSourceInfo\": \"<boolean>\",\n        \"bucketName\": \"<string>\",\n        \"bucketNameTemp\": \"<string>\",\n        \"bucketNameError\": \"<string>\",\n        \"bucketNameSummary\": \"<string>\",\n        \"fileMask\": \"<string>\",\n        \"delimiter\": \"<string>\",\n        \"storageAccount\": {\n          \"createdBy\": \"<string>\",\n          \"createdDate\": \"<dateTime>\",\n          \"updatedBy\": \"<string>\",\n          \"updatedDate\": \"<dateTime>\",\n          \"accountId\": \"<integer>\",\n          \"accountName\": \"<string>\",\n          \"accountType\": \"UPLOADED\",\n          \"credentials\": \"<string>\"\n        },\n        \"totalRecords\": \"<integer>\",\n        \"projectDetailsTO\": {\n          \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n        }\n      },\n      \"mappingDetails\": {\n        \"mappingForObjectType\": \"ENTITIES\",\n        \"mappingName\": \"<string>\",\n        \"mappingSummary\": \"<string>\",\n        \"objectTypeUri\": \"<string>\",\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"mappingId\": \"<integer>\",\n        \"tenantId\": \"<string>\",\n        \"shareMappingDetails\": \"<boolean>\",\n        \"projectIds\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"schedulingDetails\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"id\": \"<string>\",\n        \"scheduledJobId\": \"<string>\",\n        \"cronExpression\": \"<string>\",\n        \"startDate\": \"<long>\",\n        \"endDate\": \"<long>\"\n      }\n    }\n  },\n  {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"isDeleted\": \"<boolean>\",\n    \"udl\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"jobStatus\": \"PROFILES_LOAD_IN_PROGRESS\",\n    \"dataProcessingJobId\": \"<string>\",\n    \"dataFlowId\": \"<string>\",\n    \"periodicTasks\": \"<string>\",\n    \"loadType\": \"RELATIONS\",\n    \"errorDetails\": \"<string>\",\n    \"errorFileBucket\": \"<string>\",\n    \"errorFileLocation\": \"<string>\",\n    \"executedDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"totalRecords\": \"<integer>\",\n    \"processedRecordsCount\": \"<integer>\",\n    \"failedRecords\": \"<string>\",\n    \"failedRecordsCount\": \"<integer>\",\n    \"jobSummary\": \"<string>\",\n    \"ludicrousMode\": \"<boolean>\",\n    \"projectDetails\": {\n      \"environment\": \"<string>\",\n      \"loadType\": \"RELATIONS\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"projectStatus\": \"<string>\",\n      \"progressStatus\": \"<string>\",\n      \"tenantId\": \"<string>\",\n      \"updateType\": \"UPDATE_MERGED\",\n      \"errorFileLocation\": \"<string>\",\n      \"operationStatus\": \"<string>\",\n      \"additionalAttributes\": \"<string>\",\n      \"storageDetails\": {\n        \"sourcePath\": \"<string>\",\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"storageId\": \"<string>\",\n        \"shareSourceInfo\": \"<boolean>\",\n        \"bucketName\": \"<string>\",\n        \"bucketNameTemp\": \"<string>\",\n        \"bucketNameError\": \"<string>\",\n        \"bucketNameSummary\": \"<string>\",\n        \"fileMask\": \"<string>\",\n        \"delimiter\": \"<string>\",\n        \"storageAccount\": {\n          \"createdBy\": \"<string>\",\n          \"createdDate\": \"<dateTime>\",\n          \"updatedBy\": \"<string>\",\n          \"updatedDate\": \"<dateTime>\",\n          \"accountId\": \"<integer>\",\n          \"accountName\": \"<string>\",\n          \"accountType\": \"AWS_S3\",\n          \"credentials\": \"<string>\"\n        },\n        \"totalRecords\": \"<integer>\",\n        \"projectDetailsTO\": {\n          \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n        }\n      },\n      \"mappingDetails\": {\n        \"mappingForObjectType\": \"ENTITIES\",\n        \"mappingName\": \"<string>\",\n        \"mappingSummary\": \"<string>\",\n        \"objectTypeUri\": \"<string>\",\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"mappingId\": \"<integer>\",\n        \"tenantId\": \"<string>\",\n        \"shareMappingDetails\": \"<boolean>\",\n        \"projectIds\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"schedulingDetails\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"id\": \"<string>\",\n        \"scheduledJobId\": \"<string>\",\n        \"cronExpression\": \"<string>\",\n        \"startDate\": \"<long>\",\n        \"endDate\": \"<long>\"\n      }\n    }\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3cd018be-7c34-4a22-a229-83087b53dc68",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "@DeprecatedDATA_LOAD_TASK_FAILED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0b728cbf-0994-4510-924b-bc5008687fa1",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "@DeprecatedDATA_LOAD_TASK_FAILED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "61653e20-eabe-4cf1-a02b-cda59b7a3f75",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "@DeprecatedDATA_LOAD_TASK_FAILED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f259e75b-5579-4d7b-85cd-c4208bccd155",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "@DeprecatedDATA_LOAD_TASK_FAILED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "29213d30-985a-48ea-84df-47ac46640936",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "@DeprecatedDATA_LOAD_TASK_FAILED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "904ecd2c-2a00-4946-9fa1-69bd615b4652",
                    "name": "/services/dataloader/api/:tenantId/project/:projectId/jobs",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/:projectId/jobs",
                        "description": {
                            "content": "Creates a job to carry out the load operation using the configurations provided in the request payload. If the configuration details for a job are not provided in the request payload, the API creates a job based on the job definition",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                ":projectId",
                                "jobs"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "projectId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job definition ID used to create the job",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"CANCELLING_PLATFORM_TASK\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "01c79732-ac31-43fb-9e90-de88c48229c3",
                            "name": "Job Created successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"CANCELLING_PLATFORM_TASK\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"CANCELLING_PLATFORM_TASK\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "075ee46a-8d13-4c7e-9b70-4c269ac7bfea",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"CANCELLING_PLATFORM_TASK\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "935ab59d-e64a-448c-8747-b104ca5683ae",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"CANCELLING_PLATFORM_TASK\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "efc88b64-dc82-44ae-8f75-113a6bd94255",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"CANCELLING_PLATFORM_TASK\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0a9b55b5-62cc-4f53-a98f-1af051407992",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"CANCELLING_PLATFORM_TASK\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "67867d10-6c6f-4c26-91fe-4be4ec5979c6",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"CANCELLING_PLATFORM_TASK\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "efdfe815-52be-48c1-ae70-0515614fd878",
                    "name": "/services/dataloader/api/:tenantId/project/:projectId/jobs/run",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/:projectId/jobs/run",
                        "description": {
                            "content": "Creates and runs a job to carry out the load operation using configurations provided in the request payload. If the configuration details for a job are not provided in the request payload, the API creates a job based on the job definition",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                ":projectId",
                                "jobs",
                                "run"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "projectId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job definition ID used to create the job",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"CANCELLING_PLATFORM_TASK\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "9324415f-5258-4cab-8518-cb230763461f",
                            "name": "Job executed successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs",
                                        "run"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"CANCELLING_PLATFORM_TASK\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"CANCELLING_PLATFORM_TASK\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "dd5e95f0-3a08-474e-adb9-4d06bb5067c5",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs",
                                        "run"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"CANCELLING_PLATFORM_TASK\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e98e12c8-953f-4c16-b89a-940a8775f07c",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs",
                                        "run"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"CANCELLING_PLATFORM_TASK\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0da0070f-b659-4804-8395-04c5ce432553",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs",
                                        "run"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"CANCELLING_PLATFORM_TASK\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a983f3ee-7028-48a2-a20e-95962a46f5eb",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs",
                                        "run"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"CANCELLING_PLATFORM_TASK\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "11cb880a-6fd6-472e-a8f5-d7409624ebab",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs",
                                        "run"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"CANCELLING_PLATFORM_TASK\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "5642913a-4f0e-4224-aae2-6734bcd72f07",
                    "name": "/services/dataloader/api/:tenantId/projects",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/projects",
                        "description": {
                            "content": "Retrieves existing job definitions for a tenant matching filter criteria",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "projects"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Job definitions are filtered based on the status",
                                        "type": "text/plain"
                                    },
                                    "key": "projectStatus",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Filter job definitions by mapping used",
                                        "type": "text/plain"
                                    },
                                    "key": "mappingId",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Criteria to filter and get jobs which are created after provided long value of date",
                                        "type": "text/plain"
                                    },
                                    "key": "creationDate",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Filter criteria to list jobs based on progress status",
                                        "type": "text/plain"
                                    },
                                    "key": "progressStatus",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "If 'false', the jobs with completed status are displayed, else draft jobs are displayed",
                                        "type": "text/plain"
                                    },
                                    "key": "inProgress",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                        "type": "text/plain"
                                    },
                                    "key": "page",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Number of objects that need to be returned with a paged response",
                                        "type": "text/plain"
                                    },
                                    "key": "size",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                        "type": "text/plain"
                                    },
                                    "key": "sort",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "65115521-9ac8-49e7-8281-d1d264d665fe",
                            "name": "Job definitions retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "projects"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job definitions are filtered based on the status",
                                                "type": "text/plain"
                                            },
                                            "key": "projectStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter job definitions by mapping used",
                                                "type": "text/plain"
                                            },
                                            "key": "mappingId",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created after provided long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter criteria to list jobs based on progress status",
                                                "type": "text/plain"
                                            },
                                            "key": "progressStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'false', the jobs with completed status are displayed, else draft jobs are displayed",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"GCP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  },\n  {\n    \"environment\": \"<string>\",\n    \"loadType\": \"RELATIONS\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"GCP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "94cba724-e8ae-4c2e-b44b-cb032a45f4c6",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "projects"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job definitions are filtered based on the status",
                                                "type": "text/plain"
                                            },
                                            "key": "projectStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter job definitions by mapping used",
                                                "type": "text/plain"
                                            },
                                            "key": "mappingId",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created after provided long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter criteria to list jobs based on progress status",
                                                "type": "text/plain"
                                            },
                                            "key": "progressStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'false', the jobs with completed status are displayed, else draft jobs are displayed",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d1ee44a4-7f66-4d2d-bf8d-61c81e82e9a9",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "projects"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job definitions are filtered based on the status",
                                                "type": "text/plain"
                                            },
                                            "key": "projectStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter job definitions by mapping used",
                                                "type": "text/plain"
                                            },
                                            "key": "mappingId",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created after provided long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter criteria to list jobs based on progress status",
                                                "type": "text/plain"
                                            },
                                            "key": "progressStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'false', the jobs with completed status are displayed, else draft jobs are displayed",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ba31c7b9-fafa-4082-949c-c143e136f875",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "projects"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job definitions are filtered based on the status",
                                                "type": "text/plain"
                                            },
                                            "key": "projectStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter job definitions by mapping used",
                                                "type": "text/plain"
                                            },
                                            "key": "mappingId",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created after provided long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter criteria to list jobs based on progress status",
                                                "type": "text/plain"
                                            },
                                            "key": "progressStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'false', the jobs with completed status are displayed, else draft jobs are displayed",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "554c6b0a-9791-4463-a752-b59e2b13ccf9",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "projects"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job definitions are filtered based on the status",
                                                "type": "text/plain"
                                            },
                                            "key": "projectStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter job definitions by mapping used",
                                                "type": "text/plain"
                                            },
                                            "key": "mappingId",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created after provided long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter criteria to list jobs based on progress status",
                                                "type": "text/plain"
                                            },
                                            "key": "progressStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'false', the jobs with completed status are displayed, else draft jobs are displayed",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c62774ce-34cd-4b2c-a302-64629ec2f028",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "projects"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job definitions are filtered based on the status",
                                                "type": "text/plain"
                                            },
                                            "key": "projectStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter job definitions by mapping used",
                                                "type": "text/plain"
                                            },
                                            "key": "mappingId",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created after provided long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter criteria to list jobs based on progress status",
                                                "type": "text/plain"
                                            },
                                            "key": "progressStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'false', the jobs with completed status are displayed, else draft jobs are displayed",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "915b1d86-9c7a-485b-91d1-2f9b83b43f6d",
                    "name": "/services/dataloader/api/:tenantId/storage/_account",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/storage/_account",
                        "description": {
                            "content": "Creates a storage account to be used while creating the source details. You must provide the account type and credential details for creating the storage account",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "storage",
                                "_account"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"AWS_S3\",\n  \"credentials\": \"<string>\"\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "d6396efc-4a69-44e8-ba96-ff66121b3db7",
                            "name": "Resource is created successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"AWS_S3\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"AWS_S3\",\n  \"credentials\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "cd8a194c-b74e-47b2-b432-2d46188e25bf",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"AWS_S3\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0b419de6-3ef1-471a-b7a1-ad3e7928f4a2",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"AWS_S3\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c714fa72-620f-4dad-b885-a3b58e31efb2",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"AWS_S3\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7b34f787-9718-44e5-a8b6-821b578e21aa",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"AWS_S3\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b824fa01-89f0-41af-a185-ce7a08d6735b",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"AWS_S3\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "55adbb03-047e-4fd7-8905-80002d6e756d",
                    "name": "/services/dataloader/api/:tenantId/storage/_account/:accountId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/storage/_account/:accountId",
                        "description": {
                            "content": "You can get the existing storage account details using the ID",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "storage",
                                "_account",
                                ":accountId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "accountId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Existing storage account ID for which the details must be retrieved",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "cc6466e8-0ef4-4aa5-ade7-bd2d31099763",
                            "name": "Resource retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"AWS_S3\",\n  \"credentials\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6de0b5c2-e43d-425f-80d1-54f72ab4a137",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "40601723-053a-4d78-ab76-dc65b0d52067",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5b90c621-f3d2-4fff-88d9-d2c9f76809b5",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d1e91147-ccdc-41b3-85c1-6119c5586bf4",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "eca53418-fa69-4af8-b160-a50cdc4edb30",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "8cdd3096-f689-47dc-baf9-113fe7ba51d0",
                    "name": "/services/dataloader/api/:tenantId/storage/_account/:accountId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/storage/_account/:accountId",
                        "description": {
                            "content": "Updates the existing storage account details",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "storage",
                                "_account",
                                ":accountId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "accountId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Existing storage account ID for which the details must be updated",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"AWS_S3\",\n  \"credentials\": \"<string>\"\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "2e6f9925-2759-4f16-9e7e-b20a2bf1f7a5",
                            "name": "Resource is update successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"AWS_S3\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"AWS_S3\",\n  \"credentials\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "50436130-1f16-4ac2-b1ca-602d2c818729",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"AWS_S3\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a6ddf024-364a-4b15-95ba-7377644b79f6",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"AWS_S3\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d35a5358-0c77-42e4-9d9d-bdd6c7aa5183",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"AWS_S3\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ddc1c682-fd19-492e-b395-bd18508f90e1",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"AWS_S3\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e71e5eb3-93dc-437a-ae74-ed3b95d643e0",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"AWS_S3\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "b806fb32-5f31-4a71-bf35-ce7db5c4e8ac",
                    "name": "/services/dataloader/api/:tenantId/storage/_account/:accountId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/storage/_account/:accountId",
                        "description": {
                            "content": "Delete existing storage account details using the ID",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "storage",
                                "_account",
                                ":accountId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "accountId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Existing storage account ID for which the details must be deleted",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "9b9995c3-68db-4707-8e78-0880ff6d16ef",
                            "name": "Resource deleted successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "7e3f6e75-bd89-4a53-acab-8575dc7af162",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0e95851f-aad5-4b37-ae1c-25c399b6a23d",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5cee3bdd-bb14-4221-88c9-2f33c4fc1f66",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8e514816-355b-4183-849c-a151aad2a398",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "366a39d6-bf21-4dc9-a36b-def2d30d0e7a",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "459de00e-04e5-48d9-aa75-3f5bc3e15904",
                    "name": "/services/dataloader/api/:tenantId/storage/_accounts",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/storage/_accounts",
                        "description": {
                            "content": "Retrieves all storage account details for the accounts created by the logged-in user matching the filter criteria",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "storage",
                                "_accounts"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Type of the Storage account. <br><b>For example:</b> 'accountType=GCP'",
                                        "type": "text/plain"
                                    },
                                    "key": "accountType",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                        "type": "text/plain"
                                    },
                                    "key": "page",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Number of objects that need to be returned with a paged response",
                                        "type": "text/plain"
                                    },
                                    "key": "size",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=accountType' - sorts the storage accounts in the ascending order of accountType, 'sort=accountType:desc' - sorts the source details in the descending order of accountType. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=accountType:desc,name:desc' - sorts the API response in the descending order of accountType and 'name'",
                                        "type": "text/plain"
                                    },
                                    "key": "sort",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "a85f8c56-7308-4512-b34a-bf61abe64d16",
                            "name": "Resources retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_accounts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Type of the Storage account. <br><b>For example:</b> 'accountType=GCP'",
                                                "type": "text/plain"
                                            },
                                            "key": "accountType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=accountType' - sorts the storage accounts in the ascending order of accountType, 'sort=accountType:desc' - sorts the source details in the descending order of accountType. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=accountType:desc,name:desc' - sorts the API response in the descending order of accountType and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"GCP\",\n    \"credentials\": \"<string>\"\n  },\n  {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"SFTP\",\n    \"credentials\": \"<string>\"\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5409b853-fbc7-484b-b52d-b73edd231137",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_accounts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Type of the Storage account. <br><b>For example:</b> 'accountType=GCP'",
                                                "type": "text/plain"
                                            },
                                            "key": "accountType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=accountType' - sorts the storage accounts in the ascending order of accountType, 'sort=accountType:desc' - sorts the source details in the descending order of accountType. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=accountType:desc,name:desc' - sorts the API response in the descending order of accountType and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "83d04db8-ec30-4c89-bc5e-6d56d9070c67",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_accounts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Type of the Storage account. <br><b>For example:</b> 'accountType=GCP'",
                                                "type": "text/plain"
                                            },
                                            "key": "accountType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=accountType' - sorts the storage accounts in the ascending order of accountType, 'sort=accountType:desc' - sorts the source details in the descending order of accountType. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=accountType:desc,name:desc' - sorts the API response in the descending order of accountType and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5bf40f18-7d25-404a-ad24-e1a663bbbeef",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_accounts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Type of the Storage account. <br><b>For example:</b> 'accountType=GCP'",
                                                "type": "text/plain"
                                            },
                                            "key": "accountType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=accountType' - sorts the storage accounts in the ascending order of accountType, 'sort=accountType:desc' - sorts the source details in the descending order of accountType. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=accountType:desc,name:desc' - sorts the API response in the descending order of accountType and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "55bc8c3b-0469-4547-a19b-47a155228d9b",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_accounts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Type of the Storage account. <br><b>For example:</b> 'accountType=GCP'",
                                                "type": "text/plain"
                                            },
                                            "key": "accountType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=accountType' - sorts the storage accounts in the ascending order of accountType, 'sort=accountType:desc' - sorts the source details in the descending order of accountType. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=accountType:desc,name:desc' - sorts the API response in the descending order of accountType and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d6c72477-631b-46c0-af85-1ec77d61313a",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_accounts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Type of the Storage account. <br><b>For example:</b> 'accountType=GCP'",
                                                "type": "text/plain"
                                            },
                                            "key": "accountType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=accountType' - sorts the storage accounts in the ascending order of accountType, 'sort=accountType:desc' - sorts the source details in the descending order of accountType. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=accountType:desc,name:desc' - sorts the API response in the descending order of accountType and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "57444718-fcd8-4846-b9eb-0b16f5b2bcb2",
                    "name": "/services/dataloader/api/:tenantId/storage/:directory/upload",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/storage/:directory/upload",
                        "description": {
                            "content": "Upload a file from your system to remote storage for carrying out load operation",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "storage",
                                ":directory",
                                "upload"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "If set to 'true', the existing file is overwritten with the new file",
                                        "type": "text/plain"
                                    },
                                    "key": "replace",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "When provided, the API uploads the file and updates the provided job definition and maps the storage ID to the uploaded file",
                                        "type": "text/plain"
                                    },
                                    "key": "projectId",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "CSV file delimiter character, supported values are , | || ; ",
                                        "type": "text/plain"
                                    },
                                    "key": "delimiter",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "directory",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) GCS path for uploading the file",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "multipart/form-data"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "description": {
                                        "content": "(Required) MIME file that must be uploaded",
                                        "type": "text/plain"
                                    },
                                    "key": "file",
                                    "value": "<string>",
                                    "type": "text"
                                }
                            ]
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "bfc09438-67e5-4d6d-9930-b22fa72e9595",
                            "name": "File uploaded",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":directory",
                                        "upload"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to 'true', the existing file is overwritten with the new file",
                                                "type": "text/plain"
                                            },
                                            "key": "replace",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "When provided, the API uploads the file and updates the provided job definition and maps the storage ID to the uploaded file",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "CSV file delimiter character, supported values are , | || ; ",
                                                "type": "text/plain"
                                            },
                                            "key": "delimiter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) MIME file that must be uploaded",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<string>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1ab8c70d-419d-4705-98af-df8919c903c2",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":directory",
                                        "upload"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to 'true', the existing file is overwritten with the new file",
                                                "type": "text/plain"
                                            },
                                            "key": "replace",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "When provided, the API uploads the file and updates the provided job definition and maps the storage ID to the uploaded file",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "CSV file delimiter character, supported values are , | || ; ",
                                                "type": "text/plain"
                                            },
                                            "key": "delimiter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) MIME file that must be uploaded",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<string>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7b25a49f-2496-4600-aeb8-0297bf9efe83",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":directory",
                                        "upload"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to 'true', the existing file is overwritten with the new file",
                                                "type": "text/plain"
                                            },
                                            "key": "replace",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "When provided, the API uploads the file and updates the provided job definition and maps the storage ID to the uploaded file",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "CSV file delimiter character, supported values are , | || ; ",
                                                "type": "text/plain"
                                            },
                                            "key": "delimiter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) MIME file that must be uploaded",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<string>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "94936ef5-d4a4-49ea-8a76-c76fd435ce58",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":directory",
                                        "upload"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to 'true', the existing file is overwritten with the new file",
                                                "type": "text/plain"
                                            },
                                            "key": "replace",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "When provided, the API uploads the file and updates the provided job definition and maps the storage ID to the uploaded file",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "CSV file delimiter character, supported values are , | || ; ",
                                                "type": "text/plain"
                                            },
                                            "key": "delimiter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) MIME file that must be uploaded",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<string>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a79a6dae-752d-4ff1-ae87-3b341e85f33e",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":directory",
                                        "upload"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to 'true', the existing file is overwritten with the new file",
                                                "type": "text/plain"
                                            },
                                            "key": "replace",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "When provided, the API uploads the file and updates the provided job definition and maps the storage ID to the uploaded file",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "CSV file delimiter character, supported values are , | || ; ",
                                                "type": "text/plain"
                                            },
                                            "key": "delimiter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) MIME file that must be uploaded",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<string>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6f954db0-5108-4432-97a1-8a47b9acf73b",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":directory",
                                        "upload"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to 'true', the existing file is overwritten with the new file",
                                                "type": "text/plain"
                                            },
                                            "key": "replace",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "When provided, the API uploads the file and updates the provided job definition and maps the storage ID to the uploaded file",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "CSV file delimiter character, supported values are , | || ; ",
                                                "type": "text/plain"
                                            },
                                            "key": "delimiter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) MIME file that must be uploaded",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<string>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "6403c399-cc78-4c77-824c-c45b85c85cd6",
                    "name": "/services/dataloader/api/:tenantId/storage/:sourceId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/storage/:sourceId",
                        "description": {
                            "content": "Removes the uploaded file from Cloud Storage",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "storage",
                                ":sourceId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "sourceId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Source details ID to delete",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "d8a29c42-4b10-4565-ba9e-b2d915833ebf",
                            "name": "Source file deleted successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "c7ca013d-60d9-4532-9833-e1239440e5d4",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7ffa3f36-d7e1-4667-9752-6112da532949",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c73ffa9a-dec6-4965-9d55-b8c2f4b59067",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "075f3cbb-a698-4153-8fd9-af97e62060b0",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "011df562-9868-4914-b925-63639df279b2",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "d33c0215-7b68-40dc-a4a8-ef494960aba1",
                    "name": "/services/dataloader/api/:tenantId/storage/:sourceId/read",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/storage/:sourceId/read",
                        "description": {
                            "content": "Reads the specified number of lines from the existing source details and returns the information",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "storage",
                                ":sourceId",
                                "read"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Number of lines to be read from the source file for preview",
                                        "type": "text/plain"
                                    },
                                    "key": "linesToRead",
                                    "value": "10"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "sourceId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Existing Storage ID from which the files are to be read",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "19506772-ca60-4d4e-be3c-a93173cdc6a5",
                            "name": "Source files are read successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId",
                                        "read"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of lines to be read from the source file for preview",
                                                "type": "text/plain"
                                            },
                                            "key": "linesToRead",
                                            "value": "10"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"sunt08\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"commodo_8e\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tempor613\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"fugiat_d\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9acd8b9f-2494-4954-8e6c-7166b7c7a20e",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId",
                                        "read"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of lines to be read from the source file for preview",
                                                "type": "text/plain"
                                            },
                                            "key": "linesToRead",
                                            "value": "10"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1cf7f75b-d927-4625-a87f-c96bdb9c531d",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId",
                                        "read"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of lines to be read from the source file for preview",
                                                "type": "text/plain"
                                            },
                                            "key": "linesToRead",
                                            "value": "10"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1f4aa8b5-ed8d-43e1-8e08-c8773f87c31f",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId",
                                        "read"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of lines to be read from the source file for preview",
                                                "type": "text/plain"
                                            },
                                            "key": "linesToRead",
                                            "value": "10"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "baae8e7d-6ab8-47aa-88d7-9768c6fd9270",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId",
                                        "read"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of lines to be read from the source file for preview",
                                                "type": "text/plain"
                                            },
                                            "key": "linesToRead",
                                            "value": "10"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5739eceb-6a22-42ce-b0f2-14079f820bb5",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId",
                                        "read"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of lines to be read from the source file for preview",
                                                "type": "text/plain"
                                            },
                                            "key": "linesToRead",
                                            "value": "10"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ]
        },
        {
            "name": "Reference Data Management",
            "description": "",
            "item": [
                {
                    "id": "4470da57-8fa2-42ad-ad5b-6cd87552c5cc",
                    "name": "/services/lookups/:tenantId",
                    "request": {
                        "name": "/services/lookups/:tenantId",
                        "description": {
                            "content": "This API saves a collection of lookups in RDM tenant according to the JSON object definition. If you need to create just one lookup value then please specify one JSON object in the array. The same API should be used for create and update operations.<br/><br/>You can create a maximum of <b>100</b> lookup codes in a single request.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "lookups",
                                ":tenantId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the RDM tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "3820de76-6207-4bda-bfe8-29d6757eaa09",
                            "name": "Successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"uri\": \"<string>\",\n    \"value\": {},\n    \"error\": {\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"innerErrorData\": {\n        \"innerErrorData\": {\n          \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n        },\n        \"exception\": \"<string>\",\n        \"stack\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    \"warning\": {\n      \"warningMessage\": \"<string>\"\n    }\n  },\n  {\n    \"uri\": \"<string>\",\n    \"value\": {},\n    \"error\": {\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"innerErrorData\": {\n        \"innerErrorData\": {\n          \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n        },\n        \"exception\": \"<string>\",\n        \"stack\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    \"warning\": {\n      \"warningMessage\": \"<string>\"\n    }\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4488b59f-e147-4799-93f9-c3a8ebd30785",
                            "name": "The operation cannot be performed because user is unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "da24d1f4-55a4-4277-b6a3-bdf6f05f139d",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "e136de91-669b-4866-94cc-09b54e55f746",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "bdc86cc7-167b-4655-8aa3-52ea80fc13a1",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "8dd48ddd-f9da-4595-937a-fd630a22ff61",
                    "name": "/services/lookups/:tenantId/:type",
                    "request": {
                        "name": "/services/lookups/:tenantId/:type",
                        "description": {
                            "content": "This API saves a collection of lookups in RDM tenant according to the JSON object definition. If you need to create just one lookup value then please specify one JSON object in the array. The same API should be used for create and update operations.<br/><br/>You can create a maximum of <b>100</b> lookup codes in a single request.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "lookups",
                                ":tenantId",
                                ":type"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the RDM tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "type",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Lookup type for which values must be created",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "7588b531-65c1-4497-ae3e-f64573983412",
                            "name": "Successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"uri\": \"<string>\",\n  \"value\": {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  \"error\": {\n    \"errorMessage\": \"<string>\",\n    \"errorCode\": \"<integer>\",\n    \"innerErrorData\": {\n      \"innerErrorData\": {\n        \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n      },\n      \"exception\": \"<string>\",\n      \"stack\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  },\n  \"warning\": {\n    \"warningMessage\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a36be7e3-b29d-4a47-bcea-46a2f2023903",
                            "name": "The operation cannot be performed because user is unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "3df81c86-aed5-4208-81d4-b9c50f06b9fa",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "ec8c5900-db2a-4750-97d4-f44ade8cff01",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1e13850d-1b1c-446b-b24e-8bb431dbca8d",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "f838138a-c0c0-4aba-9d20-1b9dd96d7653",
                    "name": "/services/lookups/:tenantId/:type/:code",
                    "request": {
                        "name": "/services/lookups/:tenantId/:type/:code",
                        "description": {
                            "content": "This API updates a lookup value for the specified lookup type and lookup code. The response returns <b>Success</b> if the value is successfully updated.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "lookups",
                                ":tenantId",
                                ":type",
                                ":code"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the RDM tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "type",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Lookup type for which values must be created",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "e,C_bJaI8",
                                    "key": "code",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"tenantId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"code\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"parents\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sourceMappings\": [\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    }\n  ],\n  \"localizations\": [\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"updatedBy\": \"<string>\",\n  \"updateDate\": \"<long>\",\n  \"version\": \"<long>\"\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "ecd45581-7e19-4753-95a6-881448f82935",
                            "name": "Successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type",
                                        ":code"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"tenantId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"code\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"parents\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sourceMappings\": [\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    }\n  ],\n  \"localizations\": [\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"updatedBy\": \"<string>\",\n  \"updateDate\": \"<long>\",\n  \"version\": \"<long>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"tenantId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"code\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"parents\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sourceMappings\": [\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    }\n  ],\n  \"localizations\": [\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"updatedBy\": \"<string>\",\n  \"updateDate\": \"<long>\",\n  \"version\": \"<long>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8629aed5-e4e8-49a4-a577-cb99973db54c",
                            "name": "The operation cannot be performed because user is unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type",
                                        ":code"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"tenantId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"code\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"parents\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sourceMappings\": [\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    }\n  ],\n  \"localizations\": [\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"updatedBy\": \"<string>\",\n  \"updateDate\": \"<long>\",\n  \"version\": \"<long>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "7715490f-b590-40af-9fa9-109b766594eb",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type",
                                        ":code"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"tenantId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"code\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"parents\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sourceMappings\": [\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    }\n  ],\n  \"localizations\": [\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"updatedBy\": \"<string>\",\n  \"updateDate\": \"<long>\",\n  \"version\": \"<long>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "9c1207f1-9191-4b91-a87c-fa2b7662b03b",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type",
                                        ":code"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"tenantId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"code\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"parents\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sourceMappings\": [\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    }\n  ],\n  \"localizations\": [\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"updatedBy\": \"<string>\",\n  \"updateDate\": \"<long>\",\n  \"version\": \"<long>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9c9261a2-0015-4a29-b7b4-c05c67b0eeee",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type",
                                        ":code"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"tenantId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"code\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"parents\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sourceMappings\": [\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    }\n  ],\n  \"localizations\": [\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"updatedBy\": \"<string>\",\n  \"updateDate\": \"<long>\",\n  \"version\": \"<long>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "0add9011-c3b9-48be-a175-21a6f8c62d30",
                    "name": "/services/unmapped/:tenantId",
                    "request": {
                        "name": "/services/unmapped/:tenantId",
                        "description": {
                            "content": "This API saves a collection of unmapped lookups in RDM tenant according to the JSON object definition. If you need to create just one unmapped lookup value then please specify one JSON object in the array. The same API should be used for create and update operations.<br/><br/>You should use this API when you have lookups from a source but still don't have the corresponding canonical value in the lookup type. Once the canonical value is defined for those unmapped lookups from a source, please use Save Lookup API with the details from unmapped mapping and then delete the unmapped value.<br/><br/>You can create a maximum of <b>100</b> unmapped values in a single request.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "unmapped",
                                ":tenantId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                        "type": "text/plain"
                                    },
                                    "key": "onlyIfNoMapping",
                                    "value": "false"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the RDM tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "2b2e0035-59b2-4ce3-a9c0-b19df5334e2e",
                            "name": "Successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"uri\": \"<string>\",\n  \"value\": {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  \"error\": {\n    \"errorMessage\": \"<string>\",\n    \"errorCode\": \"<integer>\",\n    \"innerErrorData\": {\n      \"innerErrorData\": {\n        \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n      },\n      \"exception\": \"<string>\",\n      \"stack\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  },\n  \"warning\": {\n    \"warningMessage\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "922aec56-d8a9-4dc2-9851-9bb9a9a25b09",
                            "name": "The operation cannot be performed because user is unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "34ed15c1-b29c-41e6-8ad1-da13fd523a3f",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "4fe778f5-81a0-482d-9070-b4534b820e22",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "15b3e9e4-04d1-4462-96c4-3cf0c4203f1e",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "0dd040ad-f267-492e-a8ee-007268f029eb",
                    "name": "/services/unmapped/:tenantId/:type",
                    "request": {
                        "name": "/services/unmapped/:tenantId/:type",
                        "description": {
                            "content": "This API saves a collection of unmapped lookups in RDM tenant according to the JSON object definition. If you need to create just one unmapped lookup value then please specify one JSON object in the array. The same API should be used for create and update operations.<br/><br/>You should use this API when you have lookups from a source but still don't have the corresponding canonical value in the lookup type. Once the canonical value is defined for those unmapped lookups from a source, please use Save Lookup API with the details from unmapped mapping and then delete the unmapped value.<br/><br/>You can create a maximum of <b>100</b> unmapped values in a single request.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "unmapped",
                                ":tenantId",
                                ":type"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                        "type": "text/plain"
                                    },
                                    "key": "onlyIfNoMapping",
                                    "value": "false"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the RDM tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "type",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Lookup type for which unmapped values must be created",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "a048e0e7-5c06-4911-829d-51c84201f42c",
                            "name": "Successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"uri\": \"<string>\",\n    \"value\": {},\n    \"error\": {\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"innerErrorData\": {\n        \"innerErrorData\": {\n          \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n        },\n        \"exception\": \"<string>\",\n        \"stack\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    \"warning\": {\n      \"warningMessage\": \"<string>\"\n    }\n  },\n  {\n    \"uri\": \"<string>\",\n    \"value\": {},\n    \"error\": {\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"innerErrorData\": {\n        \"innerErrorData\": {\n          \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n        },\n        \"exception\": \"<string>\",\n        \"stack\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    \"warning\": {\n      \"warningMessage\": \"<string>\"\n    }\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "38c50231-b53c-47d6-8103-598c258d15b3",
                            "name": "The operation cannot be performed because user is unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "7a59a17e-4f46-4f1f-abd4-3d217d62a2fb",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "43e7f15f-047e-42df-a625-cca0be79c5b2",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "45d11b82-58bd-4344-8ae5-fa38611e0cc8",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ]
        }
    ],
    "event": [],
    "variable": [
        {
            "key": "baseUrl",
            "value": "/"
        }
    ],
    "info": {
        "_postman_id": "cec547b3-74c2-4b45-9c81-d39d850f2fba",
        "name": "Ingest",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
        "description": {
            "content": "Load data into entities, relationships, interactions, crosswalks and reference data.\n\nContact Support:\n Name: Reltio\n Email: support@reltio.com",
            "type": "text/plain"
        }
    }
}