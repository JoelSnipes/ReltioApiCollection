{
    "item": [
        {
            "name": "Entities",
            "description": "",
            "item": [
                {
                    "id": "d01298aa-39f6-4755-bd91-49f8060d90fd",
                    "name": "/services/reltio/api/:tenantId/entities",
                    "request": {
                        "name": "/services/reltio/api/:tenantId/entities",
                        "description": {
                            "content": "This API saves a collection of entities in Reltio Platform according to JSON object definition. To create just one entity using this API, specify one JSON object in the array. <br /> If you post an entity with some crosswalks (for example, <b>crosswalk1</b> and <b>crosswalk2</b>), and that entity corresponds to some existing entities (<b>entity1</b> and <b>entity2</b>) in the Reltio Platform, then these entities are merged in one entity referred as the survivor (for example, <b>entity1</b> would be merged in <b>entity2</b>). After this, the resultant survivor entity (for example, <b>entity2</b>) is updated with the new information from a posted entity. If no entities are found or provided in the posted entity crosswalk or no crosswalks are provided, then a new entity is created. <br /><b>Note:</b> If you do not specify roles in the request, then all roles from the entity being overwritten remain unchanged. To remove all roles from the resultant entity specify an empty array of roles in the <b>POST /entities</b> request.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "reltio",
                                "api",
                                ":tenantId",
                                "entities"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Specifies if the response should contain created entities. Default is true.",
                                        "type": "text/plain"
                                    },
                                    "key": "returnObjects",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                        "type": "text/plain"
                                    },
                                    "key": "options",
                                    "value": "ovOnly,preserveURIs"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"velitd93\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"labore26\": \"<string>\",\n          \"pariatur_a\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"velit8\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"aute7a6\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"tempor7\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nulla5\": \"<string>\",\n          \"laborise\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"incididunt_8\": \"<string>\",\n          \"sinta5\": \"<string>\",\n          \"culpa_502\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"occaecatc64\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "55eb6d42-eb82-445a-a250-afa6766b6b48",
                            "name": "Entities are successfully saved",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "ovOnly,preserveURIs"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"velitd93\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"labore26\": \"<string>\",\n          \"pariatur_a\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"velit8\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"aute7a6\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"tempor7\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nulla5\": \"<string>\",\n          \"laborise\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"incididunt_8\": \"<string>\",\n          \"sinta5\": \"<string>\",\n          \"culpa_502\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"occaecatc64\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"index\": \"<integer>\",\n    \"errors\": {\n      \"severity\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorDetailMessage\": \"<string>\",\n      \"innerErrorData\": {\n        \"exception\": \"<string>\"\n      }\n    },\n    \"object\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"exercitation5\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"aute_7_c\": \"<string>\",\n            \"in_2a\": \"<string>\",\n            \"nona6\": \"<string>\",\n            \"non__eb\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<long>\",\n      \"updatedTime\": \"<long>\",\n      \"attributes\": {},\n      \"uri\": \"<string>\",\n      \"type\": \"<string>\",\n      \"analyticsAttributes\": {\n        \"qui_2a\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ]\n      },\n      \"secondaryLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"refUpdatedBy\": \"<string>\",\n      \"refUpdatedTime\": \"<long>\",\n      \"refCommitTime\": \"<long>\",\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"successful\": \"<boolean>\"\n  },\n  {\n    \"index\": \"<integer>\",\n    \"errors\": {\n      \"severity\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorDetailMessage\": \"<string>\",\n      \"innerErrorData\": {\n        \"exception\": \"<string>\"\n      }\n    },\n    \"object\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"minim_b\": \"<string>\",\n            \"nulla_b4\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"in_ccc\": \"<string>\",\n            \"incididunt_0_9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<long>\",\n      \"updatedTime\": \"<long>\",\n      \"attributes\": {},\n      \"uri\": \"<string>\",\n      \"type\": \"<string>\",\n      \"analyticsAttributes\": {\n        \"in6f\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ]\n      },\n      \"secondaryLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"refUpdatedBy\": \"<string>\",\n      \"refUpdatedTime\": \"<long>\",\n      \"refCommitTime\": \"<long>\",\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"successful\": \"<boolean>\"\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "275f25d6-f741-47db-82af-336d37423c7b",
                            "name": "Entities aren't saved due to a reason provided in the error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "ovOnly,preserveURIs"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"velitd93\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"labore26\": \"<string>\",\n          \"pariatur_a\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"velit8\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"aute7a6\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"tempor7\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nulla5\": \"<string>\",\n          \"laborise\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"incididunt_8\": \"<string>\",\n          \"sinta5\": \"<string>\",\n          \"culpa_502\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"occaecatc64\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "abbf9502-0e9f-452a-8fa2-cb25b4a70f2b",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "ovOnly,preserveURIs"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"velitd93\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"labore26\": \"<string>\",\n          \"pariatur_a\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"velit8\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"aute7a6\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"tempor7\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nulla5\": \"<string>\",\n          \"laborise\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"incididunt_8\": \"<string>\",\n          \"sinta5\": \"<string>\",\n          \"culpa_502\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"occaecatc64\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6780a491-a6eb-47b8-b317-076a972ce9c2",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "ovOnly,preserveURIs"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"velitd93\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"labore26\": \"<string>\",\n          \"pariatur_a\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"velit8\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"aute7a6\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"tempor7\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nulla5\": \"<string>\",\n          \"laborise\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"incididunt_8\": \"<string>\",\n          \"sinta5\": \"<string>\",\n          \"culpa_502\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"occaecatc64\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b68f0047-a6a3-410e-9989-ea16aa8d8112",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "ovOnly,preserveURIs"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"velitd93\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"labore26\": \"<string>\",\n          \"pariatur_a\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"velit8\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"aute7a6\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"tempor7\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nulla5\": \"<string>\",\n          \"laborise\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"incididunt_8\": \"<string>\",\n          \"sinta5\": \"<string>\",\n          \"culpa_502\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"occaecatc64\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e7487667-a90b-49da-a500-54131fe7225c",
                            "name": "Too many requests, please try later",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "ovOnly,preserveURIs"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"velitd93\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"labore26\": \"<string>\",\n          \"pariatur_a\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"velit8\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"aute7a6\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"tempor7\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nulla5\": \"<string>\",\n          \"laborise\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"incididunt_8\": \"<string>\",\n          \"sinta5\": \"<string>\",\n          \"culpa_502\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"occaecatc64\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Too Many Requests",
                            "code": 429,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "7274dbf9-4133-4eb4-8c02-26c6c80c5b8d",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "ovOnly,preserveURIs"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"velitd93\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"labore26\": \"<string>\",\n          \"pariatur_a\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"velit8\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"aute7a6\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"tempor7\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nulla5\": \"<string>\",\n          \"laborise\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"incididunt_8\": \"<string>\",\n          \"sinta5\": \"<string>\",\n          \"culpa_502\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"occaecatc64\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0e81c31b-110c-491a-93dc-b50ac15d6256",
                            "name": "This status code could represent 2 possible scenarios. First, the 'Service Unavailable' scenario. Second, this status code is used when too many requests are being sent in-parallel and API backpressure mechanism was used to protect the platform. In both scenarios, an exponential backoff mechanism should be used to control the rate of requests sent to the server. ",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "ovOnly,preserveURIs"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"velitd93\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"labore26\": \"<string>\",\n          \"pariatur_a\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"velit8\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"aute7a6\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"tempor7\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nulla5\": \"<string>\",\n          \"laborise\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"incididunt_8\": \"<string>\",\n          \"sinta5\": \"<string>\",\n          \"culpa_502\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"occaecatc64\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4344d530-6d41-4da3-8db9-2b18fb0a7862",
                            "name": "The request consumes more resources than it is allowed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "ovOnly,preserveURIs"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"velitd93\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"labore26\": \"<string>\",\n          \"pariatur_a\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"velit8\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"aute7a6\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"tempor7\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nulla5\": \"<string>\",\n          \"laborise\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"incididunt_8\": \"<string>\",\n          \"sinta5\": \"<string>\",\n          \"culpa_502\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"occaecatc64\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Insufficient Storage (WebDAV) (RFC 4918)",
                            "code": 507,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "37c32cf5-8f86-47cc-9f1c-f098d9e1c95d",
                    "name": "/services/reltio/api/:tenantId/entities/_conditional",
                    "request": {
                        "name": "/services/reltio/api/:tenantId/entities/_conditional",
                        "description": {
                            "content": "This API is an aggregate of Search and Save API.It retrieves the individual entities or searches for multiple entities and based on the search result, this API saves a collection of entities in Reltio Platform according to JSON object definition. ",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "reltio",
                                "api",
                                ":tenantId",
                                "entities",
                                "_conditional"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Enables entities filtering by a condition. Format for filter query parameter: filter=({Condition Type}[AND/OR {Condition Type}]*).\nFor more information, please visit https://docs.reltio.com",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Comma-separated list of properties from object structure that should be returned in a response. Allows you to return a partial object. List of object properties you can find at the response model. Additional system properties are:<ul><li>attributes._lookupCodes: return codes for lookup attributes.</li><li>attributes._lookupValues: return values for lookup attributes.</li></ul>",
                                        "type": "text/plain"
                                    },
                                    "key": "select",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Positive Integer value to identify maximum number of entities to return in a response. Can be used to organize pagination in combination with the \"offset\" parameter.",
                                        "type": "text/plain"
                                    },
                                    "key": "max",
                                    "value": "50"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Positive Integer value to identify starting what element in a result set should be returned in a response. Can be used to organize pagination in combination with the max parameter.",
                                        "type": "text/plain"
                                    },
                                    "key": "offset",
                                    "value": "0"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Entity objects property that should be used for sorting. Can be used in combination with the \"order\" parameter to have reverse order. If this parameter is not provided or if the value cannot be recognized, then no sorting is used.",
                                        "type": "text/plain"
                                    },
                                    "key": "sort",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Order of sorting. Applicable only in combination with the sort parameter. Possible values:\n<ul><li>asc - results are shown in ascending order.</li><li>desc - results are shown in descending order.</li></ul>",
                                        "type": "text/plain"
                                    },
                                    "key": "order",
                                    "value": "asc"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Specifies maximum number of values listed in attributes. This restriction is intended for more efficient responses in the case of very long lists of values in some attributes.",
                                        "type": "text/plain"
                                    },
                                    "key": "defaultMaxValues",
                                    "value": "<int>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "When set to true, documents with search hits in labels get more search relevance score.",
                                        "type": "text/plain"
                                    },
                                    "key": "scoreEnabled",
                                    "value": "false"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Defines whether to include active and expired entities into the results. By default, only active entities are included in the response. Possible values:\n<ul><li>all - include both active and expired entities</li><li>active - include only active entities</li><li>not_active - include only expired entities</li></ul>",
                                        "type": "text/plain"
                                    },
                                    "key": "activeness",
                                    "value": "active"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Specifies if the response should contain created entities. Default is true.",
                                        "type": "text/plain"
                                    },
                                    "key": "returnObjects",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                        "type": "text/plain"
                                    },
                                    "key": "options",
                                    "value": "ovOnly,preserveURIs"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Specifies if the system should apply the request body depending on search results. Default is true.",
                                        "type": "text/plain"
                                    },
                                    "key": "applyIfNoMatches",
                                    "value": "true"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Specifies if the system should return the search results in the response. Default is true.",
                                        "type": "text/plain"
                                    },
                                    "key": "returnMatches",
                                    "value": "true"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"velitd93\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"labore26\": \"<string>\",\n          \"pariatur_a\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"velit8\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"aute7a6\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"tempor7\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nulla5\": \"<string>\",\n          \"laborise\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"incididunt_8\": \"<string>\",\n          \"sinta5\": \"<string>\",\n          \"culpa_502\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"occaecatc64\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "a32e7889-6c83-4e42-a03c-f53ee134ee7e",
                            "name": "successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "entities",
                                        "_conditional"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Enables entities filtering by a condition. Format for filter query parameter: filter=({Condition Type}[AND/OR {Condition Type}]*).\nFor more information, please visit https://docs.reltio.com",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of properties from object structure that should be returned in a response. Allows you to return a partial object. List of object properties you can find at the response model. Additional system properties are:<ul><li>attributes._lookupCodes: return codes for lookup attributes.</li><li>attributes._lookupValues: return values for lookup attributes.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "select",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Positive Integer value to identify maximum number of entities to return in a response. Can be used to organize pagination in combination with the \"offset\" parameter.",
                                                "type": "text/plain"
                                            },
                                            "key": "max",
                                            "value": "50"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Positive Integer value to identify starting what element in a result set should be returned in a response. Can be used to organize pagination in combination with the max parameter.",
                                                "type": "text/plain"
                                            },
                                            "key": "offset",
                                            "value": "0"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Entity objects property that should be used for sorting. Can be used in combination with the \"order\" parameter to have reverse order. If this parameter is not provided or if the value cannot be recognized, then no sorting is used.",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Order of sorting. Applicable only in combination with the sort parameter. Possible values:\n<ul><li>asc - results are shown in ascending order.</li><li>desc - results are shown in descending order.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "order",
                                            "value": "asc"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies maximum number of values listed in attributes. This restriction is intended for more efficient responses in the case of very long lists of values in some attributes.",
                                                "type": "text/plain"
                                            },
                                            "key": "defaultMaxValues",
                                            "value": "<int>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "When set to true, documents with search hits in labels get more search relevance score.",
                                                "type": "text/plain"
                                            },
                                            "key": "scoreEnabled",
                                            "value": "false"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines whether to include active and expired entities into the results. By default, only active entities are included in the response. Possible values:\n<ul><li>all - include both active and expired entities</li><li>active - include only active entities</li><li>not_active - include only expired entities</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "activeness",
                                            "value": "active"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created entities. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>nonOvOnly - If it is specified, then only attributes with ov=\"false\" will be present in the resulting JSON. This option is mutually exclusive with the ovOnly option. Has a lower priority than ovOnly</li><li>ovOnly - If it is specified, then only attributes with ov=\"true\" will be present in the resulting JSON</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>partialOverrideForReference - This option may be used for POST /entities (override entity) request. If this option is presented, platform override all attributes, but for references we do not touch any attributes not involved to referencedAttributeURIs</li><li>preserveHidden - This option may be used for the POST /entities request. If it is true then API will not delete hidden attributes if they are not specified in the request</li><li>preserveURIs - This option may be used for the POST /entities request. If it is true then API takes into account uris that are specified for attribute values inside the request</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "ovOnly,preserveURIs"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the system should apply the request body depending on search results. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "applyIfNoMatches",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the system should return the search results in the response. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnMatches",
                                            "value": "true"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"velitd93\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"labore26\": \"<string>\",\n          \"pariatur_a\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"velit8\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"aute7a6\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"tempor7\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nulla5\": \"<string>\",\n          \"laborise\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"incididunt_8\": \"<string>\",\n          \"sinta5\": \"<string>\",\n          \"culpa_502\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"analyticsAttributes\": {\n      \"occaecatc64\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"secondaryLabel\": \"<string>\",\n    \"label\": \"<string>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"index\": \"<integer>\",\n    \"errors\": {\n      \"severity\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorDetailMessage\": \"<string>\",\n      \"innerErrorData\": {\n        \"exception\": \"<string>\"\n      }\n    },\n    \"object\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"exercitation5\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"aute_7_c\": \"<string>\",\n            \"in_2a\": \"<string>\",\n            \"nona6\": \"<string>\",\n            \"non__eb\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<long>\",\n      \"updatedTime\": \"<long>\",\n      \"attributes\": {},\n      \"uri\": \"<string>\",\n      \"type\": \"<string>\",\n      \"analyticsAttributes\": {\n        \"qui_2a\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ]\n      },\n      \"secondaryLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"refUpdatedBy\": \"<string>\",\n      \"refUpdatedTime\": \"<long>\",\n      \"refCommitTime\": \"<long>\",\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"successful\": \"<boolean>\"\n  },\n  {\n    \"index\": \"<integer>\",\n    \"errors\": {\n      \"severity\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorDetailMessage\": \"<string>\",\n      \"innerErrorData\": {\n        \"exception\": \"<string>\"\n      }\n    },\n    \"object\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"minim_b\": \"<string>\",\n            \"nulla_b4\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"in_ccc\": \"<string>\",\n            \"incididunt_0_9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<long>\",\n      \"updatedTime\": \"<long>\",\n      \"attributes\": {},\n      \"uri\": \"<string>\",\n      \"type\": \"<string>\",\n      \"analyticsAttributes\": {\n        \"in6f\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ]\n      },\n      \"secondaryLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"refUpdatedBy\": \"<string>\",\n      \"refUpdatedTime\": \"<long>\",\n      \"refCommitTime\": \"<long>\",\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"successful\": \"<boolean>\"\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ]
        },
        {
            "name": "Interactions",
            "description": "",
            "item": [
                {
                    "id": "80f68e2c-0be8-49c9-acab-42bbf716cbbe",
                    "name": "/services/reltio/api/:tenantId/interactions",
                    "request": {
                        "name": "/services/reltio/api/:tenantId/interactions",
                        "description": {
                            "content": "This API creates a collection of interactions in the Reltio Platform according to the JSON object definition. To create just one interaction using this API, specify one JSON object in the array.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "reltio",
                                "api",
                                ":tenantId",
                                "interactions"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "This parameter indicates the identifier of an interaction object in the source system",
                                        "type": "text/plain"
                                    },
                                    "key": "crosswalkValue",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "This parameter specifies if the response must contain the created objects",
                                        "type": "text/plain"
                                    },
                                    "key": "returnObjects",
                                    "value": "true"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                        "type": "text/plain"
                                    },
                                    "key": "options",
                                    "value": "sendHidden,sendHidden"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "disabled": false,
                                "description": {
                                    "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                    "type": "text/plain"
                                },
                                "key": "Source-System",
                                "value": "<string>"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"dolor_f\": \"<string>\",\n          \"Ut19e\": \"<string>\",\n          \"Lorem8\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nostrud870\": \"<string>\",\n          \"enim_f6_\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": -11520887,\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"dolor9fa\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in_4\": \"<string>\",\n          \"irure_2\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"minim inci\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "400e8983-6859-4b7a-a95e-51b2f0aa402c",
                            "name": "Successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"dolor_f\": \"<string>\",\n          \"Ut19e\": \"<string>\",\n          \"Lorem8\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nostrud870\": \"<string>\",\n          \"enim_f6_\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": -11520887,\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"dolor9fa\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in_4\": \"<string>\",\n          \"irure_2\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"minim inci\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"index\": \"<integer>\",\n    \"errors\": {\n      \"severity\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorDetailMessage\": \"<string>\",\n      \"innerErrorData\": {\n        \"exception\": \"<string>\"\n      }\n    },\n    \"object\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"velit1\": \"<string>\",\n            \"laboris_07d\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"Excepteur_0\": \"<string>\",\n            \"aliquaaf\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<long>\",\n      \"updatedTime\": \"<long>\",\n      \"attributes\": {},\n      \"members\": {},\n      \"timestamp\": \"dolore minim\",\n      \"uri\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"successful\": \"<boolean>\"\n  },\n  {\n    \"index\": \"<integer>\",\n    \"errors\": {\n      \"severity\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorDetailMessage\": \"<string>\",\n      \"innerErrorData\": {\n        \"exception\": \"<string>\"\n      }\n    },\n    \"object\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"eu_b13\": \"<string>\",\n            \"ametd7\": \"<string>\",\n            \"sunt98\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"occaecatc18\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<long>\",\n      \"updatedTime\": \"<long>\",\n      \"attributes\": {},\n      \"members\": {},\n      \"timestamp\": -20829894,\n      \"uri\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"successful\": \"<boolean>\"\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4883e949-d324-4459-ac75-cfe96eaf7dbc",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"dolor_f\": \"<string>\",\n          \"Ut19e\": \"<string>\",\n          \"Lorem8\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nostrud870\": \"<string>\",\n          \"enim_f6_\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": -11520887,\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"dolor9fa\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in_4\": \"<string>\",\n          \"irure_2\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"minim inci\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "83028112-561f-4582-acef-b01ba2ef1c03",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"dolor_f\": \"<string>\",\n          \"Ut19e\": \"<string>\",\n          \"Lorem8\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nostrud870\": \"<string>\",\n          \"enim_f6_\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": -11520887,\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"dolor9fa\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in_4\": \"<string>\",\n          \"irure_2\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"minim inci\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d1f6ee90-9c28-4e06-ae42-c73e35153a6a",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"dolor_f\": \"<string>\",\n          \"Ut19e\": \"<string>\",\n          \"Lorem8\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nostrud870\": \"<string>\",\n          \"enim_f6_\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": -11520887,\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"dolor9fa\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in_4\": \"<string>\",\n          \"irure_2\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"minim inci\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "13738b0a-0533-4674-b065-03ce5a1967ea",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"dolor_f\": \"<string>\",\n          \"Ut19e\": \"<string>\",\n          \"Lorem8\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nostrud870\": \"<string>\",\n          \"enim_f6_\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": -11520887,\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"dolor9fa\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in_4\": \"<string>\",\n          \"irure_2\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"minim inci\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2a56b296-bca2-472c-b175-86bf37af36e6",
                            "name": "Too many requests, please try later",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"dolor_f\": \"<string>\",\n          \"Ut19e\": \"<string>\",\n          \"Lorem8\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nostrud870\": \"<string>\",\n          \"enim_f6_\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": -11520887,\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"dolor9fa\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in_4\": \"<string>\",\n          \"irure_2\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"minim inci\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Too Many Requests",
                            "code": 429,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "6fcc315a-2479-4fe6-8e50-77020fd91b59",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"dolor_f\": \"<string>\",\n          \"Ut19e\": \"<string>\",\n          \"Lorem8\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nostrud870\": \"<string>\",\n          \"enim_f6_\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": -11520887,\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"dolor9fa\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in_4\": \"<string>\",\n          \"irure_2\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"minim inci\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ecdcf933-c719-4441-8a68-689a1b3e0234",
                            "name": "This status code could represent 2 possible scenarios. First, the 'Service Unavailable' scenario. Second, this status code is used when too many requests are being sent in-parallel and API backpressure mechanism was used to protect the platform. In both scenarios, an exponential backoff mechanism should be used to control the rate of requests sent to the server. ",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"dolor_f\": \"<string>\",\n          \"Ut19e\": \"<string>\",\n          \"Lorem8\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nostrud870\": \"<string>\",\n          \"enim_f6_\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": -11520887,\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"dolor9fa\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in_4\": \"<string>\",\n          \"irure_2\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"minim inci\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c751ac5a-f3b7-4593-8b64-45d42e310a2f",
                            "name": "The request consumes more resources than it is allowed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "interactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter indicates the identifier of an interaction object in the source system",
                                                "type": "text/plain"
                                            },
                                            "key": "crosswalkValue",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "This parameter specifies if the response must contain the created objects",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "true"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>sendHidden - Specifies whether the hidden attributes will appear in the response</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "sendHidden,sendHidden"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "disabled": false,
                                        "description": {
                                            "content": "This parameter indicates the source system that this request is representing. For example, \"configuration/sources/Reltio\" indicates that the data is not loaded from other source systems and is instead created in the Reltio Platform directly.",
                                            "type": "text/plain"
                                        },
                                        "key": "Source-System",
                                        "value": "<string>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"dolor_f\": \"<string>\",\n          \"Ut19e\": \"<string>\",\n          \"Lorem8\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"nostrud870\": \"<string>\",\n          \"enim_f6_\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": -11520887,\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"dolor9fa\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"in_4\": \"<string>\",\n          \"irure_2\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"attributes\": {},\n    \"members\": {},\n    \"timestamp\": \"minim inci\",\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Insufficient Storage (WebDAV) (RFC 4918)",
                            "code": 507,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ]
        },
        {
            "name": "Relationships",
            "description": "",
            "item": [
                {
                    "id": "9d3d5990-9ec6-41d9-a4d2-1afd206c26fa",
                    "name": "/services/reltio/api/:tenantId/relations",
                    "request": {
                        "name": "/services/reltio/api/:tenantId/relations",
                        "description": {
                            "content": "This API saves a collection of relations in the Reltio Platform according to the JSON object definition or to create just one relation using this API, specify one JSON object in the array. You can use the referenced <b>entityURI</b> or referenced entity crosswalk to describe the <b>startObject</b> and/or the <b>endObject</b>. <br>When a new relation is created with URIs for start and end objects, inconsistencies may appear if the relation is created with empty crosswalks inside the <b>startObject</b> and <b>endObject</b> sections. If the <b>connectRelationsToDefaultCrosswalk</b> property available in the physical configuration is enabled and then you create a relation, the <b>startObject</b> and <b>endObject</b> sections are filled with the default crosswalks automatically.</br> <br><b>Note:</b> A crosswalk with the source, which is equal to the value of the default crosswalk in the physical configuration (default value is <b>Reltio</b>), and <b>value=<entity_id></b> is considered as the default crosswalk.</br><br>If the <b>connectRelationsToDefaultCrosswalk</b> property is set to <b>true</b> when a relation is created with empty crosswalks for the start and end objects of the relation, the following rules are applied:<ul><li>If the start entity has a Reltio crosswalk with the same value as its ID, this crosswalk is used as the crosswalk for the start object in the relation. Else, a new Reltio crosswalk with the value equal to the entity ID is created. This new crosswalk is added to the winner contributor of the start entity and the start object of the relation is connected to this new Reltio crosswalk.</li><li>The behavior is the same for the end entity. If the end entity has a Reltio crosswalk with the same value as its ID, this crosswalk is used as the crosswalk for the end object in the relation. Else, a new Reltio crosswalk with the value equal to the entity ID is created. This new crosswalk is added to the winner contributor of the end entity and the end object of the relation is connected to this new Reltio crosswalk.</li></ul></br>",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "reltio",
                                "api",
                                ":tenantId",
                                "relations"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Specifies if the response should contain created relations. Default is true.",
                                        "type": "text/plain"
                                    },
                                    "key": "returnObjects",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                        "type": "text/plain"
                                    },
                                    "key": "options",
                                    "value": "updateAttributeUpdateDates,rejectRelationsToInactiveObjects"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"laboris9\": \"<string>\",\n          \"ipsum_9\": \"<string>\",\n          \"aliquip0db\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"officia_a5\": \"<string>\",\n          \"sit__c5\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"voluptate_156\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"consectetur_6de\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"Ut_5\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"voluptatea\": \"<string>\",\n            \"incididuntb89\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"culpacaa\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"veniam_a6c\": \"<string>\",\n            \"nisi_f\": \"<string>\",\n            \"consequatf\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"quis66\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"proidentd8\": \"<string>\",\n          \"nisi_1\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"estaf9\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"Ut87\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"sit_0b2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"aliquip8\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"magnac8\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"in6c3\": \"<string>\",\n            \"ea_e5e\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"culpac1\": \"<string>\",\n            \"anim9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"Excepteurf7b\": \"<string>\",\n            \"tempora8\": \"<string>\",\n            \"sintac3\": \"<string>\",\n            \"commodob1b\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"laborisf73\": \"<string>\",\n            \"occaecat_1d\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "5c327e22-fa26-49d9-bb7a-6071563e9da0",
                            "name": "Relationships are successfully saved",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "updateAttributeUpdateDates,rejectRelationsToInactiveObjects"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"laboris9\": \"<string>\",\n          \"ipsum_9\": \"<string>\",\n          \"aliquip0db\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"officia_a5\": \"<string>\",\n          \"sit__c5\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"voluptate_156\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"consectetur_6de\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"Ut_5\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"voluptatea\": \"<string>\",\n            \"incididuntb89\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"culpacaa\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"veniam_a6c\": \"<string>\",\n            \"nisi_f\": \"<string>\",\n            \"consequatf\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"quis66\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"proidentd8\": \"<string>\",\n          \"nisi_1\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"estaf9\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"Ut87\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"sit_0b2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"aliquip8\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"magnac8\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"in6c3\": \"<string>\",\n            \"ea_e5e\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"culpac1\": \"<string>\",\n            \"anim9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"Excepteurf7b\": \"<string>\",\n            \"tempora8\": \"<string>\",\n            \"sintac3\": \"<string>\",\n            \"commodob1b\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"laborisf73\": \"<string>\",\n            \"occaecat_1d\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"index\": \"<integer>\",\n    \"errors\": {\n      \"severity\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorDetailMessage\": \"<string>\",\n      \"innerErrorData\": {\n        \"exception\": \"<string>\"\n      }\n    },\n    \"object\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"commodo7_\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"tempor04f\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<long>\",\n      \"updatedTime\": \"<long>\",\n      \"startEntityTO\": {},\n      \"endEntityTO\": {},\n      \"attributes\": {},\n      \"uri\": \"<string>\",\n      \"type\": \"<string>\",\n      \"startRefPinned\": \"<boolean>\",\n      \"analyticsAttributes\": {\n        \"qui_0\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ]\n      },\n      \"endRefPinned\": \"<boolean>\",\n      \"endRefIgnored\": \"<boolean>\",\n      \"startRefIgnored\": \"<boolean>\",\n      \"refUpdatedBy\": \"<string>\",\n      \"refUpdatedTime\": \"<long>\",\n      \"refCommitTime\": \"<long>\",\n      \"startObject\": {\n        \"crosswalks\": [\n          {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"sourceTable\": \"<string>\",\n            \"url\": \"<string>\",\n            \"createDate\": \"<dateTime>\",\n            \"updateDate\": \"<dateTime>\",\n            \"reltioLoadDate\": \"<dateTime>\",\n            \"deleteDate\": \"<string>\",\n            \"crosswalkExternalInfo\": {\n              \"dtssInfo\": {\n                \"tenantId\": \"<string>\",\n                \"operationId\": \"<string>\",\n                \"matchReasons\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"updatedBy\": \"<string>\",\n                \"updatedTime\": \"<long>\",\n                \"status\": \"<string>\",\n                \"matchRuleUris\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              }\n            },\n            \"singleAttributeUpdateDates\": {\n              \"utd\": \"<string>\",\n              \"occaecat_bc\": \"<string>\"\n            },\n            \"attributes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dataProvider\": \"<boolean>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"sourceTable\": \"<string>\",\n            \"url\": \"<string>\",\n            \"createDate\": \"<dateTime>\",\n            \"updateDate\": \"<dateTime>\",\n            \"reltioLoadDate\": \"<dateTime>\",\n            \"deleteDate\": \"<string>\",\n            \"crosswalkExternalInfo\": {\n              \"dtssInfo\": {\n                \"tenantId\": \"<string>\",\n                \"operationId\": \"<string>\",\n                \"matchReasons\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"updatedBy\": \"<string>\",\n                \"updatedTime\": \"<long>\",\n                \"status\": \"<string>\",\n                \"matchRuleUris\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              }\n            },\n            \"singleAttributeUpdateDates\": {\n              \"non5\": \"<string>\",\n              \"in_29\": \"<string>\"\n            },\n            \"attributes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dataProvider\": \"<boolean>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"directionalLabel\": \"<string>\",\n        \"label\": \"<string>\",\n        \"objectURI\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      \"endObject\": {\n        \"crosswalks\": [\n          {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"sourceTable\": \"<string>\",\n            \"url\": \"<string>\",\n            \"createDate\": \"<dateTime>\",\n            \"updateDate\": \"<dateTime>\",\n            \"reltioLoadDate\": \"<dateTime>\",\n            \"deleteDate\": \"<string>\",\n            \"crosswalkExternalInfo\": {\n              \"dtssInfo\": {\n                \"tenantId\": \"<string>\",\n                \"operationId\": \"<string>\",\n                \"matchReasons\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"updatedBy\": \"<string>\",\n                \"updatedTime\": \"<long>\",\n                \"status\": \"<string>\",\n                \"matchRuleUris\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              }\n            },\n            \"singleAttributeUpdateDates\": {\n              \"mollit_d12\": \"<string>\",\n              \"laborum__1\": \"<string>\",\n              \"consequat0f\": \"<string>\",\n              \"veniam_22\": \"<string>\",\n              \"doc\": \"<string>\"\n            },\n            \"attributes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dataProvider\": \"<boolean>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"sourceTable\": \"<string>\",\n            \"url\": \"<string>\",\n            \"createDate\": \"<dateTime>\",\n            \"updateDate\": \"<dateTime>\",\n            \"reltioLoadDate\": \"<dateTime>\",\n            \"deleteDate\": \"<string>\",\n            \"crosswalkExternalInfo\": {\n              \"dtssInfo\": {\n                \"tenantId\": \"<string>\",\n                \"operationId\": \"<string>\",\n                \"matchReasons\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"updatedBy\": \"<string>\",\n                \"updatedTime\": \"<long>\",\n                \"status\": \"<string>\",\n                \"matchRuleUris\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              }\n            },\n            \"singleAttributeUpdateDates\": {\n              \"adipisicing_d\": \"<string>\"\n            },\n            \"attributes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dataProvider\": \"<boolean>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"directionalLabel\": \"<string>\",\n        \"label\": \"<string>\",\n        \"objectURI\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    \"successful\": \"<boolean>\"\n  },\n  {\n    \"index\": \"<integer>\",\n    \"errors\": {\n      \"severity\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorDetailMessage\": \"<string>\",\n      \"innerErrorData\": {\n        \"exception\": \"<string>\"\n      }\n    },\n    \"object\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"non_3d\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"quisc40\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<long>\",\n      \"updatedTime\": \"<long>\",\n      \"startEntityTO\": {},\n      \"endEntityTO\": {},\n      \"attributes\": {},\n      \"uri\": \"<string>\",\n      \"type\": \"<string>\",\n      \"startRefPinned\": \"<boolean>\",\n      \"analyticsAttributes\": {\n        \"anim_a\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"eiusmod_d\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"veniam_642\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"eu__\": [\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"uri\": \"<string>\"\n          }\n        ]\n      },\n      \"endRefPinned\": \"<boolean>\",\n      \"endRefIgnored\": \"<boolean>\",\n      \"startRefIgnored\": \"<boolean>\",\n      \"refUpdatedBy\": \"<string>\",\n      \"refUpdatedTime\": \"<long>\",\n      \"refCommitTime\": \"<long>\",\n      \"startObject\": {\n        \"crosswalks\": [\n          {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"sourceTable\": \"<string>\",\n            \"url\": \"<string>\",\n            \"createDate\": \"<dateTime>\",\n            \"updateDate\": \"<dateTime>\",\n            \"reltioLoadDate\": \"<dateTime>\",\n            \"deleteDate\": \"<string>\",\n            \"crosswalkExternalInfo\": {\n              \"dtssInfo\": {\n                \"tenantId\": \"<string>\",\n                \"operationId\": \"<string>\",\n                \"matchReasons\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"updatedBy\": \"<string>\",\n                \"updatedTime\": \"<long>\",\n                \"status\": \"<string>\",\n                \"matchRuleUris\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              }\n            },\n            \"singleAttributeUpdateDates\": {\n              \"cillum032\": \"<string>\"\n            },\n            \"attributes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dataProvider\": \"<boolean>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"sourceTable\": \"<string>\",\n            \"url\": \"<string>\",\n            \"createDate\": \"<dateTime>\",\n            \"updateDate\": \"<dateTime>\",\n            \"reltioLoadDate\": \"<dateTime>\",\n            \"deleteDate\": \"<string>\",\n            \"crosswalkExternalInfo\": {\n              \"dtssInfo\": {\n                \"tenantId\": \"<string>\",\n                \"operationId\": \"<string>\",\n                \"matchReasons\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"updatedBy\": \"<string>\",\n                \"updatedTime\": \"<long>\",\n                \"status\": \"<string>\",\n                \"matchRuleUris\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              }\n            },\n            \"singleAttributeUpdateDates\": {\n              \"aute5c6\": \"<string>\",\n              \"ut5\": \"<string>\"\n            },\n            \"attributes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dataProvider\": \"<boolean>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"directionalLabel\": \"<string>\",\n        \"label\": \"<string>\",\n        \"objectURI\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      \"endObject\": {\n        \"crosswalks\": [\n          {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"sourceTable\": \"<string>\",\n            \"url\": \"<string>\",\n            \"createDate\": \"<dateTime>\",\n            \"updateDate\": \"<dateTime>\",\n            \"reltioLoadDate\": \"<dateTime>\",\n            \"deleteDate\": \"<string>\",\n            \"crosswalkExternalInfo\": {\n              \"dtssInfo\": {\n                \"tenantId\": \"<string>\",\n                \"operationId\": \"<string>\",\n                \"matchReasons\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"updatedBy\": \"<string>\",\n                \"updatedTime\": \"<long>\",\n                \"status\": \"<string>\",\n                \"matchRuleUris\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              }\n            },\n            \"singleAttributeUpdateDates\": {\n              \"id3\": \"<string>\",\n              \"deseruntaf\": \"<string>\",\n              \"in_0c\": \"<string>\"\n            },\n            \"attributes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dataProvider\": \"<boolean>\",\n            \"uri\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"sourceTable\": \"<string>\",\n            \"url\": \"<string>\",\n            \"createDate\": \"<dateTime>\",\n            \"updateDate\": \"<dateTime>\",\n            \"reltioLoadDate\": \"<dateTime>\",\n            \"deleteDate\": \"<string>\",\n            \"crosswalkExternalInfo\": {\n              \"dtssInfo\": {\n                \"tenantId\": \"<string>\",\n                \"operationId\": \"<string>\",\n                \"matchReasons\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"updatedBy\": \"<string>\",\n                \"updatedTime\": \"<long>\",\n                \"status\": \"<string>\",\n                \"matchRuleUris\": [\n                  \"<string>\",\n                  \"<string>\"\n                ]\n              }\n            },\n            \"singleAttributeUpdateDates\": {\n              \"in_c4d\": \"<string>\"\n            },\n            \"attributes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dataProvider\": \"<boolean>\",\n            \"uri\": \"<string>\"\n          }\n        ],\n        \"directionalLabel\": \"<string>\",\n        \"label\": \"<string>\",\n        \"objectURI\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    \"successful\": \"<boolean>\"\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "fcfc732c-11ad-4c80-beae-86f56924f327",
                            "name": "Relationships aren't saved due to a reason provided in the error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "updateAttributeUpdateDates,rejectRelationsToInactiveObjects"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"laboris9\": \"<string>\",\n          \"ipsum_9\": \"<string>\",\n          \"aliquip0db\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"officia_a5\": \"<string>\",\n          \"sit__c5\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"voluptate_156\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"consectetur_6de\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"Ut_5\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"voluptatea\": \"<string>\",\n            \"incididuntb89\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"culpacaa\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"veniam_a6c\": \"<string>\",\n            \"nisi_f\": \"<string>\",\n            \"consequatf\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"quis66\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"proidentd8\": \"<string>\",\n          \"nisi_1\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"estaf9\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"Ut87\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"sit_0b2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"aliquip8\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"magnac8\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"in6c3\": \"<string>\",\n            \"ea_e5e\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"culpac1\": \"<string>\",\n            \"anim9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"Excepteurf7b\": \"<string>\",\n            \"tempora8\": \"<string>\",\n            \"sintac3\": \"<string>\",\n            \"commodob1b\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"laborisf73\": \"<string>\",\n            \"occaecat_1d\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b6b00175-6705-4f34-ab7e-69c8d6d99f59",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "updateAttributeUpdateDates,rejectRelationsToInactiveObjects"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"laboris9\": \"<string>\",\n          \"ipsum_9\": \"<string>\",\n          \"aliquip0db\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"officia_a5\": \"<string>\",\n          \"sit__c5\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"voluptate_156\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"consectetur_6de\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"Ut_5\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"voluptatea\": \"<string>\",\n            \"incididuntb89\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"culpacaa\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"veniam_a6c\": \"<string>\",\n            \"nisi_f\": \"<string>\",\n            \"consequatf\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"quis66\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"proidentd8\": \"<string>\",\n          \"nisi_1\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"estaf9\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"Ut87\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"sit_0b2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"aliquip8\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"magnac8\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"in6c3\": \"<string>\",\n            \"ea_e5e\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"culpac1\": \"<string>\",\n            \"anim9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"Excepteurf7b\": \"<string>\",\n            \"tempora8\": \"<string>\",\n            \"sintac3\": \"<string>\",\n            \"commodob1b\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"laborisf73\": \"<string>\",\n            \"occaecat_1d\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "819fe916-acba-4136-a795-f7d1e147566a",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "updateAttributeUpdateDates,rejectRelationsToInactiveObjects"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"laboris9\": \"<string>\",\n          \"ipsum_9\": \"<string>\",\n          \"aliquip0db\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"officia_a5\": \"<string>\",\n          \"sit__c5\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"voluptate_156\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"consectetur_6de\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"Ut_5\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"voluptatea\": \"<string>\",\n            \"incididuntb89\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"culpacaa\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"veniam_a6c\": \"<string>\",\n            \"nisi_f\": \"<string>\",\n            \"consequatf\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"quis66\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"proidentd8\": \"<string>\",\n          \"nisi_1\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"estaf9\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"Ut87\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"sit_0b2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"aliquip8\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"magnac8\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"in6c3\": \"<string>\",\n            \"ea_e5e\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"culpac1\": \"<string>\",\n            \"anim9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"Excepteurf7b\": \"<string>\",\n            \"tempora8\": \"<string>\",\n            \"sintac3\": \"<string>\",\n            \"commodob1b\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"laborisf73\": \"<string>\",\n            \"occaecat_1d\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "827ff633-60c2-484a-8ab4-47746328098d",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "updateAttributeUpdateDates,rejectRelationsToInactiveObjects"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"laboris9\": \"<string>\",\n          \"ipsum_9\": \"<string>\",\n          \"aliquip0db\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"officia_a5\": \"<string>\",\n          \"sit__c5\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"voluptate_156\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"consectetur_6de\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"Ut_5\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"voluptatea\": \"<string>\",\n            \"incididuntb89\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"culpacaa\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"veniam_a6c\": \"<string>\",\n            \"nisi_f\": \"<string>\",\n            \"consequatf\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"quis66\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"proidentd8\": \"<string>\",\n          \"nisi_1\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"estaf9\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"Ut87\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"sit_0b2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"aliquip8\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"magnac8\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"in6c3\": \"<string>\",\n            \"ea_e5e\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"culpac1\": \"<string>\",\n            \"anim9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"Excepteurf7b\": \"<string>\",\n            \"tempora8\": \"<string>\",\n            \"sintac3\": \"<string>\",\n            \"commodob1b\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"laborisf73\": \"<string>\",\n            \"occaecat_1d\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a7ebb32e-80b0-43e0-8682-a56cf1913759",
                            "name": "Too many requests, please try later",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "updateAttributeUpdateDates,rejectRelationsToInactiveObjects"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"laboris9\": \"<string>\",\n          \"ipsum_9\": \"<string>\",\n          \"aliquip0db\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"officia_a5\": \"<string>\",\n          \"sit__c5\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"voluptate_156\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"consectetur_6de\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"Ut_5\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"voluptatea\": \"<string>\",\n            \"incididuntb89\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"culpacaa\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"veniam_a6c\": \"<string>\",\n            \"nisi_f\": \"<string>\",\n            \"consequatf\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"quis66\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"proidentd8\": \"<string>\",\n          \"nisi_1\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"estaf9\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"Ut87\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"sit_0b2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"aliquip8\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"magnac8\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"in6c3\": \"<string>\",\n            \"ea_e5e\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"culpac1\": \"<string>\",\n            \"anim9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"Excepteurf7b\": \"<string>\",\n            \"tempora8\": \"<string>\",\n            \"sintac3\": \"<string>\",\n            \"commodob1b\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"laborisf73\": \"<string>\",\n            \"occaecat_1d\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Too Many Requests",
                            "code": 429,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "6e526ce0-b5c1-4a42-a142-2efd460afd3c",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "updateAttributeUpdateDates,rejectRelationsToInactiveObjects"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"laboris9\": \"<string>\",\n          \"ipsum_9\": \"<string>\",\n          \"aliquip0db\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"officia_a5\": \"<string>\",\n          \"sit__c5\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"voluptate_156\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"consectetur_6de\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"Ut_5\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"voluptatea\": \"<string>\",\n            \"incididuntb89\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"culpacaa\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"veniam_a6c\": \"<string>\",\n            \"nisi_f\": \"<string>\",\n            \"consequatf\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"quis66\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"proidentd8\": \"<string>\",\n          \"nisi_1\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"estaf9\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"Ut87\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"sit_0b2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"aliquip8\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"magnac8\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"in6c3\": \"<string>\",\n            \"ea_e5e\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"culpac1\": \"<string>\",\n            \"anim9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"Excepteurf7b\": \"<string>\",\n            \"tempora8\": \"<string>\",\n            \"sintac3\": \"<string>\",\n            \"commodob1b\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"laborisf73\": \"<string>\",\n            \"occaecat_1d\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "727bffab-f6be-4228-8e73-315b92c2fb33",
                            "name": "This status code could represent 2 possible scenarios. First, the 'Service Unavailable' scenario. Second, this status code is used when too many requests are being sent in-parallel and API backpressure mechanism was used to protect the platform. In both scenarios, an exponential backoff mechanism should be used to control the rate of requests sent to the server. ",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "updateAttributeUpdateDates,rejectRelationsToInactiveObjects"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"laboris9\": \"<string>\",\n          \"ipsum_9\": \"<string>\",\n          \"aliquip0db\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"officia_a5\": \"<string>\",\n          \"sit__c5\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"voluptate_156\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"consectetur_6de\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"Ut_5\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"voluptatea\": \"<string>\",\n            \"incididuntb89\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"culpacaa\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"veniam_a6c\": \"<string>\",\n            \"nisi_f\": \"<string>\",\n            \"consequatf\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"quis66\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"proidentd8\": \"<string>\",\n          \"nisi_1\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"estaf9\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"Ut87\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"sit_0b2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"aliquip8\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"magnac8\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"in6c3\": \"<string>\",\n            \"ea_e5e\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"culpac1\": \"<string>\",\n            \"anim9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"Excepteurf7b\": \"<string>\",\n            \"tempora8\": \"<string>\",\n            \"sintac3\": \"<string>\",\n            \"commodob1b\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"laborisf73\": \"<string>\",\n            \"occaecat_1d\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "aed75d84-ee5e-430f-bb9a-2a96b8fc3d65",
                            "name": "The request consumes more resources than it is allowed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "reltio",
                                        "api",
                                        ":tenantId",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specifies if the response should contain created relations. Default is true.",
                                                "type": "text/plain"
                                            },
                                            "key": "returnObjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Comma-separated list of different options which affect endpoints behaviour. Available options:<ul><li>ignoreOverrideIgnorePinSetting - This option may be used for POST /entities and POST /relations requests. If it is specified then 'overrideIgnorePin' setting in business model will be ignored for the 'override' action</li><li>partialOverride - This option may be used for POST /entities or POST /relations (override entity or relation) request. If this option is presented, platform overrides attributes that are specified in the request. We do not touch any other attributes of the dataprovider crosswalk</li><li>rejectRelationsToInactiveObjects - This option may be used to validate entities used for creating relations should be active. If the value is present it will not allow the creation of relation if any/both entity is/are inactive</li><li>updateAttributeUpdateDates - This option may be used for POST /entities and POST /relations  requests. 'singleAttributeUpdateDates' property of crosswalks will be updated for changed and new attributes if this option is presented.</li></ul>",
                                                "type": "text/plain"
                                            },
                                            "key": "options",
                                            "value": "updateAttributeUpdateDates,rejectRelationsToInactiveObjects"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"laboris9\": \"<string>\",\n          \"ipsum_9\": \"<string>\",\n          \"aliquip0db\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"officia_a5\": \"<string>\",\n          \"sit__c5\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"voluptate_156\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"consectetur_6de\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"Ut_5\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"voluptatea\": \"<string>\",\n            \"incididuntb89\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"culpacaa\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"veniam_a6c\": \"<string>\",\n            \"nisi_f\": \"<string>\",\n            \"consequatf\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"quis66\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  {\n    \"crosswalks\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"proidentd8\": \"<string>\",\n          \"nisi_1\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"sourceTable\": \"<string>\",\n        \"url\": \"<string>\",\n        \"createDate\": \"<dateTime>\",\n        \"updateDate\": \"<dateTime>\",\n        \"reltioLoadDate\": \"<dateTime>\",\n        \"deleteDate\": \"<string>\",\n        \"crosswalkExternalInfo\": {\n          \"dtssInfo\": {\n            \"tenantId\": \"<string>\",\n            \"operationId\": \"<string>\",\n            \"matchReasons\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"updatedBy\": \"<string>\",\n            \"updatedTime\": \"<long>\",\n            \"status\": \"<string>\",\n            \"matchRuleUris\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"singleAttributeUpdateDates\": {\n          \"estaf9\": \"<string>\"\n        },\n        \"attributes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dataProvider\": \"<boolean>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"createdBy\": \"<string>\",\n    \"updatedBy\": \"<string>\",\n    \"createdTime\": \"<long>\",\n    \"updatedTime\": \"<long>\",\n    \"startEntityTO\": {},\n    \"endEntityTO\": {},\n    \"attributes\": {},\n    \"uri\": \"<string>\",\n    \"type\": \"<string>\",\n    \"startRefPinned\": \"<boolean>\",\n    \"analyticsAttributes\": {\n      \"Ut87\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"sit_0b2\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"aliquip8\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"magnac8\": [\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"uri\": \"<string>\"\n        }\n      ]\n    },\n    \"endRefPinned\": \"<boolean>\",\n    \"endRefIgnored\": \"<boolean>\",\n    \"startRefIgnored\": \"<boolean>\",\n    \"refUpdatedBy\": \"<string>\",\n    \"refUpdatedTime\": \"<long>\",\n    \"refCommitTime\": \"<long>\",\n    \"startObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"in6c3\": \"<string>\",\n            \"ea_e5e\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"culpac1\": \"<string>\",\n            \"anim9\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"endObject\": {\n      \"crosswalks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"Excepteurf7b\": \"<string>\",\n            \"tempora8\": \"<string>\",\n            \"sintac3\": \"<string>\",\n            \"commodob1b\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"sourceTable\": \"<string>\",\n          \"url\": \"<string>\",\n          \"createDate\": \"<dateTime>\",\n          \"updateDate\": \"<dateTime>\",\n          \"reltioLoadDate\": \"<dateTime>\",\n          \"deleteDate\": \"<string>\",\n          \"crosswalkExternalInfo\": {\n            \"dtssInfo\": {\n              \"tenantId\": \"<string>\",\n              \"operationId\": \"<string>\",\n              \"matchReasons\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"updatedBy\": \"<string>\",\n              \"updatedTime\": \"<long>\",\n              \"status\": \"<string>\",\n              \"matchRuleUris\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          \"singleAttributeUpdateDates\": {\n            \"laborisf73\": \"<string>\",\n            \"occaecat_1d\": \"<string>\"\n          },\n          \"attributes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dataProvider\": \"<boolean>\",\n          \"uri\": \"<string>\"\n        }\n      ],\n      \"directionalLabel\": \"<string>\",\n      \"label\": \"<string>\",\n      \"objectURI\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Insufficient Storage (WebDAV) (RFC 4918)",
                            "code": 507,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ]
        },
        {
            "name": "Data Load Job",
            "description": "",
            "item": [
                {
                    "id": "d317ee2e-67bb-4d9d-83c3-5d13f3f6cfa7",
                    "name": "/services/dataloader/api/:tenantId/_mapping",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/_mapping",
                        "description": {
                            "content": "Creates a new mapping for an object type. For creating the mapping, you must provide details for 'object type', 'summary', 'name', and 'object type URI'",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "_mapping"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "ce1709c4-ab44-403f-8796-b45cdfde4f98",
                            "name": "Mapping is created successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1394db2b-8c1d-4ffa-9671-980edd738fcc",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4856815a-2474-49c4-ab04-85975d748cff",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8c7177b6-9717-47e7-92af-98dcbe2f49ce",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6b487524-a757-4c46-9bd3-9b77d758afa3",
                            "name": "The resource requested was not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4db19bba-93d0-4498-a08d-6f1633c65212",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "80b057c4-4b5d-42de-b4a9-1f4e1119fad6",
                    "name": "/services/dataloader/api/:tenantId/_mapping/:mappingId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/_mapping/:mappingId",
                        "description": {
                            "content": "Retrieves the existing mapping details using an ID",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "_mapping",
                                ":mappingId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "If true, API response includes the job definition IDs associated with the mapping",
                                        "type": "text/plain"
                                    },
                                    "key": "includeProjects",
                                    "value": "<boolean>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "mappingId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Defines the ID of the mapping for which details are to be retrieved",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "8f8d49b4-bca5-4a36-bcd3-974572766e0d",
                            "name": "The details for mapping are retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If true, API response includes the job definition IDs associated with the mapping",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "31248c63-bdc3-4686-a24d-e91883e8d55d",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If true, API response includes the job definition IDs associated with the mapping",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d855e22c-2b46-45f7-aeb3-4eed4a4c6640",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If true, API response includes the job definition IDs associated with the mapping",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a605e917-2243-4e2e-bf2d-b503d8170921",
                            "name": "Check your privileges to do this operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If true, API response includes the job definition IDs associated with the mapping",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "41280284-6303-44dd-86c9-c86c4cc145c4",
                            "name": "Resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If true, API response includes the job definition IDs associated with the mapping",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "05d5ad58-984d-42f9-aa1e-518384f3b848",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If true, API response includes the job definition IDs associated with the mapping",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "63fa2172-ad0d-446e-88f7-ccc36786b24c",
                    "name": "/services/dataloader/api/:tenantId/_mapping/:mappingId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/_mapping/:mappingId",
                        "description": {
                            "content": "Updates an existing mapping. You can add new values for a field or modify the existing values. Before saving the updates, the mapping details are validated based on the business rules",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "_mapping",
                                ":mappingId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "mappingId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the mapping for which the details are to be updated",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "60edf33e-6bf9-4621-9716-06bbc6456450",
                            "name": "Mapping is updated successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a149b647-44d5-4b45-bba9-b34e63ecaa03",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ef6d4d3b-3698-48fc-a6ee-7c0648a687d6",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "28925eae-47ff-4975-bc5a-86b324a39019",
                            "name": "Check your privileges to do this operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "961aa468-b680-47d2-9607-87e9cb0ae461",
                            "name": "Resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e8aabc1e-4f6d-4b45-ac71-54ebbdf6bbef",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"mappingForObjectType\": \"ENTITIES\",\n  \"mappingName\": \"<string>\",\n  \"mappingSummary\": \"<string>\",\n  \"objectTypeUri\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"mappingId\": \"<integer>\",\n  \"tenantId\": \"<string>\",\n  \"shareMappingDetails\": \"<boolean>\",\n  \"projectIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "3f9489d5-6470-45e5-8155-34379365973c",
                    "name": "/services/dataloader/api/:tenantId/_mapping/:mappingId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/_mapping/:mappingId",
                        "description": {
                            "content": "Deletes an existing mapping if all the business rules are met. The mapping cannot be deleted if it is being used by any job definition",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "_mapping",
                                ":mappingId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "mappingId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the mapping that must be deleted",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "81175557-1454-48b4-bf61-c0802e2d9f7f",
                            "name": "Mapping is deleted successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "654a8f86-223e-4990-adfc-910845b26352",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "cc8385c4-4c74-45e4-9de9-f6ccae226f3b",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c5d2d5e7-b82a-44b2-afc4-e68f4211b3e9",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "59bd91d0-15ad-494b-adab-72a6fa20861e",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9e676994-648e-4f92-8a4a-7a212fc66d7a",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a7ed7e8d-7270-4950-b474-15f4e2aaad6c",
                            "name": "Service Unavailable",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mapping",
                                        ":mappingId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "20619277-3535-44d9-a8c4-e555e0a94138",
                    "name": "/services/dataloader/api/:tenantId/_mappings",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/_mappings",
                        "description": {
                            "content": "Retrieve the details of all mappings for a tenant matching the filter criteria",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "_mappings"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Object type URL for which mappings must be retrieved",
                                        "type": "text/plain"
                                    },
                                    "key": "entityType",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Specify the user name that must be included in the 'equals' and 'not equals' operations while retrieving the mapping details.<br> <b>For example</b>: <li>'createdBy=username@reltio.com' - returns the list of mappings created by the specified user for the tenant</li> <li>'createdBy=username@reltio.com:notequals' - returns the list of mappings which are not created by the specified user for the tenant</li>",
                                        "type": "text/plain"
                                    },
                                    "key": "createdBy",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Long value of date. API returns all the mappings created on or after the specified date",
                                        "type": "text/plain"
                                    },
                                    "key": "creationDate",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                        "type": "text/plain"
                                    },
                                    "key": "page",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Number of objects that need to be returned with a paged response",
                                        "type": "text/plain"
                                    },
                                    "key": "size",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the mappings in the ascending order of Tenant ID, 'sort=tenantId:desc' - sorts the mapping in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,objectTypeUri' - sorts the API response in the descending order of Tenant ID and 'objectTypeUris' are used for second order sorting",
                                        "type": "text/plain"
                                    },
                                    "key": "sort",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "If 'true', API response includes the job definitions IDs",
                                        "type": "text/plain"
                                    },
                                    "key": "includeProjects",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "39290803-5df4-46cb-9f7a-b2388923c775",
                            "name": "Mapping details matching criteria are retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mappings"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Object type URL for which mappings must be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "entityType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specify the user name that must be included in the 'equals' and 'not equals' operations while retrieving the mapping details.<br> <b>For example</b>: <li>'createdBy=username@reltio.com' - returns the list of mappings created by the specified user for the tenant</li> <li>'createdBy=username@reltio.com:notequals' - returns the list of mappings which are not created by the specified user for the tenant</li>",
                                                "type": "text/plain"
                                            },
                                            "key": "createdBy",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Long value of date. API returns all the mappings created on or after the specified date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the mappings in the ascending order of Tenant ID, 'sort=tenantId:desc' - sorts the mapping in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,objectTypeUri' - sorts the API response in the descending order of Tenant ID and 'objectTypeUris' are used for second order sorting",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'true', API response includes the job definitions IDs",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"mappingForObjectType\": \"RELATIONS\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "88a5be1d-f6b7-4d15-9daa-a534541731c5",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mappings"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Object type URL for which mappings must be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "entityType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specify the user name that must be included in the 'equals' and 'not equals' operations while retrieving the mapping details.<br> <b>For example</b>: <li>'createdBy=username@reltio.com' - returns the list of mappings created by the specified user for the tenant</li> <li>'createdBy=username@reltio.com:notequals' - returns the list of mappings which are not created by the specified user for the tenant</li>",
                                                "type": "text/plain"
                                            },
                                            "key": "createdBy",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Long value of date. API returns all the mappings created on or after the specified date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the mappings in the ascending order of Tenant ID, 'sort=tenantId:desc' - sorts the mapping in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,objectTypeUri' - sorts the API response in the descending order of Tenant ID and 'objectTypeUris' are used for second order sorting",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'true', API response includes the job definitions IDs",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "097429ce-d3d1-4036-a9b1-bdb07717e996",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mappings"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Object type URL for which mappings must be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "entityType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specify the user name that must be included in the 'equals' and 'not equals' operations while retrieving the mapping details.<br> <b>For example</b>: <li>'createdBy=username@reltio.com' - returns the list of mappings created by the specified user for the tenant</li> <li>'createdBy=username@reltio.com:notequals' - returns the list of mappings which are not created by the specified user for the tenant</li>",
                                                "type": "text/plain"
                                            },
                                            "key": "createdBy",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Long value of date. API returns all the mappings created on or after the specified date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the mappings in the ascending order of Tenant ID, 'sort=tenantId:desc' - sorts the mapping in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,objectTypeUri' - sorts the API response in the descending order of Tenant ID and 'objectTypeUris' are used for second order sorting",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'true', API response includes the job definitions IDs",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1f840a1f-f67d-433b-b0aa-73ea562c260d",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mappings"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Object type URL for which mappings must be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "entityType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specify the user name that must be included in the 'equals' and 'not equals' operations while retrieving the mapping details.<br> <b>For example</b>: <li>'createdBy=username@reltio.com' - returns the list of mappings created by the specified user for the tenant</li> <li>'createdBy=username@reltio.com:notequals' - returns the list of mappings which are not created by the specified user for the tenant</li>",
                                                "type": "text/plain"
                                            },
                                            "key": "createdBy",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Long value of date. API returns all the mappings created on or after the specified date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the mappings in the ascending order of Tenant ID, 'sort=tenantId:desc' - sorts the mapping in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,objectTypeUri' - sorts the API response in the descending order of Tenant ID and 'objectTypeUris' are used for second order sorting",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'true', API response includes the job definitions IDs",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e1a5a37c-d300-43e5-96a3-88c2e4c7f72f",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mappings"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Object type URL for which mappings must be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "entityType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specify the user name that must be included in the 'equals' and 'not equals' operations while retrieving the mapping details.<br> <b>For example</b>: <li>'createdBy=username@reltio.com' - returns the list of mappings created by the specified user for the tenant</li> <li>'createdBy=username@reltio.com:notequals' - returns the list of mappings which are not created by the specified user for the tenant</li>",
                                                "type": "text/plain"
                                            },
                                            "key": "createdBy",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Long value of date. API returns all the mappings created on or after the specified date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the mappings in the ascending order of Tenant ID, 'sort=tenantId:desc' - sorts the mapping in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,objectTypeUri' - sorts the API response in the descending order of Tenant ID and 'objectTypeUris' are used for second order sorting",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'true', API response includes the job definitions IDs",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "71a188c1-a2ec-4da0-b754-2dbdc0176487",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "_mappings"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Object type URL for which mappings must be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "entityType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Specify the user name that must be included in the 'equals' and 'not equals' operations while retrieving the mapping details.<br> <b>For example</b>: <li>'createdBy=username@reltio.com' - returns the list of mappings created by the specified user for the tenant</li> <li>'createdBy=username@reltio.com:notequals' - returns the list of mappings which are not created by the specified user for the tenant</li>",
                                                "type": "text/plain"
                                            },
                                            "key": "createdBy",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Long value of date. API returns all the mappings created on or after the specified date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the mappings in the ascending order of Tenant ID, 'sort=tenantId:desc' - sorts the mapping in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,objectTypeUri' - sorts the API response in the descending order of Tenant ID and 'objectTypeUris' are used for second order sorting",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'true', API response includes the job definitions IDs",
                                                "type": "text/plain"
                                            },
                                            "key": "includeProjects",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "d8e48fc7-cc45-4678-add4-3d2ea0705840",
                    "name": "/services/dataloader/api/:tenantId/configuration/_limits",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/configuration/_limits",
                        "description": {
                            "content": "Retrieves all the existing limits for a tenant matching the filter criteria",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "configuration",
                                "_limits"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Name of the environment used to filter and get limits. ",
                                        "type": "text/plain"
                                    },
                                    "key": "environment",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                        "type": "text/plain"
                                    },
                                    "key": "page",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Number of objects that need to be returned with a paged response",
                                        "type": "text/plain"
                                    },
                                    "key": "size",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the source details in the ascending order of tenantId, 'sort=tenantId:desc' - sorts the source details in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,environment:desc' - sorts the API response in the descending order of tenantId and 'environment'",
                                        "type": "text/plain"
                                    },
                                    "key": "sort",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "6f121754-180a-459a-8919-3e7850fbb886",
                            "name": "All existing limits are retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the environment used to filter and get limits. ",
                                                "type": "text/plain"
                                            },
                                            "key": "environment",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the source details in the ascending order of tenantId, 'sort=tenantId:desc' - sorts the source details in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,environment:desc' - sorts the API response in the descending order of tenantId and 'environment'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"environment\": \"<string>\",\n    \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n    \"limitType\": \"STRING\",\n    \"value\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<integer>\",\n    \"tenantId\": \"<string>\"\n  },\n  {\n    \"environment\": \"<string>\",\n    \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n    \"limitType\": \"BOOLEAN\",\n    \"value\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<integer>\",\n    \"tenantId\": \"<string>\"\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "25aac8a2-d8dc-4723-b61e-aecca8a21b4f",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the environment used to filter and get limits. ",
                                                "type": "text/plain"
                                            },
                                            "key": "environment",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the source details in the ascending order of tenantId, 'sort=tenantId:desc' - sorts the source details in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,environment:desc' - sorts the API response in the descending order of tenantId and 'environment'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "aea1d725-bc54-4df7-b001-e0490a13781a",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the environment used to filter and get limits. ",
                                                "type": "text/plain"
                                            },
                                            "key": "environment",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the source details in the ascending order of tenantId, 'sort=tenantId:desc' - sorts the source details in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,environment:desc' - sorts the API response in the descending order of tenantId and 'environment'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3709e58c-4b95-40c4-afa6-cbec608a6ed0",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the environment used to filter and get limits. ",
                                                "type": "text/plain"
                                            },
                                            "key": "environment",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the source details in the ascending order of tenantId, 'sort=tenantId:desc' - sorts the source details in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,environment:desc' - sorts the API response in the descending order of tenantId and 'environment'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "00062f12-900f-4312-a600-b8d1ce8ecf23",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the environment used to filter and get limits. ",
                                                "type": "text/plain"
                                            },
                                            "key": "environment",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the source details in the ascending order of tenantId, 'sort=tenantId:desc' - sorts the source details in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,environment:desc' - sorts the API response in the descending order of tenantId and 'environment'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b2ab2fb1-00f7-4ac8-990f-75c9201cc2aa",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the environment used to filter and get limits. ",
                                                "type": "text/plain"
                                            },
                                            "key": "environment",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=tenantId' - sorts the source details in the ascending order of tenantId, 'sort=tenantId:desc' - sorts the source details in the descending order of Tenant ID. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,environment:desc' - sorts the API response in the descending order of tenantId and 'environment'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "a412111a-715b-4ecf-ad01-77e6001df172",
                    "name": "/services/dataloader/api/:tenantId/configuration/_limits",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/configuration/_limits",
                        "description": {
                            "content": "Creates limits. While creating limits, you must provide the limit name, value, and datatype",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "configuration",
                                "_limits"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "f88b978f-33d7-4cdd-a1a6-d34a7c4d717c",
                            "name": "Resource is created successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c2a2486e-d054-4779-b7d6-4c9e14fe983e",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "544a36cf-1c4c-4a53-8601-b392b41e0806",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e548cf0b-34f2-4f7f-801e-33d198e6add1",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ab86e896-d3bb-4574-ac40-43b04f01ea97",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e5f0fb66-3d3b-4841-8215-86c09248313a",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "227e010c-adc5-4ff3-b969-22f74e4e61bb",
                    "name": "/services/dataloader/api/:tenantId/configuration/_limits/:id",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/configuration/_limits/:id",
                        "description": {
                            "content": "Retrieves the details of a limit",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "configuration",
                                "_limits",
                                ":id"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "id",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the existing limit for which the details must be retrieved",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "803853c3-8dad-4b80-a62a-cea257be2769",
                            "name": "Limit retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "56f748a2-69ba-45a1-943c-e65ec6e6c563",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6a146634-2512-4b46-a3b9-66421bbf3c29",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "45a8d871-cd6f-4af6-b794-0b3da111c1da",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1595ca2b-7f94-4a8b-b6ec-7c06491bfc0c",
                            "name": "Resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b00f9f60-716c-466f-a122-ddfa74f1ce2f",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "7626c924-88e8-451e-b3d4-6959c16e39c0",
                    "name": "/services/dataloader/api/:tenantId/configuration/_limits/:id",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/configuration/_limits/:id",
                        "description": {
                            "content": "Updates the existing limit. The updated limits are used while creating the new job",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "configuration",
                                "_limits",
                                ":id"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "id",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the existing limit for which the details must be updated",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "0e9ad501-8a6d-4cba-90ba-14dfb8db1de2",
                            "name": "Limit updated successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c1e69bfd-306e-47b4-b6a3-a8d08ffdb15f",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a63f73a2-2b48-4ebc-be6e-532f09b6680d",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2ec1ba55-9187-4f13-ba2e-f642bfe8f20f",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9a96e1e4-2101-4565-a011-a01b6e1dcc66",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9ccfa33d-2f76-4ba1-9d73-92a1e20d0723",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"limitName\": \"MAX_RECORDS_TO_LOAD\",\n  \"limitType\": \"STRING\",\n  \"value\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<integer>\",\n  \"tenantId\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "3c122c2a-7d11-402b-a6dd-6c76cacf4514",
                    "name": "/services/dataloader/api/:tenantId/configuration/_limits/:id",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/configuration/_limits/:id",
                        "description": {
                            "content": "Delete an existing limit using the ID",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "configuration",
                                "_limits",
                                ":id"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "id",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the existing limit for which the details must be deleted",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "b94c1412-d3d9-4a62-9dd8-1953a7e7c7ca",
                            "name": "Limit deleted successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "7be693f5-4e30-4731-8496-9c808fb90c2f",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3665b0d3-e040-4b51-ba4c-b32fabb7d330",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "537a578c-d9d8-475c-9c81-73b06c7ceed6",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7ff5cc18-717b-4c62-8928-cdab5ceb9542",
                            "name": "Resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "eb232735-83bc-450b-81bd-fbbbf868abe8",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "configuration",
                                        "_limits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "bcbdc75d-7a4c-4491-9a8b-9329ccd390d4",
                    "name": "/services/dataloader/api/:tenantId/project",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project",
                        "description": {
                            "content": "Creates a new job definition by using existing mapping and storage details",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"FULL_UPDATE\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"AWS_S3\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "93b70725-26d2-4811-8601-e00d6baa7b5c",
                            "name": "Job definition is created successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"FULL_UPDATE\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"AWS_S3\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"FULL_UPDATE\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"AWS_S3\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8297697a-369d-4fd2-ab75-b9780f00d418",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"FULL_UPDATE\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"AWS_S3\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4158949c-f416-40ad-93f6-9da785fc71ff",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"FULL_UPDATE\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"AWS_S3\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7225c030-0472-4cbf-9fc8-9a7fac43a3a8",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"FULL_UPDATE\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"AWS_S3\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "98f80d61-cca4-46fc-91c4-972b275a7bd2",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"FULL_UPDATE\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"AWS_S3\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c2d3d580-8f9e-49a4-b37c-d1c4060dbed3",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"FULL_UPDATE\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"AWS_S3\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "87fefbcd-2e1d-4f3b-90f5-76c4692dac6f",
                    "name": "/services/dataloader/api/:tenantId/project/data/source",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/data/source",
                        "description": {
                            "content": "Retrieves existing source details for a tenant matching the filter criteria",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "data",
                                "source"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                        "type": "text/plain"
                                    },
                                    "key": "page",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Number of objects that need to be returned with a paged response",
                                        "type": "text/plain"
                                    },
                                    "key": "size",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=sourcePath' - sorts the source details in the ascending order of sourcePath, 'sort=sourcePath:desc' - sorts the source details in the descending order of sourcePath <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=sourcePath:desc,bucketName' - sorts the API response in the descending order of sourcePath and 'bucketName'",
                                        "type": "text/plain"
                                    },
                                    "key": "sort",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "2c9886a4-c7e0-4c29-a8e0-1f643110b620",
                            "name": "Source details are returned successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=sourcePath' - sorts the source details in the ascending order of sourcePath, 'sort=sourcePath:desc' - sorts the source details in the descending order of sourcePath <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=sourcePath:desc,bucketName' - sorts the API response in the descending order of sourcePath and 'bucketName'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"GCP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"SFTP\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "fceb47bf-304d-4673-a406-fa305f976446",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=sourcePath' - sorts the source details in the ascending order of sourcePath, 'sort=sourcePath:desc' - sorts the source details in the descending order of sourcePath <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=sourcePath:desc,bucketName' - sorts the API response in the descending order of sourcePath and 'bucketName'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7ae16b9b-c92e-4ba1-a45e-79e541d699ef",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=sourcePath' - sorts the source details in the ascending order of sourcePath, 'sort=sourcePath:desc' - sorts the source details in the descending order of sourcePath <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=sourcePath:desc,bucketName' - sorts the API response in the descending order of sourcePath and 'bucketName'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "09370b73-7f25-4284-8419-604c9344eea0",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=sourcePath' - sorts the source details in the ascending order of sourcePath, 'sort=sourcePath:desc' - sorts the source details in the descending order of sourcePath <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=sourcePath:desc,bucketName' - sorts the API response in the descending order of sourcePath and 'bucketName'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "678bfed0-387a-421d-9689-f493f61b300f",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=sourcePath' - sorts the source details in the ascending order of sourcePath, 'sort=sourcePath:desc' - sorts the source details in the descending order of sourcePath <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=sourcePath:desc,bucketName' - sorts the API response in the descending order of sourcePath and 'bucketName'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "96e1c818-c50e-4b5e-9a42-b770078f5256",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=sourcePath' - sorts the source details in the ascending order of sourcePath, 'sort=sourcePath:desc' - sorts the source details in the descending order of sourcePath <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=sourcePath:desc,bucketName' - sorts the API response in the descending order of sourcePath and 'bucketName'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "1076d361-1cea-4c60-9be2-eedbdc84a1fc",
                    "name": "/services/dataloader/api/:tenantId/project/data/source",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/data/source",
                        "description": {
                            "content": "Checks whether a valid file exists for the provided source information before creating a new source. While creating a source, you must provide all the mandatory information",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "data",
                                "source"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "f1b9273d-fd46-48a8-9ea7-2320635c81fc",
                            "name": "Source details are created successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3c38a14f-bec0-44b2-865c-dece314d1bee",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ce905988-017c-462e-b8a9-eb7f271eee2c",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "09a8b157-7519-4e2f-b8be-2cbae2d34500",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "521943f2-07e0-459a-ba1e-309d45ed78cd",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6e70cb5e-2e6a-44bb-8725-281775054441",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "b02e009f-30fd-45ba-aba2-860eedc12bdb",
                    "name": "/services/dataloader/api/:tenantId/project/data/source/:sourceId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/data/source/:sourceId",
                        "description": {
                            "content": "Retrieves the existing source details using the ID",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "data",
                                "source",
                                ":sourceId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "sourceId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Source ID for which the details must be retrieved",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "216a9f35-5a23-4540-ba0a-5a7b2db6e5e7",
                            "name": "Returns the existing source details",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "bffe353e-a03f-468b-9ba1-4dae2f5791cf",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f807de10-8bab-4580-b74f-c3221d0c99f9",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1d8363dc-2281-4127-a078-3b0378d8d869",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "252b4152-5ee8-43dd-881e-4a2417432952",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7251c64d-9f49-41da-bdb8-08dd132429ac",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "d8404322-5ace-449b-8713-92e9a70aea6b",
                    "name": "/services/dataloader/api/:tenantId/project/data/source/:sourceId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/data/source/:sourceId",
                        "description": {
                            "content": "Updates the existing source with the details added from the request",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "data",
                                "source",
                                ":sourceId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "sourceId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Source ID for which the details must be updated",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "ebeda1ec-524f-487a-b4e5-3eecee003875",
                            "name": "Storage details are updated successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "fee60a24-3929-4db6-a78b-428547ae5299",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b7d5333f-4a12-4b55-b0f5-166b2e9d1370",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7f42778b-9357-47a2-b39c-6d087fa7f326",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "57470816-3b80-4a75-9a14-bb292fbb8f52",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "22d63bff-ccdb-4852-a568-f0c95037b43b",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "36cf0c7f-ad41-44c6-bd40-87ce61fea9f4",
                    "name": "/services/dataloader/api/:tenantId/project/data/source/:sourceId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/data/source/:sourceId",
                        "description": {
                            "content": "Deletes the source details using the specified ID if it is not already used by any job definitions",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "data",
                                "source",
                                ":sourceId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "sourceId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Source ID for which the source details must be deleted",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "ba8a6645-b899-4ee7-8ae1-7e23075c94c1",
                            "name": "Returns the existing source details",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "8b76f9bf-54eb-464b-bf41-19ba64545934",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e54101d9-9df8-450c-b246-b7b6783fa3f4",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5e263f72-7f1a-43b8-972b-4bab2eb35664",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ab18b93e-d962-4976-8795-6f4cf02deb02",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "679b7e3c-e971-4bcf-b2d7-a00230e66777",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "data",
                                        "source",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "30759c6a-45f7-4ebf-950f-32456c18ed65",
                    "name": "/services/dataloader/api/:tenantId/project/job/:jobId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/job/:jobId",
                        "description": {
                            "content": "Retrieve the existing job detail using the ID",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "job",
                                ":jobId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "jobId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job ID to retrieve",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "d2633209-d544-492f-b199-d4535be4ac57",
                            "name": "Job retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"MAPPING_PROCESSING\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "04c4a4c8-dd9f-405a-9889-28b8b10737ff",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "138abee3-0ff7-4b67-bb89-13c225644358",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ad364199-45fb-4072-9fa4-d519fcc52c04",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "91685a60-927b-4ee1-a11d-c3ca34f4cde0",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a3e8322c-c727-44fb-8247-76f9bcced419",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "12cdc37f-1252-4776-870d-bf6569a34018",
                    "name": "/services/dataloader/api/:tenantId/project/job/:jobId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/job/:jobId",
                        "description": {
                            "content": "Updates the existing job by merging the existing details with the updated information in the request body",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "job",
                                ":jobId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "jobId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job ID to update",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"MAPPING_PROCESSING\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "543feb21-a1a4-46ce-b8af-0c109a48d74f",
                            "name": "Job updated successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"MAPPING_PROCESSING\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"MAPPING_PROCESSING\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "92ec3b17-9c3c-46ba-8e4d-84011cf9b5fc",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"MAPPING_PROCESSING\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "983e0de9-754b-4e98-a0c0-c8349a506064",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"MAPPING_PROCESSING\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7cd2dd8d-adae-4fc5-b57c-971f00fe1d1c",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"MAPPING_PROCESSING\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2394cab7-5112-4dc4-9e35-0e5d99c512ea",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"MAPPING_PROCESSING\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "74d1f9bc-10ac-4ddf-8c98-c54b822e822a",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"MAPPING_PROCESSING\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "e1d8b218-5ada-4171-b43d-6f0f759b130f",
                    "name": "/services/dataloader/api/:tenantId/project/job/:jobId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/job/:jobId",
                        "description": {
                            "content": "Deletes the job with the status marked as completed",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "job",
                                ":jobId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "jobId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job ID to delete",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "556b15d2-c065-4069-a3db-fb1528f988aa",
                            "name": "Job deleted successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "09e95151-3d22-465a-97ab-406b2171d144",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8023029f-dce3-4e94-9ad2-bef21497d7ad",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c706f1d1-df38-43ba-8217-83b9b5fe2ab9",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3d3975a9-f95c-4cb4-8c51-3cf30bf0fd57",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d59713e0-3878-425e-b1df-a17d76bbeece",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "829c6bc3-2c3b-4eb0-a980-d1d4c4b6f4d2",
                    "name": "/services/dataloader/api/:tenantId/project/job/:jobId/_resume",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/job/:jobId/_resume",
                        "description": {
                            "content": "Resumes the job stuck with no progress",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "job",
                                ":jobId",
                                "_resume"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "jobId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job ID to resume",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "bb9964e0-edad-4a6d-9638-cbd475b71459",
                            "name": "Request to resume the job is accepted",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_resume"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Accepted",
                            "code": 202,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "184ac1f3-037f-4436-9993-799e76d66258",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_resume"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "363018f9-d1f4-41e2-91a3-f4727a417ce5",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_resume"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"error\": \"access_denied\",\n    \"error_description\": \"Access is denied\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "fd85a08a-407d-4936-9969-7feeff0c6148",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_resume"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"severity\": \"Error\",\n    \"errorMessage\": \"Brief error message here\",\n    \"errorCode\": 123,\n    \"errorDetailMessage\": \"Detailed error message here\",\n    \"innerErrorData\": {\n      \"exception\": \"com.reltio.services.dataloader.common.exception.DataLoaderServiceException Details here\"\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "48cee2c7-348f-4e1e-aee2-7954ce7889cc",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_resume"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"timestamp\": 1634719769759,\n    \"status\": 500,\n    \"error\": \"Internal Server Error\",\n    \"message\": \"Brief error message here\",\n    \"path\": \"Api context path here\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "d7cd5bc6-88ae-40ac-85a5-0c82b2f8d8e3",
                    "name": "/services/dataloader/api/:tenantId/project/job/:jobId/_stop",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/job/:jobId/_stop",
                        "description": {
                            "content": "Stops the job in progress",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "job",
                                ":jobId",
                                "_stop"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "jobId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job ID to stop",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "3a6363d6-5b29-45fb-9104-b111af5a7614",
                            "name": "Request to stop the job is accepted",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_stop"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Accepted",
                            "code": 202,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "7109137e-f0bc-440c-94b5-bfc86f764485",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_stop"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"severity\": \"Error\",\n    \"errorMessage\": \"Operation can not be done as the job [xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx] is in COMPLETED state.\",\n    \"errorCode\": 1561,\n    \"errorDetailMessage\": \"Operation can not be done as the job [xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx] is in COMPLETED state.\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a87f79fa-a77c-4b4c-89c0-997ff13a26a2",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_stop"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"error\": \"access_denied\",\n    \"error_description\": \"Access is denied\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9232d412-fe90-4288-bd0b-cde3cd1b5201",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_stop"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"severity\": \"Error\",\n    \"errorMessage\": \"Brief error message here\",\n    \"errorCode\": 123,\n    \"errorDetailMessage\": \"Detailed error message here\",\n    \"innerErrorData\": {\n      \"exception\": \"com.reltio.services.dataloader.common.exception.DataLoaderServiceException Details here\"\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "987b3611-4b52-48a1-b688-dc1dca507f9b",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "_stop"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"example\": {\n    \"timestamp\": 1634719769759,\n    \"status\": 500,\n    \"error\": \"Internal Server Error\",\n    \"message\": \"Brief error message here\",\n    \"path\": \"Api context path here\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "8305f418-ac0b-45dd-9177-126241669f08",
                    "name": "/services/dataloader/api/:tenantId/project/job/:jobId/errors",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/job/:jobId/errors",
                        "description": {
                            "content": "Download the error file as a zip file, if any exists",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "job",
                                ":jobId",
                                "errors"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Name of the error file to be retrieved",
                                        "type": "text/plain"
                                    },
                                    "key": "errorFile",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "jobId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job ID for which the error files are to be retrieved",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "975acf6a-cd9d-4e45-a990-21336e4f59b0",
                            "name": "Error details are retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "errors"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the error file to be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "errorFile",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "cd79bdc1-8a45-4375-aa21-cbaa3999f6b3",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "errors"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the error file to be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "errorFile",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a2acb7da-bd19-4e3b-b329-9583121e8340",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "errors"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the error file to be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "errorFile",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4a67a808-13e6-4a69-93f9-b6d7ceeaadb6",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "errors"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the error file to be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "errorFile",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "159b3b49-e62a-482a-a687-a48228ed1066",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "errors"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the error file to be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "errorFile",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3a9fdcb2-db25-4901-8ad5-7abcb8721cb9",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "errors"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Name of the error file to be retrieved",
                                                "type": "text/plain"
                                            },
                                            "key": "errorFile",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "57b4db48-6d88-456d-8ae4-749e9b3e4fee",
                    "name": "/services/dataloader/api/:tenantId/project/job/:jobId/source",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/job/:jobId/source",
                        "description": {
                            "content": "Download the source file(s) processed by dataload job",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "job",
                                ":jobId",
                                "source"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "jobId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job ID for which the source files are to be retrieved",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "fa943041-04f8-4434-a081-2a83a2e5f09c",
                            "name": "Source details are retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "3b456187-ea91-494a-9839-3e16eb7a2a4e",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "fb00712a-7111-4c6e-8989-b788555b4ae6",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "69c39c96-7df9-42a3-abb0-0a41c6b68689",
                            "name": "User does not have permission to view the file or job information",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8d33c270-568c-424c-ade9-80cc28047f1c",
                            "name": "All source files processed by job are deleted",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "875b275c-2ff3-4977-9e7e-5e8d53313699",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "job",
                                        ":jobId",
                                        "source"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "5a91ad1c-f29c-42f1-8f1c-4044ae8bdb9b",
                    "name": "/services/dataloader/api/:tenantId/project/jobs",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/jobs",
                        "description": {
                            "content": "Retrieve the details of existing jobs for a tenant matching the filter criteria",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "jobs"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "ID of the existing job definitions to get job details",
                                        "type": "text/plain"
                                    },
                                    "key": "projectId",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Job status used to filter the jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "status",
                                    "value": "CANCELLING_PLATFORM_TASK"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Job status used to filter the jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "status",
                                    "value": "COMPLETED"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to retrieve either inprogress or completed jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "inProgress",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                        "type": "text/plain"
                                    },
                                    "key": "creationDate",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                        "type": "text/plain"
                                    },
                                    "key": "page",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Number of objects that need to be returned with a paged response",
                                        "type": "text/plain"
                                    },
                                    "key": "size",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                        "type": "text/plain"
                                    },
                                    "key": "sort",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "548b47ae-9d77-437b-b012-da18e1b6bbcd",
                            "name": "Job retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "COMPLETED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"isDeleted\": \"<boolean>\",\n    \"udl\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"jobStatus\": \"UPLOAD_TO_S3_FINISHED\",\n    \"dataProcessingJobId\": \"<string>\",\n    \"dataFlowId\": \"<string>\",\n    \"periodicTasks\": \"<string>\",\n    \"loadType\": \"RELATIONS\",\n    \"errorDetails\": \"<string>\",\n    \"errorFileBucket\": \"<string>\",\n    \"errorFileLocation\": \"<string>\",\n    \"executedDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"totalRecords\": \"<integer>\",\n    \"processedRecordsCount\": \"<integer>\",\n    \"failedRecords\": \"<string>\",\n    \"failedRecordsCount\": \"<integer>\",\n    \"jobSummary\": \"<string>\",\n    \"ludicrousMode\": \"<boolean>\",\n    \"projectDetails\": {\n      \"environment\": \"<string>\",\n      \"loadType\": \"RELATIONS\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"projectStatus\": \"<string>\",\n      \"progressStatus\": \"<string>\",\n      \"tenantId\": \"<string>\",\n      \"updateType\": \"FULL_UPDATE\",\n      \"errorFileLocation\": \"<string>\",\n      \"operationStatus\": \"<string>\",\n      \"additionalAttributes\": \"<string>\",\n      \"storageDetails\": {\n        \"sourcePath\": \"<string>\",\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"storageId\": \"<string>\",\n        \"shareSourceInfo\": \"<boolean>\",\n        \"bucketName\": \"<string>\",\n        \"bucketNameTemp\": \"<string>\",\n        \"bucketNameError\": \"<string>\",\n        \"bucketNameSummary\": \"<string>\",\n        \"fileMask\": \"<string>\",\n        \"delimiter\": \"<string>\",\n        \"storageAccount\": {\n          \"createdBy\": \"<string>\",\n          \"createdDate\": \"<dateTime>\",\n          \"updatedBy\": \"<string>\",\n          \"updatedDate\": \"<dateTime>\",\n          \"accountId\": \"<integer>\",\n          \"accountName\": \"<string>\",\n          \"accountType\": \"AZURE\",\n          \"credentials\": \"<string>\"\n        },\n        \"totalRecords\": \"<integer>\",\n        \"projectDetailsTO\": {\n          \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n        }\n      },\n      \"mappingDetails\": {\n        \"mappingForObjectType\": \"ENTITIES\",\n        \"mappingName\": \"<string>\",\n        \"mappingSummary\": \"<string>\",\n        \"objectTypeUri\": \"<string>\",\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"mappingId\": \"<integer>\",\n        \"tenantId\": \"<string>\",\n        \"shareMappingDetails\": \"<boolean>\",\n        \"projectIds\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"schedulingDetails\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"id\": \"<string>\",\n        \"scheduledJobId\": \"<string>\",\n        \"cronExpression\": \"<string>\",\n        \"startDate\": \"<long>\",\n        \"endDate\": \"<long>\"\n      }\n    }\n  },\n  {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"isDeleted\": \"<boolean>\",\n    \"udl\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"jobStatus\": \"CANCELLING_PLATFORM_TASK\",\n    \"dataProcessingJobId\": \"<string>\",\n    \"dataFlowId\": \"<string>\",\n    \"periodicTasks\": \"<string>\",\n    \"loadType\": \"RELATIONS\",\n    \"errorDetails\": \"<string>\",\n    \"errorFileBucket\": \"<string>\",\n    \"errorFileLocation\": \"<string>\",\n    \"executedDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"totalRecords\": \"<integer>\",\n    \"processedRecordsCount\": \"<integer>\",\n    \"failedRecords\": \"<string>\",\n    \"failedRecordsCount\": \"<integer>\",\n    \"jobSummary\": \"<string>\",\n    \"ludicrousMode\": \"<boolean>\",\n    \"projectDetails\": {\n      \"environment\": \"<string>\",\n      \"loadType\": \"RELATIONS\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"projectStatus\": \"<string>\",\n      \"progressStatus\": \"<string>\",\n      \"tenantId\": \"<string>\",\n      \"updateType\": \"FULL_UPDATE\",\n      \"errorFileLocation\": \"<string>\",\n      \"operationStatus\": \"<string>\",\n      \"additionalAttributes\": \"<string>\",\n      \"storageDetails\": {\n        \"sourcePath\": \"<string>\",\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"storageId\": \"<string>\",\n        \"shareSourceInfo\": \"<boolean>\",\n        \"bucketName\": \"<string>\",\n        \"bucketNameTemp\": \"<string>\",\n        \"bucketNameError\": \"<string>\",\n        \"bucketNameSummary\": \"<string>\",\n        \"fileMask\": \"<string>\",\n        \"delimiter\": \"<string>\",\n        \"storageAccount\": {\n          \"createdBy\": \"<string>\",\n          \"createdDate\": \"<dateTime>\",\n          \"updatedBy\": \"<string>\",\n          \"updatedDate\": \"<dateTime>\",\n          \"accountId\": \"<integer>\",\n          \"accountName\": \"<string>\",\n          \"accountType\": \"AZURE\",\n          \"credentials\": \"<string>\"\n        },\n        \"totalRecords\": \"<integer>\",\n        \"projectDetailsTO\": {\n          \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n        }\n      },\n      \"mappingDetails\": {\n        \"mappingForObjectType\": \"ENTITIES\",\n        \"mappingName\": \"<string>\",\n        \"mappingSummary\": \"<string>\",\n        \"objectTypeUri\": \"<string>\",\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"mappingId\": \"<integer>\",\n        \"tenantId\": \"<string>\",\n        \"shareMappingDetails\": \"<boolean>\",\n        \"projectIds\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"schedulingDetails\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"id\": \"<string>\",\n        \"scheduledJobId\": \"<string>\",\n        \"cronExpression\": \"<string>\",\n        \"startDate\": \"<long>\",\n        \"endDate\": \"<long>\"\n      }\n    }\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "bf73cf42-d167-4a69-98ff-92b70e8e89d5",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "COMPLETED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4845c4b5-b313-4bd3-a673-45c21224f9b0",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "COMPLETED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "001ba78b-e3ad-437a-a28b-a323cd276d35",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "COMPLETED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "80b6ee30-bc3e-4d56-9a93-73623706f7a7",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "COMPLETED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "78511e20-03f6-414d-a426-7da458ba780f",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "COMPLETED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "4166de52-fbb0-43f4-8406-8f22fb200d0f",
                    "name": "/services/dataloader/api/:tenantId/project/jobs/_facets",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/jobs/_facets",
                        "description": {
                            "content": "Retrieve requested fields from existing jobs for a tenant matching the filter criteria",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                "jobs",
                                "_facets"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "ID of the existing job definitions to get job details",
                                        "type": "text/plain"
                                    },
                                    "key": "projectId",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Job status used to filter the jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "status",
                                    "value": "CANCELLING_PLATFORM_TASK"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Job status used to filter the jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "status",
                                    "value": "COMPLETED"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to retrieve either inprogress or completed jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "inProgress",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                        "type": "text/plain"
                                    },
                                    "key": "creationDate",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "list of fields to fetch",
                                        "type": "text/plain"
                                    },
                                    "key": "facet",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "list of fields to fetch",
                                        "type": "text/plain"
                                    },
                                    "key": "facet",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "5ac1fc13-b508-4be7-b497-f776b5283b43",
                            "name": "Fields retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs",
                                        "_facets"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "COMPLETED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "list of fields to fetch",
                                                "type": "text/plain"
                                            },
                                            "key": "facet",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"consecteturb_\": {\n    \"enim5_\": \"<integer>\"\n  },\n  \"cillum_4\": {\n    \"dolore_666\": \"<integer>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "06d8dbaf-99c0-4e4e-bb8a-aa13e93e5c55",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs",
                                        "_facets"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "COMPLETED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "list of fields to fetch",
                                                "type": "text/plain"
                                            },
                                            "key": "facet",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0c404322-9512-4513-acda-f1af38df7045",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs",
                                        "_facets"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "COMPLETED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "list of fields to fetch",
                                                "type": "text/plain"
                                            },
                                            "key": "facet",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2dffbbdc-e691-42a6-b2f2-24904f3a6f9b",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs",
                                        "_facets"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "COMPLETED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "list of fields to fetch",
                                                "type": "text/plain"
                                            },
                                            "key": "facet",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c574474f-84a3-4cc7-9571-50f0c24af5db",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs",
                                        "_facets"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "COMPLETED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "list of fields to fetch",
                                                "type": "text/plain"
                                            },
                                            "key": "facet",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "354fd0c0-a262-43f2-9ad5-d18420ba158f",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        "jobs",
                                        "_facets"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "ID of the existing job definitions to get job details",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "COMPLETED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "list of fields to fetch",
                                                "type": "text/plain"
                                            },
                                            "key": "facet",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "157e2727-a105-423b-a9c1-490449ccfdf4",
                    "name": "/services/dataloader/api/:tenantId/project/:projectId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/:projectId",
                        "description": {
                            "content": "Returns existing job definition with mapping, source, and scheduling details",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                ":projectId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "projectId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job definition ID for which the details must be retrieved",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "7ee085a5-b3fd-42f0-87ee-1d5cf044edf1",
                            "name": "Job definition is retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"FULL_UPDATE\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"AWS_S3\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "45574692-ebe3-46cc-8c27-ab84c3437dbc",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1e2b9f44-22be-4f07-85cf-e956d4906970",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "95d4eb2e-da57-49b7-92b3-59b4eab7c8b5",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f0a79c25-08e3-48e2-9720-b49d78d5af46",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2f9c0336-6913-456f-a067-ae1c38cf178c",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "b3cb5274-cc84-442f-a992-1d1874d360ac",
                    "name": "/services/dataloader/api/:tenantId/project/:projectId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/:projectId",
                        "description": {
                            "content": "Updates the existing job definitions by merging existing details for job definition with the updated information provided in the request body",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                ":projectId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "projectId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job definition ID for which the details must be updated",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"FULL_UPDATE\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"AWS_S3\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "6c3cd25f-7232-4ec7-979f-a16a6b7492b5",
                            "name": "Job definition is successfully updated",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"FULL_UPDATE\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"AWS_S3\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"FULL_UPDATE\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"AWS_S3\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4527459a-b19c-42be-a91d-2137718eea80",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"FULL_UPDATE\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"AWS_S3\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5caecff6-1f12-46af-9430-a1a6c7cd6962",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"FULL_UPDATE\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"AWS_S3\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "04ada5a5-3a5b-4818-aa53-73999c06c6a9",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"FULL_UPDATE\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"AWS_S3\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6874d0f9-f3c8-4706-bd3a-ebbffb73d71d",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"FULL_UPDATE\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"AWS_S3\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "04c4e0b9-1e9e-466c-b1fb-e1ac77a92b3f",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"environment\": \"<string>\",\n  \"loadType\": \"ENTITIES\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"projectStatus\": \"<string>\",\n  \"progressStatus\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"updateType\": \"FULL_UPDATE\",\n  \"errorFileLocation\": \"<string>\",\n  \"operationStatus\": \"<string>\",\n  \"additionalAttributes\": \"<string>\",\n  \"storageDetails\": {\n    \"sourcePath\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"storageId\": \"<string>\",\n    \"shareSourceInfo\": \"<boolean>\",\n    \"bucketName\": \"<string>\",\n    \"bucketNameTemp\": \"<string>\",\n    \"bucketNameError\": \"<string>\",\n    \"bucketNameSummary\": \"<string>\",\n    \"fileMask\": \"<string>\",\n    \"delimiter\": \"<string>\",\n    \"storageAccount\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"accountId\": \"<integer>\",\n      \"accountName\": \"<string>\",\n      \"accountType\": \"AWS_S3\",\n      \"credentials\": \"<string>\"\n    },\n    \"totalRecords\": \"<integer>\",\n    \"projectDetailsTO\": {\n      \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n    }\n  },\n  \"mappingDetails\": {\n    \"mappingForObjectType\": \"ENTITIES\",\n    \"mappingName\": \"<string>\",\n    \"mappingSummary\": \"<string>\",\n    \"objectTypeUri\": \"<string>\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"mappingId\": \"<integer>\",\n    \"tenantId\": \"<string>\",\n    \"shareMappingDetails\": \"<boolean>\",\n    \"projectIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"schedulingDetails\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"scheduledJobId\": \"<string>\",\n    \"cronExpression\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "c0d8793b-35a2-4bd3-8d0c-64d572d8070a",
                    "name": "/services/dataloader/api/:tenantId/project/:projectId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/:projectId",
                        "description": {
                            "content": "Deletes the existing job definition when the related mapping, source, and scheduling details are not used by other job definitions",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                ":projectId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "projectId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job definition ID for which the details must be deleted",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "825ef80e-7117-4b8a-a3b6-e11e2d5fa946",
                            "name": "Job definition is deleted successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "9601d83e-4857-4263-a614-b015d6701f57",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "20283758-0d07-4989-b23e-b526731a8be8",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8449079c-217d-46f6-b569-c4eec523d8ff",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a90c62ae-ab87-42b4-847d-b02306e31dc0",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7b5ff97f-030a-463c-80ea-66a70d13731f",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "4d5ab1f8-370d-44fb-a5e3-080285242741",
                    "name": "/services/dataloader/api/:tenantId/project/:projectId/jobs",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/:projectId/jobs",
                        "description": {
                            "content": "Retrieves the details of existing jobs for a job definitions by matching the filter criteria",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                ":projectId",
                                "jobs"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Job status used to filter the jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "status",
                                    "value": "DATA_LOAD_TASK_EXECUTED"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Job status used to filter the jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "status",
                                    "value": "PLATFORM_TASK_CANCELED"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to retrieve either inprogress or completed jobs",
                                        "type": "text/plain"
                                    },
                                    "key": "inProgress",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                        "type": "text/plain"
                                    },
                                    "key": "creationDate",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                        "type": "text/plain"
                                    },
                                    "key": "page",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Number of objects that need to be returned with a paged response",
                                        "type": "text/plain"
                                    },
                                    "key": "size",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                        "type": "text/plain"
                                    },
                                    "key": "sort",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "projectId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the existing job definitions to get job details",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "276f8037-c502-43df-bf5e-f2e3ef63f873",
                            "name": "Job retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "PLATFORM_TASK_CANCELED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"isDeleted\": \"<boolean>\",\n    \"udl\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"jobStatus\": \"UPLOAD_TO_S3_FINISHED\",\n    \"dataProcessingJobId\": \"<string>\",\n    \"dataFlowId\": \"<string>\",\n    \"periodicTasks\": \"<string>\",\n    \"loadType\": \"RELATIONS\",\n    \"errorDetails\": \"<string>\",\n    \"errorFileBucket\": \"<string>\",\n    \"errorFileLocation\": \"<string>\",\n    \"executedDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"totalRecords\": \"<integer>\",\n    \"processedRecordsCount\": \"<integer>\",\n    \"failedRecords\": \"<string>\",\n    \"failedRecordsCount\": \"<integer>\",\n    \"jobSummary\": \"<string>\",\n    \"ludicrousMode\": \"<boolean>\",\n    \"projectDetails\": {\n      \"environment\": \"<string>\",\n      \"loadType\": \"RELATIONS\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"projectStatus\": \"<string>\",\n      \"progressStatus\": \"<string>\",\n      \"tenantId\": \"<string>\",\n      \"updateType\": \"FULL_UPDATE\",\n      \"errorFileLocation\": \"<string>\",\n      \"operationStatus\": \"<string>\",\n      \"additionalAttributes\": \"<string>\",\n      \"storageDetails\": {\n        \"sourcePath\": \"<string>\",\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"storageId\": \"<string>\",\n        \"shareSourceInfo\": \"<boolean>\",\n        \"bucketName\": \"<string>\",\n        \"bucketNameTemp\": \"<string>\",\n        \"bucketNameError\": \"<string>\",\n        \"bucketNameSummary\": \"<string>\",\n        \"fileMask\": \"<string>\",\n        \"delimiter\": \"<string>\",\n        \"storageAccount\": {\n          \"createdBy\": \"<string>\",\n          \"createdDate\": \"<dateTime>\",\n          \"updatedBy\": \"<string>\",\n          \"updatedDate\": \"<dateTime>\",\n          \"accountId\": \"<integer>\",\n          \"accountName\": \"<string>\",\n          \"accountType\": \"AZURE\",\n          \"credentials\": \"<string>\"\n        },\n        \"totalRecords\": \"<integer>\",\n        \"projectDetailsTO\": {\n          \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n        }\n      },\n      \"mappingDetails\": {\n        \"mappingForObjectType\": \"ENTITIES\",\n        \"mappingName\": \"<string>\",\n        \"mappingSummary\": \"<string>\",\n        \"objectTypeUri\": \"<string>\",\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"mappingId\": \"<integer>\",\n        \"tenantId\": \"<string>\",\n        \"shareMappingDetails\": \"<boolean>\",\n        \"projectIds\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"schedulingDetails\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"id\": \"<string>\",\n        \"scheduledJobId\": \"<string>\",\n        \"cronExpression\": \"<string>\",\n        \"startDate\": \"<long>\",\n        \"endDate\": \"<long>\"\n      }\n    }\n  },\n  {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"isDeleted\": \"<boolean>\",\n    \"udl\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"jobStatus\": \"CANCELLING_PLATFORM_TASK\",\n    \"dataProcessingJobId\": \"<string>\",\n    \"dataFlowId\": \"<string>\",\n    \"periodicTasks\": \"<string>\",\n    \"loadType\": \"RELATIONS\",\n    \"errorDetails\": \"<string>\",\n    \"errorFileBucket\": \"<string>\",\n    \"errorFileLocation\": \"<string>\",\n    \"executedDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"totalRecords\": \"<integer>\",\n    \"processedRecordsCount\": \"<integer>\",\n    \"failedRecords\": \"<string>\",\n    \"failedRecordsCount\": \"<integer>\",\n    \"jobSummary\": \"<string>\",\n    \"ludicrousMode\": \"<boolean>\",\n    \"projectDetails\": {\n      \"environment\": \"<string>\",\n      \"loadType\": \"RELATIONS\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"projectStatus\": \"<string>\",\n      \"progressStatus\": \"<string>\",\n      \"tenantId\": \"<string>\",\n      \"updateType\": \"FULL_UPDATE\",\n      \"errorFileLocation\": \"<string>\",\n      \"operationStatus\": \"<string>\",\n      \"additionalAttributes\": \"<string>\",\n      \"storageDetails\": {\n        \"sourcePath\": \"<string>\",\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"storageId\": \"<string>\",\n        \"shareSourceInfo\": \"<boolean>\",\n        \"bucketName\": \"<string>\",\n        \"bucketNameTemp\": \"<string>\",\n        \"bucketNameError\": \"<string>\",\n        \"bucketNameSummary\": \"<string>\",\n        \"fileMask\": \"<string>\",\n        \"delimiter\": \"<string>\",\n        \"storageAccount\": {\n          \"createdBy\": \"<string>\",\n          \"createdDate\": \"<dateTime>\",\n          \"updatedBy\": \"<string>\",\n          \"updatedDate\": \"<dateTime>\",\n          \"accountId\": \"<integer>\",\n          \"accountName\": \"<string>\",\n          \"accountType\": \"AZURE\",\n          \"credentials\": \"<string>\"\n        },\n        \"totalRecords\": \"<integer>\",\n        \"projectDetailsTO\": {\n          \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n        }\n      },\n      \"mappingDetails\": {\n        \"mappingForObjectType\": \"ENTITIES\",\n        \"mappingName\": \"<string>\",\n        \"mappingSummary\": \"<string>\",\n        \"objectTypeUri\": \"<string>\",\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"mappingId\": \"<integer>\",\n        \"tenantId\": \"<string>\",\n        \"shareMappingDetails\": \"<boolean>\",\n        \"projectIds\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"schedulingDetails\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"id\": \"<string>\",\n        \"scheduledJobId\": \"<string>\",\n        \"cronExpression\": \"<string>\",\n        \"startDate\": \"<long>\",\n        \"endDate\": \"<long>\"\n      }\n    }\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "be306c91-7839-4287-a612-bb08ca7fe372",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "PLATFORM_TASK_CANCELED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9fb94f08-a176-4900-be33-db851434e108",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "PLATFORM_TASK_CANCELED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "54ddfb65-62aa-4801-8587-b0d9a83434e5",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "PLATFORM_TASK_CANCELED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d1f486f9-fb35-4be8-b147-9858194921f4",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "PLATFORM_TASK_CANCELED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "499d1302-1827-4227-988f-58c29122cc9a",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job status used to filter the jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "status",
                                            "value": "PLATFORM_TASK_CANCELED"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to retrieve either inprogress or completed jobs",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created on or after long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "340dca8c-e69f-471b-8ccd-a78adbf8cb4a",
                    "name": "/services/dataloader/api/:tenantId/project/:projectId/jobs",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/:projectId/jobs",
                        "description": {
                            "content": "Creates a job to carry out the load operation using the configurations provided in the request payload. If the configuration details for a job are not provided in the request payload, the API creates a job based on the job definition",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                ":projectId",
                                "jobs"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "projectId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job definition ID used to create the job",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"MAPPING_PROCESSING\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "1e53e4e0-df8f-437c-9bb7-c77aabed6c32",
                            "name": "Job Created successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"MAPPING_PROCESSING\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"MAPPING_PROCESSING\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "346f5fac-a020-4b25-ae10-2a7603155df3",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"MAPPING_PROCESSING\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0514c6fb-af5a-42db-a13b-12aec2796d00",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"MAPPING_PROCESSING\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c585454f-48e9-43f3-b48c-705b7a6c8b69",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"MAPPING_PROCESSING\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "026a2e32-3b75-4f0e-8f0b-755346f0246a",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"MAPPING_PROCESSING\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "96703735-d3b9-4d14-883f-9f8ac73d8356",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"MAPPING_PROCESSING\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "3ee9bc74-6f13-4922-825c-de5d130dd54b",
                    "name": "/services/dataloader/api/:tenantId/project/:projectId/jobs/run",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/project/:projectId/jobs/run",
                        "description": {
                            "content": "Creates and runs a job to carry out the load operation using configurations provided in the request payload. If the configuration details for a job are not provided in the request payload, the API creates a job based on the job definition",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "project",
                                ":projectId",
                                "jobs",
                                "run"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "projectId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Job definition ID used to create the job",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"MAPPING_PROCESSING\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "1034df1d-7af7-4dbb-99f7-6b4145b53476",
                            "name": "Job executed successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs",
                                        "run"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"MAPPING_PROCESSING\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"MAPPING_PROCESSING\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6f78cbab-7cd7-419f-b800-bfa15d4de4d8",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs",
                                        "run"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"MAPPING_PROCESSING\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f4c8943d-73f0-4b2a-8abf-6e95d9f0f62b",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs",
                                        "run"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"MAPPING_PROCESSING\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "36721d09-29f5-494a-a113-9f78212597c2",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs",
                                        "run"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"MAPPING_PROCESSING\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9d209f3a-12bd-46b1-bd45-79a02485e232",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs",
                                        "run"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"MAPPING_PROCESSING\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "dedce4d9-0863-4461-a160-eb7de5fa9272",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "project",
                                        ":projectId",
                                        "jobs",
                                        "run"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"isDeleted\": \"<boolean>\",\n  \"udl\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobStatus\": \"MAPPING_PROCESSING\",\n  \"dataProcessingJobId\": \"<string>\",\n  \"dataFlowId\": \"<string>\",\n  \"periodicTasks\": \"<string>\",\n  \"loadType\": \"RELATIONS\",\n  \"errorDetails\": \"<string>\",\n  \"errorFileBucket\": \"<string>\",\n  \"errorFileLocation\": \"<string>\",\n  \"executedDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"totalRecords\": \"<integer>\",\n  \"processedRecordsCount\": \"<integer>\",\n  \"failedRecords\": \"<string>\",\n  \"failedRecordsCount\": \"<integer>\",\n  \"jobSummary\": \"<string>\",\n  \"ludicrousMode\": \"<boolean>\",\n  \"projectDetails\": {\n    \"environment\": \"<string>\",\n    \"loadType\": \"ENTITIES\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "6a84222c-9592-403f-a5eb-b11df16c83fe",
                    "name": "/services/dataloader/api/:tenantId/projects",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/projects",
                        "description": {
                            "content": "Retrieves existing job definitions for a tenant matching filter criteria",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "projects"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Job definitions are filtered based on the status",
                                        "type": "text/plain"
                                    },
                                    "key": "projectStatus",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Filter job definitions by mapping used",
                                        "type": "text/plain"
                                    },
                                    "key": "mappingId",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Criteria to filter and get jobs which are created after provided long value of date",
                                        "type": "text/plain"
                                    },
                                    "key": "creationDate",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Filter criteria to list jobs based on progress status",
                                        "type": "text/plain"
                                    },
                                    "key": "progressStatus",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "If 'false', the jobs with completed status are displayed, else draft jobs are displayed",
                                        "type": "text/plain"
                                    },
                                    "key": "inProgress",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                        "type": "text/plain"
                                    },
                                    "key": "page",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Number of objects that need to be returned with a paged response",
                                        "type": "text/plain"
                                    },
                                    "key": "size",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                        "type": "text/plain"
                                    },
                                    "key": "sort",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "93bc0e6c-0502-4285-893c-c4d31104aaeb",
                            "name": "Job definitions retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "projects"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job definitions are filtered based on the status",
                                                "type": "text/plain"
                                            },
                                            "key": "projectStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter job definitions by mapping used",
                                                "type": "text/plain"
                                            },
                                            "key": "mappingId",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created after provided long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter criteria to list jobs based on progress status",
                                                "type": "text/plain"
                                            },
                                            "key": "progressStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'false', the jobs with completed status are displayed, else draft jobs are displayed",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"environment\": \"<string>\",\n    \"loadType\": \"RELATIONS\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"FULL_UPDATE\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"SFTP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"ENTITIES\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  },\n  {\n    \"environment\": \"<string>\",\n    \"loadType\": \"RELATIONS\",\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectStatus\": \"<string>\",\n    \"progressStatus\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"updateType\": \"UPDATE_MERGED\",\n    \"errorFileLocation\": \"<string>\",\n    \"operationStatus\": \"<string>\",\n    \"additionalAttributes\": \"<string>\",\n    \"storageDetails\": {\n      \"sourcePath\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"storageId\": \"<string>\",\n      \"shareSourceInfo\": \"<boolean>\",\n      \"bucketName\": \"<string>\",\n      \"bucketNameTemp\": \"<string>\",\n      \"bucketNameError\": \"<string>\",\n      \"bucketNameSummary\": \"<string>\",\n      \"fileMask\": \"<string>\",\n      \"delimiter\": \"<string>\",\n      \"storageAccount\": {\n        \"createdBy\": \"<string>\",\n        \"createdDate\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"updatedDate\": \"<dateTime>\",\n        \"accountId\": \"<integer>\",\n        \"accountName\": \"<string>\",\n        \"accountType\": \"GCP\",\n        \"credentials\": \"<string>\"\n      },\n      \"totalRecords\": \"<integer>\",\n      \"projectDetailsTO\": {\n        \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n      }\n    },\n    \"mappingDetails\": {\n      \"mappingForObjectType\": \"RELATIONS\",\n      \"mappingName\": \"<string>\",\n      \"mappingSummary\": \"<string>\",\n      \"objectTypeUri\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"mappingId\": \"<integer>\",\n      \"tenantId\": \"<string>\",\n      \"shareMappingDetails\": \"<boolean>\",\n      \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"schedulingDetails\": {\n      \"createdBy\": \"<string>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedDate\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"scheduledJobId\": \"<string>\",\n      \"cronExpression\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\"\n    }\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "556ef5ce-af2e-48a0-9cfb-42e6fefb199d",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "projects"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job definitions are filtered based on the status",
                                                "type": "text/plain"
                                            },
                                            "key": "projectStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter job definitions by mapping used",
                                                "type": "text/plain"
                                            },
                                            "key": "mappingId",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created after provided long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter criteria to list jobs based on progress status",
                                                "type": "text/plain"
                                            },
                                            "key": "progressStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'false', the jobs with completed status are displayed, else draft jobs are displayed",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ffa779f7-9926-438a-9a03-3518ff7dd356",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "projects"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job definitions are filtered based on the status",
                                                "type": "text/plain"
                                            },
                                            "key": "projectStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter job definitions by mapping used",
                                                "type": "text/plain"
                                            },
                                            "key": "mappingId",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created after provided long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter criteria to list jobs based on progress status",
                                                "type": "text/plain"
                                            },
                                            "key": "progressStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'false', the jobs with completed status are displayed, else draft jobs are displayed",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5a7b7478-810a-4ee1-9f72-3f60b766c1d1",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "projects"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job definitions are filtered based on the status",
                                                "type": "text/plain"
                                            },
                                            "key": "projectStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter job definitions by mapping used",
                                                "type": "text/plain"
                                            },
                                            "key": "mappingId",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created after provided long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter criteria to list jobs based on progress status",
                                                "type": "text/plain"
                                            },
                                            "key": "progressStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'false', the jobs with completed status are displayed, else draft jobs are displayed",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "21064695-9f48-4574-8690-71233fb53638",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "projects"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job definitions are filtered based on the status",
                                                "type": "text/plain"
                                            },
                                            "key": "projectStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter job definitions by mapping used",
                                                "type": "text/plain"
                                            },
                                            "key": "mappingId",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created after provided long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter criteria to list jobs based on progress status",
                                                "type": "text/plain"
                                            },
                                            "key": "progressStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'false', the jobs with completed status are displayed, else draft jobs are displayed",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "362fd850-4b36-49dc-ae12-847cb49bd63e",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "projects"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Job definitions are filtered based on the status",
                                                "type": "text/plain"
                                            },
                                            "key": "projectStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter job definitions by mapping used",
                                                "type": "text/plain"
                                            },
                                            "key": "mappingId",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Criteria to filter and get jobs which are created after provided long value of date",
                                                "type": "text/plain"
                                            },
                                            "key": "creationDate",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Filter criteria to list jobs based on progress status",
                                                "type": "text/plain"
                                            },
                                            "key": "progressStatus",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If 'false', the jobs with completed status are displayed, else draft jobs are displayed",
                                                "type": "text/plain"
                                            },
                                            "key": "inProgress",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=name' - sorts the job definitions in the ascending order of name, 'sort=name:desc' - sorts the job definitions in the descending order of name<br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=tenantId:desc,name:desc' - sorts the API response in the descending order of tenantId and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "f42f0bdf-5fb7-46c4-ae5b-5b574ac60727",
                    "name": "/services/dataloader/api/:tenantId/storage/_account",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/storage/_account",
                        "description": {
                            "content": "Creates a storage account to be used while creating the source details. You must provide the account type and credential details for creating the storage account",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "storage",
                                "_account"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"SFTP\",\n  \"credentials\": \"<string>\"\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "f0249728-4cd1-46a3-ba15-4f90df4f5fc1",
                            "name": "Resource is created successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"SFTP\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"SFTP\",\n  \"credentials\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "90667aa3-1737-46e4-9172-58fe0fe1c4d0",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"SFTP\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ae09cdfe-e753-4d33-82e5-cb9a5830f4ac",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"SFTP\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7e8e0468-90bd-4ef5-b384-e89f9f537988",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"SFTP\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b5d7686f-cdb4-47d3-a899-0ef8f6b56729",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"SFTP\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "512d5587-2d3b-4e80-a8ef-db453e6c0d1f",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"SFTP\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "8b1f4225-3d01-4d97-861f-1745858572e8",
                    "name": "/services/dataloader/api/:tenantId/storage/_account/:accountId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/storage/_account/:accountId",
                        "description": {
                            "content": "You can get the existing storage account details using the ID",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "storage",
                                "_account",
                                ":accountId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "accountId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Existing storage account ID for which the details must be retrieved",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "be2b8a33-f6de-448a-a86e-96325c09c557",
                            "name": "Resource retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"SFTP\",\n  \"credentials\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8cb9f11c-3b61-46e2-89e1-0e07ca480663",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1f462610-37ae-49fd-8991-3022a7062cd4",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "96039eb8-7488-4f98-b3d4-cb6f41d348f9",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "41c9bf16-582a-4a43-8a8c-3d9b59cb7a45",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6250e59e-1f46-4a86-b7c0-941397fdb21a",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "53837850-ce3f-4313-9dbe-081f499ac97a",
                    "name": "/services/dataloader/api/:tenantId/storage/_account/:accountId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/storage/_account/:accountId",
                        "description": {
                            "content": "Updates the existing storage account details",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "storage",
                                "_account",
                                ":accountId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "accountId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Existing storage account ID for which the details must be updated",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"SFTP\",\n  \"credentials\": \"<string>\"\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "7a23803d-126e-49ea-9809-b36eec233979",
                            "name": "Resource is update successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"SFTP\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"SFTP\",\n  \"credentials\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9e35ab19-6cc8-4d3e-acfa-d351d6d36444",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"SFTP\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4406bcf0-8677-42de-8752-7e751c44e727",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"SFTP\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0e402ff5-5c2d-40f0-b39a-c457db760b44",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"SFTP\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "71cd2e0e-83f6-48a7-9115-ec7e40b4fe42",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"SFTP\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d55d69a9-1dfd-4dca-b379-d4cbde42f66a",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"accountId\": \"<integer>\",\n  \"accountName\": \"<string>\",\n  \"accountType\": \"SFTP\",\n  \"credentials\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "c42e2554-0925-4973-b8f5-44b8b90e0d45",
                    "name": "/services/dataloader/api/:tenantId/storage/_account/:accountId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/storage/_account/:accountId",
                        "description": {
                            "content": "Delete existing storage account details using the ID",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "storage",
                                "_account",
                                ":accountId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<integer>",
                                    "key": "accountId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Existing storage account ID for which the details must be deleted",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "7ebc788b-959e-49fd-93c1-9a9e96574227",
                            "name": "Resource deleted successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "84c8f197-ac20-411b-ac47-bc52c877bb2b",
                            "name": "Business validation failed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e13a9296-8c41-4c7a-ac87-56ce33f4da23",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3f881573-22bf-44dd-9ca5-283716fb698c",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "062fca42-e00f-4959-9729-0148f33246b0",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "272419d0-4a19-47e2-897c-b15d32e97448",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "8f0e53c3-1d57-4555-81a6-a63c51dde207",
                    "name": "/services/dataloader/api/:tenantId/storage/_accounts",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/storage/_accounts",
                        "description": {
                            "content": "Retrieves all storage account details for the accounts created by the logged-in user matching the filter criteria",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "storage",
                                "_accounts"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Type of the Storage account. <br><b>For example:</b> 'accountType=GCP'",
                                        "type": "text/plain"
                                    },
                                    "key": "accountType",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                        "type": "text/plain"
                                    },
                                    "key": "page",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Number of objects that need to be returned with a paged response",
                                        "type": "text/plain"
                                    },
                                    "key": "size",
                                    "value": "<integer>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=accountType' - sorts the storage accounts in the ascending order of accountType, 'sort=accountType:desc' - sorts the source details in the descending order of accountType. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=accountType:desc,name:desc' - sorts the API response in the descending order of accountType and 'name'",
                                        "type": "text/plain"
                                    },
                                    "key": "sort",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                        "type": "text/plain"
                                    },
                                    "key": "filter",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "c59f357d-8556-44bd-af66-c64fa601ebe6",
                            "name": "Resources retrieved successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_accounts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Type of the Storage account. <br><b>For example:</b> 'accountType=GCP'",
                                                "type": "text/plain"
                                            },
                                            "key": "accountType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=accountType' - sorts the storage accounts in the ascending order of accountType, 'sort=accountType:desc' - sorts the source details in the descending order of accountType. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=accountType:desc,name:desc' - sorts the API response in the descending order of accountType and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"SFTP\",\n    \"credentials\": \"<string>\"\n  },\n  {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "81787143-ad77-43af-aef4-4ed31df1def2",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_accounts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Type of the Storage account. <br><b>For example:</b> 'accountType=GCP'",
                                                "type": "text/plain"
                                            },
                                            "key": "accountType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=accountType' - sorts the storage accounts in the ascending order of accountType, 'sort=accountType:desc' - sorts the source details in the descending order of accountType. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=accountType:desc,name:desc' - sorts the API response in the descending order of accountType and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "52581cf1-21e0-40b1-85a8-03795cdbad3b",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_accounts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Type of the Storage account. <br><b>For example:</b> 'accountType=GCP'",
                                                "type": "text/plain"
                                            },
                                            "key": "accountType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=accountType' - sorts the storage accounts in the ascending order of accountType, 'sort=accountType:desc' - sorts the source details in the descending order of accountType. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=accountType:desc,name:desc' - sorts the API response in the descending order of accountType and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ea5fb5a7-7a34-4562-96b7-712d9db5dce9",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_accounts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Type of the Storage account. <br><b>For example:</b> 'accountType=GCP'",
                                                "type": "text/plain"
                                            },
                                            "key": "accountType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=accountType' - sorts the storage accounts in the ascending order of accountType, 'sort=accountType:desc' - sorts the source details in the descending order of accountType. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=accountType:desc,name:desc' - sorts the API response in the descending order of accountType and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "442d8506-3224-4c3a-b48a-3a3c8528562f",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_accounts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Type of the Storage account. <br><b>For example:</b> 'accountType=GCP'",
                                                "type": "text/plain"
                                            },
                                            "key": "accountType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=accountType' - sorts the storage accounts in the ascending order of accountType, 'sort=accountType:desc' - sorts the source details in the descending order of accountType. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=accountType:desc,name:desc' - sorts the API response in the descending order of accountType and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "bac1ffe1-e198-4f71-ac28-2a80525818c3",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        "_accounts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Type of the Storage account. <br><b>For example:</b> 'accountType=GCP'",
                                                "type": "text/plain"
                                            },
                                            "key": "accountType",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Define the page number in which the API response with pagination are obtained.<br> <b>For example:</b> page=1",
                                                "type": "text/plain"
                                            },
                                            "key": "page",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of objects that need to be returned with a paged response",
                                                "type": "text/plain"
                                            },
                                            "key": "size",
                                            "value": "<integer>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Defines how the API response is sorted. API supports sorting based on any text fields in the model. <br><b>For example:</b> 'sort=accountType' - sorts the storage accounts in the ascending order of accountType, 'sort=accountType:desc' - sorts the source details in the descending order of accountType. <br> More than one text fields in the model can be used to define the sorting order. <b>For example:</b> 'sort=accountType:desc,name:desc' - sorts the API response in the descending order of accountType and 'name'",
                                                "type": "text/plain"
                                            },
                                            "key": "sort",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Used to define the criteria to get resources. One or more text fields in the response can be used to define the filter criteria. Filtering can be done by 'equals', 'notEquals' and 'like' operation while getting the resources. <br><b>For example:</b> filter=equals(<fieldName, Value>),notequals(<fieldName, Value>)",
                                                "type": "text/plain"
                                            },
                                            "key": "filter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "7241914a-3b20-448a-a378-5fdab8fd8ffa",
                    "name": "/services/dataloader/api/:tenantId/storage/:directory/upload",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/storage/:directory/upload",
                        "description": {
                            "content": "Upload a file from your system to remote storage for carrying out load operation",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "storage",
                                ":directory",
                                "upload"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "If set to 'true', the existing file is overwritten with the new file",
                                        "type": "text/plain"
                                    },
                                    "key": "replace",
                                    "value": "<boolean>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "When provided, the API uploads the file and updates the provided job definition and maps the storage ID to the uploaded file",
                                        "type": "text/plain"
                                    },
                                    "key": "projectId",
                                    "value": "<string>"
                                },
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "CSV file delimiter character, supported values are , | || ; ",
                                        "type": "text/plain"
                                    },
                                    "key": "delimiter",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "directory",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) GCS path for uploading the file",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "multipart/form-data"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "description": {
                                        "content": "(Required) MIME file that must be uploaded",
                                        "type": "text/plain"
                                    },
                                    "key": "file",
                                    "value": "<string>",
                                    "type": "text"
                                }
                            ]
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "b85f345d-f367-4093-acbc-167463e8ecd7",
                            "name": "File uploaded",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":directory",
                                        "upload"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to 'true', the existing file is overwritten with the new file",
                                                "type": "text/plain"
                                            },
                                            "key": "replace",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "When provided, the API uploads the file and updates the provided job definition and maps the storage ID to the uploaded file",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "CSV file delimiter character, supported values are , | || ; ",
                                                "type": "text/plain"
                                            },
                                            "key": "delimiter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) MIME file that must be uploaded",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<string>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"sourcePath\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"storageId\": \"<string>\",\n  \"shareSourceInfo\": \"<boolean>\",\n  \"bucketName\": \"<string>\",\n  \"bucketNameTemp\": \"<string>\",\n  \"bucketNameError\": \"<string>\",\n  \"bucketNameSummary\": \"<string>\",\n  \"fileMask\": \"<string>\",\n  \"delimiter\": \"<string>\",\n  \"storageAccount\": {\n    \"createdBy\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"updatedBy\": \"<string>\",\n    \"updatedDate\": \"<dateTime>\",\n    \"accountId\": \"<integer>\",\n    \"accountName\": \"<string>\",\n    \"accountType\": \"AWS_S3\",\n    \"credentials\": \"<string>\"\n  },\n  \"totalRecords\": \"<integer>\",\n  \"projectDetailsTO\": {\n    \"value\": \"<Circular reference to #/components/schemas/ProjectDetailsTO detected>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3b236370-c56d-4255-b7ae-d8ba4ac16100",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":directory",
                                        "upload"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to 'true', the existing file is overwritten with the new file",
                                                "type": "text/plain"
                                            },
                                            "key": "replace",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "When provided, the API uploads the file and updates the provided job definition and maps the storage ID to the uploaded file",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "CSV file delimiter character, supported values are , | || ; ",
                                                "type": "text/plain"
                                            },
                                            "key": "delimiter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) MIME file that must be uploaded",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<string>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "876d186d-dc48-4227-96d0-038217b8cac5",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":directory",
                                        "upload"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to 'true', the existing file is overwritten with the new file",
                                                "type": "text/plain"
                                            },
                                            "key": "replace",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "When provided, the API uploads the file and updates the provided job definition and maps the storage ID to the uploaded file",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "CSV file delimiter character, supported values are , | || ; ",
                                                "type": "text/plain"
                                            },
                                            "key": "delimiter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) MIME file that must be uploaded",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<string>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5f814552-ff21-49a2-8280-a74174f487a5",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":directory",
                                        "upload"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to 'true', the existing file is overwritten with the new file",
                                                "type": "text/plain"
                                            },
                                            "key": "replace",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "When provided, the API uploads the file and updates the provided job definition and maps the storage ID to the uploaded file",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "CSV file delimiter character, supported values are , | || ; ",
                                                "type": "text/plain"
                                            },
                                            "key": "delimiter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) MIME file that must be uploaded",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<string>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "73efb14c-c539-49eb-8983-160362611592",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":directory",
                                        "upload"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to 'true', the existing file is overwritten with the new file",
                                                "type": "text/plain"
                                            },
                                            "key": "replace",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "When provided, the API uploads the file and updates the provided job definition and maps the storage ID to the uploaded file",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "CSV file delimiter character, supported values are , | || ; ",
                                                "type": "text/plain"
                                            },
                                            "key": "delimiter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) MIME file that must be uploaded",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<string>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6281a1f2-a73c-45ad-bc32-492de6deabea",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":directory",
                                        "upload"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to 'true', the existing file is overwritten with the new file",
                                                "type": "text/plain"
                                            },
                                            "key": "replace",
                                            "value": "<boolean>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "When provided, the API uploads the file and updates the provided job definition and maps the storage ID to the uploaded file",
                                                "type": "text/plain"
                                            },
                                            "key": "projectId",
                                            "value": "<string>"
                                        },
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "CSV file delimiter character, supported values are , | || ; ",
                                                "type": "text/plain"
                                            },
                                            "key": "delimiter",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "description": {
                                                "content": "(Required) MIME file that must be uploaded",
                                                "type": "text/plain"
                                            },
                                            "key": "file",
                                            "value": "<string>",
                                            "type": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "b89f44fe-fc0e-4680-bf9f-8c4450057ade",
                    "name": "/services/dataloader/api/:tenantId/storage/:sourceId",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/storage/:sourceId",
                        "description": {
                            "content": "Removes the uploaded file from Cloud Storage",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "storage",
                                ":sourceId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "sourceId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Source details ID to delete",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "ab9bf69d-df66-4686-9459-91b992a74326",
                            "name": "Source file deleted successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "49cf8c9b-e723-445f-b9b7-507511f06f8a",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4f7b0697-5fe4-41fb-a84d-16ffa89c961e",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "442311d2-548d-4234-8637-99d2b5da65ae",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "01bcc5cc-1b94-43f3-aef5-3be674d44318",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "06dd55e1-1113-4851-b921-cf7c6c14f96d",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "cb650851-6d06-4a0d-bef9-704abc3f1b8c",
                    "name": "/services/dataloader/api/:tenantId/storage/:sourceId/read",
                    "request": {
                        "name": "/services/dataloader/api/:tenantId/storage/:sourceId/read",
                        "description": {
                            "content": "Reads the specified number of lines from the existing source details and returns the information",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "dataloader",
                                "api",
                                ":tenantId",
                                "storage",
                                ":sourceId",
                                "read"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "Number of lines to be read from the source file for preview",
                                        "type": "text/plain"
                                    },
                                    "key": "linesToRead",
                                    "value": "10"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "sourceId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Existing Storage ID from which the files are to be read",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "033b20a1-05c2-4d33-8910-a0510d17451a",
                            "name": "Source files are read successfully",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId",
                                        "read"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of lines to be read from the source file for preview",
                                                "type": "text/plain"
                                            },
                                            "key": "linesToRead",
                                            "value": "10"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"ad9\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "af2e70c1-4040-4991-9195-ec011ace5fca",
                            "name": "Bad request",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId",
                                        "read"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of lines to be read from the source file for preview",
                                                "type": "text/plain"
                                            },
                                            "key": "linesToRead",
                                            "value": "10"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a1ea74f8-58f4-455b-80f4-9bcef9387a9f",
                            "name": "Unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId",
                                        "read"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of lines to be read from the source file for preview",
                                                "type": "text/plain"
                                            },
                                            "key": "linesToRead",
                                            "value": "10"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "87d3152d-56b4-4682-922e-dc6ac0e1a4a2",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId",
                                        "read"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of lines to be read from the source file for preview",
                                                "type": "text/plain"
                                            },
                                            "key": "linesToRead",
                                            "value": "10"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f1d65ef5-1ea0-4946-83e0-0e24e27a63e9",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId",
                                        "read"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of lines to be read from the source file for preview",
                                                "type": "text/plain"
                                            },
                                            "key": "linesToRead",
                                            "value": "10"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "711483c1-9e14-4b79-9d81-26de5d7f2c63",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "dataloader",
                                        "api",
                                        ":tenantId",
                                        "storage",
                                        ":sourceId",
                                        "read"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "Number of lines to be read from the source file for preview",
                                                "type": "text/plain"
                                            },
                                            "key": "linesToRead",
                                            "value": "10"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"severity\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"errorDetailMessage\": \"<string>\",\n  \"innerErrorData\": {\n    \"exception\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ]
        },
        {
            "name": "Reference Data Management",
            "description": "",
            "item": [
                {
                    "id": "c0ff4baa-a86f-452d-8cdb-20f7d8f4c41e",
                    "name": "/services/lookups/:tenantId",
                    "request": {
                        "name": "/services/lookups/:tenantId",
                        "description": {
                            "content": "This API saves a collection of lookups in RDM tenant according to the JSON object definition. If you need to create just one lookup value then please specify one JSON object in the array. The same API should be used for create and update operations.<br/><br/>You can create a maximum of <b>100</b> lookup codes in a single request.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "lookups",
                                ":tenantId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the RDM tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "77875147-3185-45d8-bff9-ac70e54dfa59",
                            "name": "Successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"uri\": \"<string>\",\n    \"value\": {},\n    \"error\": {\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"innerErrorData\": {\n        \"innerErrorData\": {\n          \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n        },\n        \"exception\": \"<string>\",\n        \"stack\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    \"warning\": {\n      \"warningMessage\": \"<string>\"\n    }\n  },\n  {\n    \"uri\": \"<string>\",\n    \"value\": {},\n    \"error\": {\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"innerErrorData\": {\n        \"innerErrorData\": {\n          \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n        },\n        \"exception\": \"<string>\",\n        \"stack\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    \"warning\": {\n      \"warningMessage\": \"<string>\"\n    }\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "89e451a5-8fd5-4074-9074-8646fd2f6a0f",
                            "name": "The operation cannot be performed because user is unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "a24d13f9-c383-4088-b02f-1182111a02f8",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "a0651004-907b-4405-89b0-c7b5186d6942",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "06da1c53-ff39-4b67-91a9-a19d53307987",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "9196f764-e1b3-4b71-832e-e1591098d051",
                    "name": "/services/lookups/:tenantId/:type",
                    "request": {
                        "name": "/services/lookups/:tenantId/:type",
                        "description": {
                            "content": "This API saves a collection of lookups in RDM tenant according to the JSON object definition. If you need to create just one lookup value then please specify one JSON object in the array. The same API should be used for create and update operations.<br/><br/>You can create a maximum of <b>100</b> lookup codes in a single request.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "lookups",
                                ":tenantId",
                                ":type"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the RDM tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "type",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Lookup type for which values must be created",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "4526a41a-575c-4936-b413-0ca2f303dae4",
                            "name": "Successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"uri\": \"<string>\",\n  \"value\": {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  \"error\": {\n    \"errorMessage\": \"<string>\",\n    \"errorCode\": \"<integer>\",\n    \"innerErrorData\": {\n      \"innerErrorData\": {\n        \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n      },\n      \"exception\": \"<string>\",\n      \"stack\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  },\n  \"warning\": {\n    \"warningMessage\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8f43eaf0-0fd2-4540-b6dc-8006c6659bf6",
                            "name": "The operation cannot be performed because user is unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "0747d864-347c-4b66-8b84-f5ec04393ce7",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "7de4c53c-be4f-436f-a441-f8a073850d7d",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "18183f7f-4db0-44ca-9a62-3fabcff232d4",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"code\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"parents\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"sourceMappings\": [\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"source\": \"<string>\",\n        \"values\": [\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"value\": \"<string>\",\n            \"description\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"canonicalValue\": \"<boolean>\",\n            \"downStreamDefaultValue\": \"<boolean>\"\n          }\n        ]\n      }\n    ],\n    \"localizations\": [\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\",\n        \"value\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "3ee6a3f0-3c16-4360-9f27-b6495964143f",
                    "name": "/services/lookups/:tenantId/:type/:code",
                    "request": {
                        "name": "/services/lookups/:tenantId/:type/:code",
                        "description": {
                            "content": "This API updates a lookup value for the specified lookup type and lookup code. The response returns <b>Success</b> if the value is successfully updated.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "lookups",
                                ":tenantId",
                                ":type",
                                ":code"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the RDM tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "type",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Lookup type for which values must be created",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "S5q4x",
                                    "key": "code",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"tenantId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"code\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"parents\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sourceMappings\": [\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    }\n  ],\n  \"localizations\": [\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"updatedBy\": \"<string>\",\n  \"updateDate\": \"<long>\",\n  \"version\": \"<long>\"\n}",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "29e58c01-ef75-44d8-9f27-2226e432f569",
                            "name": "Successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type",
                                        ":code"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"tenantId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"code\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"parents\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sourceMappings\": [\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    }\n  ],\n  \"localizations\": [\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"updatedBy\": \"<string>\",\n  \"updateDate\": \"<long>\",\n  \"version\": \"<long>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"tenantId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"code\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"parents\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sourceMappings\": [\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    }\n  ],\n  \"localizations\": [\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"updatedBy\": \"<string>\",\n  \"updateDate\": \"<long>\",\n  \"version\": \"<long>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f7a35122-8ddc-4b5a-a2b3-8defdb48d862",
                            "name": "The operation cannot be performed because user is unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type",
                                        ":code"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"tenantId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"code\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"parents\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sourceMappings\": [\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    }\n  ],\n  \"localizations\": [\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"updatedBy\": \"<string>\",\n  \"updateDate\": \"<long>\",\n  \"version\": \"<long>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "216497ce-a980-46d4-9114-ea2ec3d3e29e",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type",
                                        ":code"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"tenantId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"code\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"parents\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sourceMappings\": [\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    }\n  ],\n  \"localizations\": [\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"updatedBy\": \"<string>\",\n  \"updateDate\": \"<long>\",\n  \"version\": \"<long>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "bf082e6c-3576-4c00-b68d-5eb64247d9e2",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type",
                                        ":code"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"tenantId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"code\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"parents\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sourceMappings\": [\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    }\n  ],\n  \"localizations\": [\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"updatedBy\": \"<string>\",\n  \"updateDate\": \"<long>\",\n  \"version\": \"<long>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b87684f5-fcac-4b9b-81e8-93bfcc77c1b1",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "lookups",
                                        ":tenantId",
                                        ":type",
                                        ":code"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"tenantId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"code\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"parents\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sourceMappings\": [\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"source\": \"<string>\",\n      \"values\": [\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"value\": \"<string>\",\n          \"description\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"canonicalValue\": \"<boolean>\",\n          \"downStreamDefaultValue\": \"<boolean>\"\n        }\n      ]\n    }\n  ],\n  \"localizations\": [\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\",\n      \"value\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"updatedBy\": \"<string>\",\n  \"updateDate\": \"<long>\",\n  \"version\": \"<long>\"\n}",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "1fde54c2-d727-4b1a-b72c-0e11e4d5ca26",
                    "name": "/services/unmapped/:tenantId",
                    "request": {
                        "name": "/services/unmapped/:tenantId",
                        "description": {
                            "content": "This API saves a collection of unmapped lookups in RDM tenant according to the JSON object definition. If you need to create just one unmapped lookup value then please specify one JSON object in the array. The same API should be used for create and update operations.<br/><br/>You should use this API when you have lookups from a source but still don't have the corresponding canonical value in the lookup type. Once the canonical value is defined for those unmapped lookups from a source, please use Save Lookup API with the details from unmapped mapping and then delete the unmapped value.<br/><br/>You can create a maximum of <b>100</b> unmapped values in a single request.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "unmapped",
                                ":tenantId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                        "type": "text/plain"
                                    },
                                    "key": "onlyIfNoMapping",
                                    "value": "false"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the RDM tenant",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "ba6c4d7d-71b2-46c2-8d24-8ec55a2456c6",
                            "name": "Successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"uri\": \"<string>\",\n  \"value\": {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  \"error\": {\n    \"errorMessage\": \"<string>\",\n    \"errorCode\": \"<integer>\",\n    \"innerErrorData\": {\n      \"innerErrorData\": {\n        \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n      },\n      \"exception\": \"<string>\",\n      \"stack\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  },\n  \"warning\": {\n    \"warningMessage\": \"<string>\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e51ca476-0d07-4260-adc1-9afefcf9e098",
                            "name": "The operation cannot be performed because user is unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "65168413-4c44-4209-a066-211811d4dd13",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "10363e81-a3c4-4947-8662-2e22b8a96881",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "93118ae4-b223-489a-bdfc-fb5fcfc0e32c",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "5236d8f5-d136-4052-8ff9-b8d03edea0f5",
                    "name": "/services/unmapped/:tenantId/:type",
                    "request": {
                        "name": "/services/unmapped/:tenantId/:type",
                        "description": {
                            "content": "This API saves a collection of unmapped lookups in RDM tenant according to the JSON object definition. If you need to create just one unmapped lookup value then please specify one JSON object in the array. The same API should be used for create and update operations.<br/><br/>You should use this API when you have lookups from a source but still don't have the corresponding canonical value in the lookup type. Once the canonical value is defined for those unmapped lookups from a source, please use Save Lookup API with the details from unmapped mapping and then delete the unmapped value.<br/><br/>You can create a maximum of <b>100</b> unmapped values in a single request.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "services",
                                "unmapped",
                                ":tenantId",
                                ":type"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "description": {
                                        "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                        "type": "text/plain"
                                    },
                                    "key": "onlyIfNoMapping",
                                    "value": "false"
                                }
                            ],
                            "variable": [
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "tenantId",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) ID of the RDM tenant",
                                        "type": "text/plain"
                                    }
                                },
                                {
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "type",
                                    "disabled": false,
                                    "description": {
                                        "content": "(Required) Lookup type for which unmapped values must be created",
                                        "type": "text/plain"
                                    }
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                            "options": {
                                "raw": {
                                    "headerFamily": "json",
                                    "language": "json"
                                }
                            }
                        },
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "69259dc9-aa03-4f16-ad57-754cbc4cde27",
                            "name": "Successful operation",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"uri\": \"<string>\",\n    \"value\": {},\n    \"error\": {\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"innerErrorData\": {\n        \"innerErrorData\": {\n          \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n        },\n        \"exception\": \"<string>\",\n        \"stack\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    \"warning\": {\n      \"warningMessage\": \"<string>\"\n    }\n  },\n  {\n    \"uri\": \"<string>\",\n    \"value\": {},\n    \"error\": {\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"innerErrorData\": {\n        \"innerErrorData\": {\n          \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n        },\n        \"exception\": \"<string>\",\n        \"stack\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    \"warning\": {\n      \"warningMessage\": \"<string>\"\n    }\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8c95c01a-b956-494f-a167-7a675722590c",
                            "name": "The operation cannot be performed because user is unauthorized",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "b66860a3-50a8-43ef-9f54-a2e23f4121ce",
                            "name": "The operation is forbidden for the current user, please check your privileges",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [],
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "0e237fbf-d843-4fc2-b5d9-af87c61a9e88",
                            "name": "The requested resource not found",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "207fd3e7-a9cd-481a-bd6c-275e99aa4d85",
                            "name": "Internal server error, see details in the returned error message",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "services",
                                        "unmapped",
                                        ":tenantId",
                                        ":type"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "disabled": false,
                                            "description": {
                                                "content": "If set to true, then unmapped values are created for values that do not have a mapping on the tenant. If set to false, then unmapped values are created for all values that are sent in the request.",
                                                "type": "text/plain"
                                            },
                                            "key": "onlyIfNoMapping",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "[\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"code\": \"<string>\",\n    \"source\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"value\": \"<string>\",\n    \"attributes\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"updatedBy\": \"<string>\",\n    \"updateDate\": \"<long>\",\n    \"version\": \"<long>\"\n  }\n]",
                                    "options": {
                                        "raw": {
                                            "headerFamily": "json",
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"errorMessage\": \"<string>\",\n  \"errorCode\": \"<integer>\",\n  \"innerErrorData\": {\n    \"innerErrorData\": {\n      \"value\": \"<Circular reference to #/components/schemas/API Exception detected>\"\n    },\n    \"exception\": \"<string>\",\n    \"stack\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                }
            ]
        }
    ],
    "event": [],
    "variable": [
        {
            "key": "baseUrl",
            "value": "/"
        }
    ],
    "info": {
        "_postman_id": "572d739c-5a5a-47e9-bbbd-ee334609f2fa",
        "name": "Ingest",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
        "description": {
            "content": "Load data into entities, relationships, interactions, crosswalks and reference data.\n\nContact Support:\n Name: Reltio\n Email: support@reltio.com",
            "type": "text/plain"
        }
    }
}